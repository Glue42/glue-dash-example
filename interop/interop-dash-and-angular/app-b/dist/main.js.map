{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/glue42.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Glue42Web } from '@glue42/web';\nimport { Subject } from 'rxjs';\nimport { Glue42Service } from './glue42.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  public appName;\n  public message = '';\n\n  constructor(public readonly glueService: Glue42Service, private readonly zone: NgZone) { }\n\n  public ngOnInit(): void {\n    if (!this.glueService.glueAvailable) {\n      // Ð¢here has been an error during the Glue42 initialization.\n      return;\n    }\n\n    this.registerSendMessage();\n  }\n\n  private registerSendMessage(): void {\n    const methodDefinition: Glue42Web.Interop.MethodDefinition = {\n      name: 'SendMessage'\n    };\n    const invocationHandler = this.sendMessageInvocationHandler.bind(this);\n\n    this.glueService.registerMethod(methodDefinition, invocationHandler)\n      .then(() => console.log(`Method ${methodDefinition.name} registered.`), () => console.warn(`Failed to register method ${methodDefinition.name}`));\n  }\n\n  private sendMessageInvocationHandler({ message }): void {\n    this.zone.run(() => {\n      this.message = message;\n    });\n  }\n}\n","<nav>\n  <h2 id=\"appNameHeading\">\n    Application B (Interoperability between Dash and Angular)\n  </h2>\n\n  <p>The texts below are received from \"SendMessage\" invocations (as arguments):</p>\n\n  <p id=\"message\">\n    {{ message }}\n  </p>\n</nav>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\nimport GlueWeb from '@glue42/web';\nimport { Glue42Ng } from '@glue42/ng';\nimport { Glue42Service } from './glue42.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    Glue42Ng.forRoot({\n      holdInit: true,\n      web: {\n        factory: GlueWeb\n      }\n    })\n  ],\n  providers: [Glue42Service],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Glue42Store } from '@glue42/ng';\r\nimport { Glue42Web } from '@glue42/web';\r\n\r\n@Injectable()\r\nexport class Glue42Service {\r\n  constructor(private readonly glueStore: Glue42Store) { }\r\n\r\n  public get glueAvailable(): boolean {\r\n    return !this.glueStore.getInitError();\r\n  }\r\n\r\n  public registerMethod(\r\n    methodDefinition: Glue42Web.Interop.MethodDefinition,\r\n    callback: (args: any, caller: any) => void | any\r\n  ): Promise<void> {\r\n    if (!this.glueAvailable) {\r\n      return Promise.reject('Glue42 was not initialized.');\r\n    }\r\n\r\n    return this.glueStore.getGlue().interop.register(methodDefinition, callback);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}