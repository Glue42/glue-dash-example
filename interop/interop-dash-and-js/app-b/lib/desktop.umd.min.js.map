{"version":3,"file":"desktop.umd.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../src/app-manager/const/agm-names.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/in-memory.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/agm.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/hotkeys/hotkeys.ts","../src/config.ts","../src/notifications/notification.ts","../src/notifications/main.ts","../src/themes/themes.ts","../src/intents/intents.ts","../src/glue.ts","../src/initInfo.ts","../src/hotkeys/main.ts","../src/themes/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    var _this = this;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metric, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (system.parent === undefined) {\r\n                        return [2];\r\n                    }\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    metric = {\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        type: \"object\",\r\n                        composite: {\r\n                            Description: {\r\n                                type: \"string\",\r\n                                description: \"\",\r\n                            },\r\n                            Value: {\r\n                                type: \"number\",\r\n                                description: \"\",\r\n                            },\r\n                        },\r\n                        description: \"System state\",\r\n                        context: {},\r\n                    };\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [metric],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateSystem = function (system, state) { return __awaiter(_this, void 0, void 0, function () {\r\n        var shadowedUpdateMetric, stateObj, rootMetric;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    shadowedUpdateMetric = {\r\n                        type: \"publish\",\r\n                        values: [{\r\n                                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                                value: {\r\n                                    Description: state.description,\r\n                                    Value: state.state,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(shadowedUpdateMetric);\r\n                    stateObj = composeMsgForRootStateMetric(system);\r\n                    rootMetric = {\r\n                        type: \"publish\",\r\n                        peer_id: connection.peerId,\r\n                        values: [{\r\n                                name: \"/State\",\r\n                                value: {\r\n                                    Description: stateObj.description,\r\n                                    Value: stateObj.value,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(rootMetric);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var createMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone, m, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    m = serializeMetric(metricClone);\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [m],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    if (typeof metricClone.value !== \"undefined\") {\r\n                        updateMetricCore(metricClone);\r\n                    }\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    updateMetricCore(metricClone);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetricCore = function (metric) {\r\n        if (canUpdate()) {\r\n            var value = getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            return session.sendFireAndForget(publishMetricsMsg);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    var canUpdate = function () {\r\n        var _a;\r\n        try {\r\n            var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });\r\n            return func();\r\n        }\r\n        catch (_b) {\r\n            return true;\r\n        }\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing\r\n                    .update(value)\r\n                    .catch(function () { });\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar PerfTracker = (function () {\r\n    function PerfTracker(api, initialPublishTimeout, publishInterval) {\r\n        this.api = api;\r\n        this.lastCount = 0;\r\n        this.initialPublishTimeout = 10 * 1000;\r\n        this.publishInterval = 60 * 1000;\r\n        this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;\r\n        this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;\r\n        this.scheduleCollection();\r\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\r\n    }\r\n    PerfTracker.prototype.scheduleCollection = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.collect();\r\n            setInterval(function () {\r\n                _this.collect();\r\n            }, _this.publishInterval);\r\n        }, this.initialPublishTimeout);\r\n    };\r\n    PerfTracker.prototype.collect = function () {\r\n        try {\r\n            this.collectMemory();\r\n            this.collectEntries();\r\n        }\r\n        catch (_a) {\r\n        }\r\n    };\r\n    PerfTracker.prototype.collectMemory = function () {\r\n        var memory = window.performance.memory;\r\n        this.system.stringMetric(\"memory\", JSON.stringify({\r\n            totalJSHeapSize: memory.totalJSHeapSize,\r\n            usedJSHeapSize: memory.usedJSHeapSize\r\n        }));\r\n    };\r\n    PerfTracker.prototype.collectEntries = function () {\r\n        var allEntries = window.performance.getEntries();\r\n        if (allEntries.length <= this.lastCount) {\r\n            return;\r\n        }\r\n        this.lastCount = allEntries.length;\r\n        this.system.stringMetric(\"entries\", JSON.stringify(allEntries));\r\n    };\r\n    return PerfTracker;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    var rootSystem = repo.root;\r\n    if (!options.disableAutoAppSystem) {\r\n        rootSystem = rootSystem.subSystem(\"App\");\r\n    }\r\n    var api = addFAVSupport(rootSystem);\r\n    initPerf(api, options.pagePerformanceMetrics);\r\n    return api;\r\n});\r\nvar perf;\r\nfunction initPerf(api, config) {\r\n    var _a, _b;\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n    var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;\r\n    if (perfConfig) {\r\n        config = perfConfig;\r\n    }\r\n    if (config === null || config === void 0 ? void 0 : config.enabled) {\r\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\r\n    }\r\n}\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar timers = {};\r\nfunction getAllTimers() {\r\n    return timers;\r\n}\r\nfunction timer (timerName) {\r\n    var existing = timers[timerName];\r\n    if (existing) {\r\n        return existing;\r\n    }\r\n    var marks = [];\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    mark(\"start\", startTime);\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        mark(\"end\", endTime);\r\n        period = endTime - startTime;\r\n        return period;\r\n    }\r\n    function mark(name, time) {\r\n        var currentTime = time !== null && time !== void 0 ? time : now();\r\n        var diff = 0;\r\n        if (marks.length > 0) {\r\n            diff = currentTime - marks[marks.length - 1].time;\r\n        }\r\n        marks.push({ name: name, time: currentTime, diff: diff });\r\n    }\r\n    var timerObj = {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop,\r\n        mark: mark,\r\n        marks: marks\r\n    };\r\n    timers[timerName] = timerObj;\r\n    return timerObj;\r\n}\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this.startupTimer = timer(\"connection\");\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return \"ws \" + this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = failed !== null && failed !== void 0 ? failed : (function () { });\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.startupTimer.mark(\"opening-socket\");\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.startupTimer.mark(\"socket-initiated\");\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.startupTimer.mark(\"ws-opened\");\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        return connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg), e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _c.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _c.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 11;\r\n                    case 11:\r\n                        _c.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _c.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _c.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        var _this = this;\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(function () {\r\n            _this.ping();\r\n        }, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar PromisePlus = function (executor, timeoutMilliseconds, timeoutMessage) {\r\n    return new Promise(function (resolve, reject) {\r\n        var timeout = setTimeout(function () {\r\n            var message = timeoutMessage || \"Promise timeout hit: \" + timeoutMilliseconds;\r\n            reject(message);\r\n        }, timeoutMilliseconds);\r\n        var providedPromise = new Promise(executor);\r\n        providedPromise\r\n            .then(function (result) {\r\n            clearTimeout(timeout);\r\n            resolve(result);\r\n        })\r\n            .catch(function (error) {\r\n            clearTimeout(timeout);\r\n            reject(error);\r\n        });\r\n    });\r\n};\n\nvar WebPlatformTransport = (function () {\r\n    function WebPlatformTransport(settings, logger, identity) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.identity = identity;\r\n        this.parentReady = false;\r\n        this.iAmConnected = false;\r\n        this.rejected = false;\r\n        this.children = [];\r\n        this.parentPingTimeout = 3000;\r\n        this.connectionRequestTimeout = 5000;\r\n        this.defaultTargetString = \"*\";\r\n        this.registry = lib();\r\n        this.messages = {\r\n            connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\r\n            connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\r\n            connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\r\n            parentReady: { name: \"parentReady\", handle: this.handleParentReady.bind(this) },\r\n            parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\r\n            platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\r\n            platformUnload: { name: \"platformUnload\", handle: this.handlePlatformUnload.bind(this) },\r\n            platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\r\n            clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) }\r\n        };\r\n        this.setUpMessageListener();\r\n        this.setUpUnload();\r\n        if (!this.settings.port) {\r\n            this.parent = window.opener || window.top;\r\n            this.parentType = window.opener ? \"opener\" :\r\n                window.name.indexOf(\"#wsp\") !== -1 ? \"workspace\" : \"top\";\r\n        }\r\n    }\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"transportWindowId\", {\r\n        get: function () {\r\n            return this.publicWindowId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.sendObject = function (msg) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.port) {\r\n                    throw new Error(\"Cannot send message, because the port was not opened yet\");\r\n                }\r\n                this.port.postMessage(msg);\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.send = function () {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    WebPlatformTransport.prototype.onConnectedChanged = function (callback) {\r\n        return this.registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"opening a connection to the web platform gateway.\");\r\n                        return [4, this.connect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.notifyStatusChanged(true);\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.name = function () {\r\n        return \"web-platform\";\r\n    };\r\n    WebPlatformTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.connect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.parentReady) {\r\n                            this.logger.debug(\"cancelling connection attempt, because this client's parent has already given a ready signal\");\r\n                            return [2];\r\n                        }\r\n                        if (this.settings.port) {\r\n                            this.logger.debug(\"opening an internal web platform connection\");\r\n                            this.port = this.settings.port;\r\n                            this.publicWindowId = this.settings.windowId;\r\n                            if (this.identity) {\r\n                                this.identity.windowId = this.publicWindowId;\r\n                            }\r\n                            this.port.onmessage = function (event) { return _this.registry.execute(\"onMessage\", event.data); };\r\n                            this.logger.debug(\"internal web platform connection completed\");\r\n                            return [2];\r\n                        }\r\n                        if (!this.parentType || !this.parent) {\r\n                            throw new Error(\"Cannot initiate a connection, because there is no opener, no top and no port.\");\r\n                        }\r\n                        this.logger.debug(\"opening a \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client web platform connection\");\r\n                        return [4, this.waitParent(this.parent, this.parentType)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.initiateRemoteConnection(this.parent, this.parentType)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.debug(\"the \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client is connected\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve, reject) {\r\n            _this.connectionResolve = resolve;\r\n            _this.connectionReject = reject;\r\n            _this.myClientId = shortid();\r\n            var bridgeInstanceId = _this.parentType === \"workspace\" ? window.name.substring(0, window.name.indexOf(\"#wsp\")) : window.name;\r\n            var request = {\r\n                glue42core: {\r\n                    type: _this.messages.connectionRequest.name,\r\n                    clientId: _this.myClientId,\r\n                    clientType: parentType === \"top\" || parentType === \"workspace\" ? \"grandChild\" : \"child\",\r\n                    bridgeInstanceId: bridgeInstanceId\r\n                }\r\n            };\r\n            _this.logger.debug(\"sending connection request to \" + parentType);\r\n            target.postMessage(request, _this.defaultTargetString);\r\n        }, this.connectionRequestTimeout, \"The connection to the opener/top window timed out\");\r\n    };\r\n    WebPlatformTransport.prototype.waitParent = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve) {\r\n            _this.parentPingResolve = resolve;\r\n            var message = {\r\n                glue42core: {\r\n                    type: parentType === \"opener\" ? _this.messages.platformPing.name : _this.messages.parentPing.name\r\n                }\r\n            };\r\n            _this.logger.debug(\"checking for \" + parentType + \" window availability\");\r\n            target.postMessage(message, _this.defaultTargetString);\r\n        }, this.parentPingTimeout, \"Cannot initiate glue, because this window was not opened or created by a glue client\");\r\n    };\r\n    WebPlatformTransport.prototype.setUpMessageListener = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n            if (!data || _this.rejected) {\r\n                return;\r\n            }\r\n            if (!_this.checkMessageTypeValid(data.type)) {\r\n                _this.logger.error(\"cannot handle the incoming glue42 core message, because the type is invalid: \" + data.type);\r\n                return;\r\n            }\r\n            var messageType = data.type;\r\n            _this.logger.debug(\"received valid glue42core message of type: \" + messageType);\r\n            _this.messages[messageType].handle(event);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpUnload = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"beforeunload\", function () {\r\n            var _a, _b;\r\n            var message = {\r\n                glue42core: {\r\n                    type: _this.messages.clientUnload.name,\r\n                    data: {\r\n                        clientId: _this.myClientId,\r\n                        ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                    }\r\n                }\r\n            };\r\n            if (_this.parent) {\r\n                _this.parent.postMessage(message, _this.defaultTargetString);\r\n            }\r\n            (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.handleParentReady = function () {\r\n        this.logger.debug(\"handling the ready signal from the parent, by resoling the pending promise.\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformReady = function () {\r\n        this.logger.debug(\"the web platform gave the ready signal\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (this.myClientId === data.clientId) {\r\n            return this.handleAcceptanceOfMyRequest(data);\r\n        }\r\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\r\n        if (!data.port) {\r\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\r\n            return;\r\n        }\r\n        this.publicWindowId = this.parentType === \"opener\" ? window.name :\r\n            this.parentType === \"top\" ? data.parentWindowId :\r\n                window.name.substring(0, window.name.indexOf(\"#wsp\"));\r\n        if (this.identity && this.parentType !== \"top\") {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        this.port = data.port;\r\n        this.port.onmessage = function (e) { return _this.registry.execute(\"onMessage\", e.data); };\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {\r\n        this.logger.debug(\"handling a connection accepted signal targeted at a grandchild: \" + data.clientId);\r\n        var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });\r\n        if (!child) {\r\n            this.logger.error(\"cannot handle connection accepted for grandchild: \" + data.clientId + \", because there is no grandchild with this id\");\r\n            return;\r\n        }\r\n        child.connected = true;\r\n        this.logger.debug(\"the grandchild connection for \" + data.clientId + \" is set up, forwarding the success message and the gateway port\");\r\n        data.parentWindowId = this.publicWindowId;\r\n        child.source.postMessage(event.data, child.origin, [data.port]);\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRejected = function () {\r\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\r\n        if (this.connectionReject) {\r\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\r\n            delete this.connectionReject;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRequest = function (event) {\r\n        var source = event.source;\r\n        var data = event.data.glue42core;\r\n        if (!data.clientType || data.clientType !== \"grandChild\") {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\r\n        }\r\n        if (!data.clientId) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\r\n        }\r\n        if (this.parentType !== \"opener\" || !this.parent) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\r\n        }\r\n        this.logger.debug(\"handling a connection request for a grandchild: \" + data.clientId);\r\n        this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });\r\n        this.logger.debug(\"grandchild: \" + data.clientId + \" is prepared, forwarding connection request to the platform\");\r\n        this.parent.postMessage(event.data, this.defaultTargetString);\r\n    };\r\n    WebPlatformTransport.prototype.handleParentPing = function (event) {\r\n        if (!this.parentReady) {\r\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        if (!this.iAmConnected) {\r\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.parentReady.name\r\n            }\r\n        };\r\n        var source = event.source;\r\n        this.logger.debug(\"responding to a parent ping with a ready message\");\r\n        source.postMessage(message, event.origin);\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformUnload = function (event) {\r\n        this.logger.debug(\"detected a web platform unload\");\r\n        this.parentReady = false;\r\n        if (this.children.length) {\r\n            this.logger.debug(\"forwarding the platform unload to all known children and starting platform discovery polling\");\r\n            this.children.forEach(function (child) { return child.source.postMessage(event.data, child.origin); });\r\n        }\r\n        this.notifyStatusChanged(false, \"Gateway unloaded\");\r\n    };\r\n    WebPlatformTransport.prototype.handleClientUnload = function (event) {\r\n        var data = event.data.glue42core;\r\n        if (!data.clientId) {\r\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\r\n            return;\r\n        }\r\n        var foundChild = this.children.find(function (child) { return child.grandChildId === data.clientId; });\r\n        if (!foundChild) {\r\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling grandchild unload for id: \" + data.clientId);\r\n        this.children = this.children.filter(function (child) { return child.grandChildId !== data.clientId; });\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformPing = function () {\r\n        this.logger.error(\"cannot handle platform ping, because this is not a platform calls handling component\");\r\n    };\r\n    WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {\r\n        this.iAmConnected = status;\r\n        this.registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {\r\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate];\r\n    };\r\n    WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {\r\n        this.rejected = true;\r\n        this.logger.error(reason);\r\n        var rejection = {\r\n            glue42core: {\r\n                type: this.messages.connectionRejected.name\r\n            }\r\n        };\r\n        source.postMessage(rejection, origin);\r\n    };\r\n    return WebPlatformTransport;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.webPlatform) {\r\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.debug(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            callback(_this.settings.ws || _this.settings.sharedWorker || \"\");\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var identity;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        timer(\"connection\").mark(\"transport-opened\");\r\n                        identity = this.protocol.login(authRequest, reconnect);\r\n                        timer(\"connection\").mark(\"protocol-logged-in\");\r\n                        return [2, identity];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        try {\r\n                            _this.logger.error(\"Message handler failed with \" + error.stack, error);\r\n                        }\r\n                        catch (loggerError) {\r\n                            console.log(\"Message handler failed\", error);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level, error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message, err) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message, error) {\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\" && !error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            var interop = Logger.Interop;\r\n            if (interop) {\r\n                try {\r\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\r\n                        interop.invoke(Logger.InteropMethodName, {\r\n                            msg: \"\" + message,\r\n                            logger: loggerName,\r\n                            level: level\r\n                        });\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                }\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.4.0\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d, _e;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_f) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d, _e;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;\r\n        var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;\r\n        var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;\r\n        var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;\r\n        var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;\r\n        var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else ;\r\n        var replaySpecs = (_e = (_d = configuration.gateway) === null || _d === void 0 ? void 0 : _d.replaySpecs) !== null && _e !== void 0 ? _e : [];\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        return {\r\n            identity: {\r\n                application: uniqueAppName,\r\n                applicationName: appName,\r\n                windowId: windowId,\r\n                instance: instanceId,\r\n                process: pid,\r\n                region: region,\r\n                environment: environment,\r\n                api: ext.version || version\r\n            },\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            webPlatform: webPlatform,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b, _c;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"warn\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        var gdConsoleLevel;\r\n        if (glue42gd) {\r\n            gdConsoleLevel = glue42gd.consoleLogLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,\r\n            publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    var application = getApplication();\r\n    if (typeof window !== \"undefined\") {\r\n        var windowAsAny = window;\r\n        var containerApplication = windowAsAny.htmlContainer ?\r\n            windowAsAny.htmlContainer.containerName + \".\" + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;\r\n        if (containerApplication) {\r\n            application = containerApplication;\r\n        }\r\n    }\r\n    return {\r\n        bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,\r\n        application: application,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,\r\n        contexts: (_d = configuration.contexts) !== null && _d !== void 0 ? _d : true,\r\n        version: ext.version || version,\r\n        libs: (_e = ext.libs) !== null && _e !== void 0 ? _e : [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta, logger) {\r\n    try {\r\n        if (logger === null || logger === void 0 ? void 0 : logger.canPublish(\"trace\")) {\r\n            logger === null || logger === void 0 ? void 0 : logger.trace(\"applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context));\r\n        }\r\n        if (!delta) {\r\n            return context;\r\n        }\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        if (delta.commands) {\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    deletePath(context, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(context, command.value, command.path);\r\n                }\r\n            }\r\n            return context;\r\n        }\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n        return context;\r\n    }\r\n    catch (e) {\r\n        logger === null || logger === void 0 ? void 0 : logger.error(\"error applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context), e);\r\n        return context;\r\n    }\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction setValueToPath(obj, value, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        if (typeof obj[pathArr[i]] !== \"object\") {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    obj[pathArr[i]] = value;\r\n}\r\nfunction isSubset(superObj, subObj) {\r\n    return Object.keys(subObj).every(function (ele) {\r\n        if (typeof subObj[ele] === \"object\") {\r\n            return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});\r\n        }\r\n        return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);\r\n    });\r\n}\r\nfunction deletePath(obj, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            return;\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    delete obj[pathArr[i]];\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._protocolVersion = undefined;\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(GW3Bridge.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            if (!this._protocolVersion) {\r\n                var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === \"context\"; });\r\n                this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;\r\n            }\r\n            return this._protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GW3Bridge.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this.protocolVersion >= 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            _this._contextIdToName[createContextMsg.context_id] = name;\r\n            var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n            contextData.isAnnounced = true;\r\n            contextData.name = name;\r\n            contextData.contextId = createContextMsg.context_id;\r\n            contextData.context = data;\r\n            _this._contextNameToData[name] = contextData;\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name)];\r\n                    case 1:\r\n                        currentContext = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.protocolVersion === 2 ?\r\n                            this.calculateContextDeltaV2(currentContext, delta) :\r\n                            this.calculateContextDeltaV1(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length\r\n                            && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.setPath = function (name, path, value) {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        return this.setPaths(name, [{ path: path, value: value }]);\r\n    };\r\n    GW3Bridge.prototype.setPaths = function (name, pathValues) {\r\n        var _this = this;\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            var obj = {};\r\n            for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {\r\n                var pathValue = pathValues_1[_i];\r\n                setValueToPath(obj, pathValue.value, pathValue.path);\r\n            }\r\n            return this.createContext(name, obj);\r\n        }\r\n        var commands = [];\r\n        for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {\r\n            var pathValue = pathValues_2[_a];\r\n            if (pathValue.value === null) {\r\n                commands.push({ type: \"remove\", path: pathValue.path });\r\n            }\r\n            else {\r\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\r\n            }\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { commands: commands }\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var _a;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return Promise.resolve({});\r\n        }\r\n        if (contextData && !contextData.hasCallbacks()) {\r\n            return new Promise(function (resolve, _) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    this.subscribe(name, function (data, _d, _r, un) {\r\n                        _this.unsubscribe(un);\r\n                        resolve(data);\r\n                    });\r\n                    return [2];\r\n                });\r\n            }); });\r\n        }\r\n        var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};\r\n        return Promise.resolve(context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context && contextData.sentExplicitSubscription) {\r\n                    var clone = deepClone(contextData.context);\r\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                var clone = deepClone(contextData.context);\r\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            var clone = deepClone(contextData.context);\r\n            callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.destroy = function (name) {\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData) {\r\n            return Promise.reject(\"context with \" + name + \" does not exist\");\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_DESTROY_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else ;\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        if (delta.commands) {\r\n            delta.added = delta.updated = delta.reset = {};\r\n            delta.removed = [];\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    if (command.path.indexOf(\".\") === -1) {\r\n                        delta.removed.push(command.path);\r\n                    }\r\n                    setValueToPath(delta.updated, null, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(delta.updated, command.value, command.path);\r\n                }\r\n            }\r\n        }\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {\r\n        var _a, _b;\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\r\n        for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {\r\n            var x = _c[_i];\r\n            if (to[x] !== null) {\r\n                var fromX = from ? from[x] : null;\r\n                if (!deepEqual(fromX, to[x])) {\r\n                    (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: \"set\", path: x, value: to[x] });\r\n                }\r\n            }\r\n            else {\r\n                (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: \"remove\", path: x });\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.update(name, data);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.setPath = function (name, path, data) {\r\n        this.checkName(name);\r\n        this.checkPath(path);\r\n        var isTopLevelPath = path === \"\";\r\n        if (isTopLevelPath) {\r\n            this.checkData(data);\r\n            return this.set(name, data);\r\n        }\r\n        return this._bridge.setPath(name, path, data);\r\n    };\r\n    ContextsModule.prototype.setPaths = function (name, paths) {\r\n        this.checkName(name);\r\n        if (!Array.isArray(paths)) {\r\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\r\n        }\r\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\r\n            var _a = paths_1[_i], path = _a.path, value = _a.value;\r\n            this.checkPath(path);\r\n            var isTopLevelPath = path === \"\";\r\n            if (isTopLevelPath) {\r\n                this.checkData(value);\r\n            }\r\n        }\r\n        return this._bridge.setPaths(name, paths);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Please provide the callback as a function!\");\r\n        }\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.destroy = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.destroy(name);\r\n    };\r\n    Object.defineProperty(ContextsModule.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this._bridge.setPathSupported;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n            throw new Error(\"Please provide the name as a non-empty string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkPath = function (path) {\r\n        if (typeof path !== \"string\") {\r\n            throw new Error(\"Please provide the path as a dot delimited string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkData = function (data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Please provide the data as an object!\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, promise, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    var timeout;\r\n    promise.finally(function () {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        timeout = setTimeout(function () { return reject(error); }, ms);\r\n    });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        else {\r\n            methodFilter = __assign({}, methodFilter);\r\n        }\r\n        return this.getMethods(methodFilter);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    var _a, _b, _c;\r\n                    return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _d.label = 1;\r\n                            case 1:\r\n                                _d.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _d.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _d.sent();\r\n                                method = __assign(__assign({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });\r\n                                errorObj = {\r\n                                    method: method,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    var method = serversMethodPair.methods[0];\r\n                                    var server = serversMethodPair.server;\r\n                                    var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\r\n                                    return Promise.race([\r\n                                        invokePromise,\r\n                                        rejectAfter(timeout, invokePromise, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached for method name: \" + (method === null || method === void 0 ? void 0 : method.name) + \", target instance: \" + JSON.stringify(server.instance) + \", options: \" + JSON.stringify(additionalOptionsCopy),\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _d.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.every(function (prop) {\r\n            var isMatch;\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            switch (prop) {\r\n                case \"objectTypes\":\r\n                    isMatch = (filterValue || []).every(function (filterValueEl) {\r\n                        return (repoMethodValue || []).includes(filterValueEl);\r\n                    });\r\n                    break;\r\n                case \"flags\":\r\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\r\n                    break;\r\n                default:\r\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\r\n            }\r\n            return isMatch;\r\n        });\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = Object.values(current.methods);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var _a;\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n                flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                result = { _value: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(API, instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {};\r\n        this.wrapped.getMethods = function () {\r\n            return API.methodsForInstance(this);\r\n        };\r\n        this.wrapped.getStreams = function () {\r\n            return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;\r\n        var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _a, _b, _c;\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\n\nvar hideMethodSystemFlags = function (method) {\r\n    return __assign(__assign({}, method), { flags: method.flags.metadata || {} });\r\n};\r\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger, API) {\r\n        this.logger = logger;\r\n        this.API = API;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n        var peerId = this.API.instance.peerId;\r\n        this.myServer = {\r\n            id: peerId,\r\n            methods: {},\r\n            instance: this.API.instance,\r\n            wrapper: this.API.unwrappedInstance,\r\n        };\r\n        this.servers[peerId] = this.myServer;\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(this.API, info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var _a;\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var that = this;\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},\r\n            getServers: function () {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        server.methods[method.id] = methodDefinition;\r\n        var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        var clientMethodDefinition = hideMethodSystemFlags(method);\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.hideServerMethodSystemFlags(this.servers[id]);\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _a;\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = (_a = {},\r\n            _a[this.myServer.id] = this.myServer,\r\n            _a);\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (identifier) {\r\n        var allServers = [];\r\n        Object.values(this.servers).forEach(function (server) {\r\n            Object.values(server.methods).forEach(function (method) {\r\n                if (method.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {\r\n        var clientMethods = {};\r\n        Object.entries(server.methods).forEach(function (_a) {\r\n            var name = _a[0], method = _a[1];\r\n            clientMethods[name] = hideMethodSystemFlags(method);\r\n        });\r\n        return __assign(__assign({}, server), { methods: clientMethods });\r\n    };\r\n    ClientRepository.prototype.extractMethodsFromServers = function (servers) {\r\n        var methods = Object.values(servers).reduce(function (clientMethods, server) {\r\n            return __spreadArrays(clientMethods, Object.values(server.methods));\r\n        }, []);\r\n        return methods;\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var _a;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id);\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],\r\n                onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],\r\n                onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        if (\"_tag\" in msg) {\r\n            var invocationId = msg._tag.invocationId;\r\n            var serverId = msg._tag.serverId;\r\n            var server = this.repository.getServerById(serverId);\r\n            var message = msg.reason;\r\n            var context_1 = msg.context;\r\n            return {\r\n                invocationId: invocationId,\r\n                result: context_1,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message: message\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: msg.message,\r\n                status: InvokeStatus.Error,\r\n                error: msg\r\n            };\r\n        }\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n            var sub = existingSubscriptions_1[_i];\r\n            var methodInfo = sub.method;\r\n            var params = Object.assign({}, sub.params);\r\n            logger.info(\"trying to re-subscribe to method \" + methodInfo.name);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n            var method = registeredMethods_1[_a];\r\n            var def = method.definition;\r\n            logger.info(\"re-publishing method \" + def.name);\r\n            if (method.stream) {\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\r\n        this.instance = this.unwrappedInstance.unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    Interop.prototype.waitForMethod = function (name) {\r\n        var pw = new PromiseWrapper();\r\n        var unsubscribe = this.client.methodAdded(function (m) {\r\n            if (m.name === name) {\r\n                unsubscribe();\r\n                pw.resolve(m);\r\n            }\r\n        });\r\n        return pw.promise;\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer(\"glue\");\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            inner.marks = t.marks;\r\n            if (_allowTrace) {\r\n                _logger.trace(name + \" is ready - \" + (t.endTime - t.startTime));\r\n            }\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer(\"connection\");\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                authPromise = glue42gd.getGWToken()\r\n                    .then(function (token) {\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            initTimer.mark(\"auth-promise-resolved\");\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer(\"logger\");\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        if (_logger.canPublish(\"debug\")) {\r\n            _logger.debug(\"initializing glue...\");\r\n        }\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var _a, _b, _c, _d;\r\n        var initTimer = timer(\"metrics\");\r\n        var config = internalConfig.metrics;\r\n        var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;\r\n        var identity = internalConfig.connection.identity;\r\n        var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };\r\n        var disableAutoAppSystem = (_a = (typeof config !== \"boolean\" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;\r\n        _metrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric: canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : \"metrics-service\",\r\n            instance: (_d = (_c = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _c !== void 0 ? _c : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _d !== void 0 ? _d : shortid(),\r\n            disableAutoAppSystem: disableAutoAppSystem,\r\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined\r\n        });\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer(\"interop\");\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer(\"contexts\");\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer(\"bus\");\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer(name);\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _logger === null || _logger === void 0 ? void 0 : _logger.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var all = getAllTimers();\r\n                return Object.keys(all).map(function (key) {\r\n                    var t = all[key];\r\n                    return {\r\n                        name: key,\r\n                        duration: t.endTime - t.startTime,\r\n                        marks: t.marks\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        if (glue.agm) {\r\n            var deprecatedDecorator = function (fn, wrong, proper) {\r\n                return function () {\r\n                    glue.logger.warn(\"glue.js - 'glue.agm.\" + wrong + \"' method is deprecated, use 'glue.interop.\" + proper + \"' instead.\");\r\n                    return fn.apply(glue.agm, arguments);\r\n                };\r\n            };\r\n            var agmAny = glue.agm;\r\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\r\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\r\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\r\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\r\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\r\n        }\r\n        return glue;\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return !arg || typeof arg === \"undefined\";\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { WindowDefinition } from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows.map((hw) => this.covertToWindowDef(hw));\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this.covertToWindowDef(this._ownerWindow);\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n\n  private covertToWindowDef(windowType: any): any {\n    // GD2 + old glue js backward compatible\n    return {\n      type: windowType?.id?.type,\n      name: windowType?.id?.name\n    };\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\nconst gwMessageDestroyPeer = \"destroy-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n    private _windows: Glue42.Windows.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(config: ActivityConfig) {\n        this._config = config;\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._contexts = config.contexts;\n        this._windows = config.windows;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = this._connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (this._windows && typeof this._windows.my() !== \"undefined\") {\n                        this._windows.my().close();\n                        return;\n                    }\n                    if (typeof window !== \"undefined\" && typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" && typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id)\n            .then((id) => {\n                if (!activityId) {\n                    return;\n                }\n                return this.joinActivity(activityId, id, windowDefinition.name)\n                    .then(() => {\n                        return id;\n                    });\n            });\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyPeer,\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            this.dropSubscription(createdSubscription);\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        // G4E-3178 When creating a window in activity, the loading animation doesn't hide - extra property URL\n        const invalidKeys: string[] = [\"url\"];\n\n        const filteredWindowTypeOrConfiguration: any = {};\n\n        Object.keys(windowTypeOrConfiguration).forEach((key) => {\n          if (invalidKeys.indexOf(key) === -1) {\n            filteredWindowTypeOrConfiguration[key] = windowTypeOrConfiguration[key];\n          }\n        });\n        windowDefinition = filteredWindowTypeOrConfiguration as WindowDefinition;\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be an array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const windowDefinitions: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        // a hint that this comes from createStackedWindows\n        windowDefinition.stackedWindow = true;\n        windowDefinition.timeout = timeout;\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n            }\n          }\n        }\n        windowDefinitions.push(windowDefinition);\n      });\n\n      const tasks: Array<Promise<ActivityWindow>> = [];\n      windowDefinitions.forEach((wd) => tasks.push(this.createWindow(activity, wd)));\n\n      Promise.all(tasks).then(resolve).catch(reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      this._activities.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const OnGDShutdownMethodName = \"T42.ACS.OnGDShutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedbackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { ContextParam, InstanceProps, AppProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || true; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: ContextParam, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        const name = this._name;\n        const startTimeout: number = 10000;\n        return new Promise<Glue42.AppManager.Instance>((resolve, reject) => {\n            options = options || {};\n            context = context || {};\n            const waitForAGMInstance = true;\n\n            const waitForApplicationInstance = (id: string) => {\n                // fetch from the current list in app-manager\n                const check = (): Glue42.AppManager.Instance => {\n                    const filtered = this._appManager.instances().filter((i: Glue42.AppManager.Instance) => i.id === id);\n                    let result: Glue42.AppManager.Instance;\n                    // GD2 check - in case of activities we have 2 instances with the same id\n                    if (filtered.length === 2) {\n                        result = filtered[0].isActivityInstance ? filtered[0] : filtered[1];\n                    } else {\n                        result = filtered[0];\n                    }\n                    if (result && waitForAGMInstance) {\n                        if (result.agm) {\n                            return result;\n                        } else {\n                            // if no agm, return undefined so we keep waiting\n                            return undefined;\n                        }\n                    }\n\n                    return result;\n                };\n\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(\"timeout\");\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    // schedule - we need this because there might be more than one\n                    // instance with the same id (activity case) - so this handler\n                    // will kick for the very first\n                    setTimeout(() => {\n                        resolve(check());\n                    }, 1);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n\n                // try to find it in the current list\n                const instances: Glue42.AppManager.Instance = check();\n                if (instances) {\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(instances);\n                }\n            };\n\n            this._agm.invoke(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                },\n                (result) => {\n                    const acsResult: InstanceProps = result.returned && result.returned.Instance_0\n                        ? result.returned.Instance_0\n                        : result.returned;\n\n                    if (acsResult && acsResult.Id) {\n                        if (this._appManager.mode === \"startOnly\") {\n                            // we're in startOnly mode, no stream, so we will simulate the instance\n                            // based on the data received from GD\n                            const instance = this._appManager.handleInstanceStarted(acsResult);\n                            resolve(instance);\n                        } else {\n                            // we received instance from ACS, let's wait until it appears on the stream\n                            waitForApplicationInstance(acsResult.Id);\n                        }\n                    } else {\n                        // we haven't received instance from ACS - this might happen if the app does not\n                        // support tracking instances (e.g. we start internet explorer with some url)\n                        resolve(undefined);\n                    }\n                },\n                (err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { ContextParam, InstanceProps, WindowContext, AgmInstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _isActivityOwner: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(\n        private _id: string,\n        private _appName: string,\n        private _appManager: AppManagerImpl,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get isActivityOwner(): boolean { return this._isActivityOwner; }\n\n    // this property returns a list of activity window instances (not activity instances)\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances().filter((i) =>\n            i.application.type !== \"activity\" && // GD2 backward compatibility -  do not show activity instances into the activity window instances list\n            i.activityId && // glue js 2 and 3 bug and breaking change - they will show non activity window instances as activity in case of activityId === undefined\n            i.activityId === this._activityId);\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        if (!this._activityId) {\n            return undefined;\n        }\n        return this.activityInstances.filter((inst) => (inst as InstanceImpl)?.isActivityOwner)[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        this._isActivityOwner = props.IsActivityOwner;\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        if (props.GD3) {\n            const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n            if (agmInstances) {\n                this._agmInstance = agmInstances[0];\n            }\n        } else {\n            const gdAgmServers: { [key: string]: AgmInstanceProps } = props.AgmServers as { [key: string]: AgmInstanceProps };\n            const propsAgmServer = Object.keys(gdAgmServers)[0];\n            if (!propsAgmServer) {\n                return;\n            }\n            const propsAgm = gdAgmServers[propsAgmServer];\n            this._agmInstance = {\n                machine: propsAgm.machineName,\n                user: propsAgm.userName,\n                environment: propsAgm.environment,\n                application: propsAgm.applicationName,\n            };\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            IsActivityOwner: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    public getContext(): Promise<object> {\n        return Promise.resolve(this.context);\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStarted\", callback, this._instances);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAdded\", callback, Object.values(this._apps));\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { OnGDShutdownMethodName } from \"./const/agm-names\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private _isMethodRegistered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public onShuttingDown = (callback: (arg: { restarting: boolean }) => Promise<void>) => {\n        this.registerMethod();\n        return this._registry.add(\"onShuttingDown\", callback);\n    }\n\n    public restart = (options: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private registerMethod() {\n        if (!this._isMethodRegistered) {\n            this._agm.register(OnGDShutdownMethodName, async (args) => {\n                try {\n                    await Promise.all(this._registry.execute(\"onShuttingDown\", args));\n                } catch (error) {\n                    //\n                }\n            });\n            this._isMethodRegistered = true;\n        }\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\n\nexport const InMemoryStoreCommandMethodName = \"T42.ACS.InMemoryStoreCommand\";\n\nexport type InMemoryStoreCommandArgs = InMemoryImportCommand | InMemoryExportCommand | InMemoryRemoveCommand | InMemoryClearCommand;\n\nexport interface GenericInMemoryCommand<C, A> {\n    command: C;\n    args?: A;\n}\n\ntype InMemoryImportCommand = GenericInMemoryCommand<\"import\", InMemoryImportArgs>;\ninterface InMemoryImportArgs {\n    apps: Glue42.AppManager.Definition[];\n    mode?: \"merge\" | \"replace\";\n}\n\ntype InMemoryRemoveCommand = GenericInMemoryCommand<\"remove\", { apps: string[] }>;\nexport interface InMemoryRemoveArgs {\n    apps: string[];\n}\n\ntype InMemoryExportCommand = GenericInMemoryCommand<\"export\", undefined>;\ntype InMemoryClearCommand = GenericInMemoryCommand<\"clear\", undefined>;\n\nexport interface InMemoryExportResult {\n    apps: Glue42.AppManager.Definition[];\n}\n\nexport class InMemoryStore implements Glue42.AppManager.InMemoryStore {\n\n    constructor(private interop: Glue42Core.Interop.API) {\n    }\n\n    public import(apps: Glue42.AppManager.Definition[], mode?: \"replace\" | \"merge\"): Promise<Glue42.AppManager.ImportResult> {\n        if (!apps || !Array.isArray(apps)) {\n            return Promise.reject(\"invalid apps argument - should be an array of application definitions\");\n        }\n        if (mode && mode !== \"replace\" && mode !== \"merge\") {\n            return Promise.reject(\"invalid mode argument - should be 'replace' or 'merge'\");\n        }\n\n        mode = mode ?? \"replace\";\n        const command: InMemoryImportCommand = {\n            command: \"import\",\n            args: {\n                apps,\n                mode\n            }\n        };\n        return this.interop.invoke<Glue42.AppManager.ImportResult>(InMemoryStoreCommandMethodName, command)\n            .then((r) => r.returned);\n    }\n\n    public export(): Promise<Glue42.AppManager.Definition[]> {\n        return this.interop.invoke<InMemoryExportResult>(InMemoryStoreCommandMethodName, { command: \"export\" })\n            .then((r) => r.returned.apps);\n    }\n\n    public remove(app: string): Promise<void> {\n        if (!app || typeof app !== \"string\") {\n            return Promise.reject(\"invalid app name, should be a string value\");\n        }\n        const command: InMemoryRemoveCommand = {\n            command: \"remove\",\n            args: {\n                apps: [app]\n            }\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public clear(): Promise<void> {\n        const command: InMemoryClearCommand = {\n            command: \"clear\"\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public createAppDef(name: string, url: string): Glue42.AppManager.Definition {\n        if (!url) {\n            url = \"https://google.com\";\n        }\n        return {\n            name,\n            type: \"window\",\n            title: name,\n            details: {\n                url\n            }\n        };\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\nimport { InMemoryStore } from \"./in-memory\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<undefined | {}>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart,\n\n        onShuttingDown: entitlements.onShuttingDown,\n\n        inMemory: new InMemoryStore(agm)\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: (value?: {} | Promise<{}>) => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, agm: Glue42.AGM.API, registry?: CallbackRegistry): WindowWrapper => {\n    const _registry: CallbackRegistry = registry ?? CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context || {};\n    const _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours || {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // is Window sticky enable\n    let _isSticky: boolean = options.isSticky;\n\n    // Window state Collapsed | Expanded\n    let isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    let _placementSettings: Glue42.Windows.PlacementSettings = options.placementSettings;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!id) {\n                const e = new Error(`The window is already closed.`);\n                if (typeof error === \"function\") {\n                    error(e.message);\n                }\n                reject(e);\n                return;\n            }\n            const un = onClose(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.close(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const un = onUrlChanged((url: string, win: Glue42.Windows.GDWindow) => {\n                if (url === win.url) {\n                    un();\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                }\n            });\n            executor.navigate(resultWindow, newUrl)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n            const errMessage = `Invalid style arguments: ${JSON.stringify(style)}`;\n            if (typeof error === \"function\") {\n                error(errMessage);\n                return;\n            }\n            return Promise.reject(new Error(errMessage));\n        }\n\n        if (style && style.focus !== undefined) {\n            if (typeof style.focus !== \"boolean\") {\n                const errMessage = `Focus must be boolean. Currently only focus true is supported ! ${JSON.stringify(style)}`;\n                if (typeof error === \"function\") {\n                    error(errMessage);\n                    return;\n                }\n                return Promise.reject(new Error(errMessage));\n            } else if (style.focus === false) {\n                // tslint:disable-next-line:no-console\n                _logger.warn(\"Focus false is not supported!\");\n            }\n        }\n\n        if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n            const errMessage = `hidden should be boolean`;\n            if (typeof error === \"function\") {\n                error(errMessage);\n                return;\n            }\n            return Promise.reject(new Error(errMessage));\n        }\n\n        for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\"]) {\n            const styleAsAny = style as any;\n            if (prop in style && !util.isNumber(styleAsAny[prop])) {\n                const errMessage = `${prop} should be number`;\n                if (typeof error === \"function\") {\n                    error(errMessage);\n                    return;\n                }\n                return Promise.reject(new Error(errMessage));\n            }\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setStyle(resultWindow, style),\n            success,\n            error\n        );\n    }\n\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (this.onTop === onTop) {\n            const errMessage = `OnTop setting is already set to '${onTop}'`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setOnTop(resultWindow, onTop),\n            success,\n            error\n        );\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n            const errMessage = `Invalid Constraints: ${JSON.stringify(constraints)}`;\n            error(errMessage);\n            return Promise.reject(new Error(errMessage));\n        }\n\n        return utils.callbackifyPromise(\n            () => executor.setSizeConstraints(resultWindow, constraints),\n            success,\n            error\n        );\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise<Glue42.Windows.GDWindow>((resolve, reject) => {\n            if (newTitle === _title) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n                return;\n            }\n            const un = onTitleChanged((title) => {\n                if (title === newTitle) {\n                    un();\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                }\n            });\n            executor.setTitle(resultWindow, newTitle)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setSticky(isSticky: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise<Glue42.Windows.GDWindow>((resolve, reject) => {\n            executor.setSticky(resultWindow, isSticky)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function moveResize(dimensions: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve: (window: Glue42.Windows.GDWindow) => void, reject: (error: string) => void) => {\n            const resolveImmediately = areBoundsEqual(dimensions, _bounds);\n            let isDone = false;\n            const done = () => {\n                if (isDone) {\n                    return;\n                }\n                isDone = true;\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n\n                if (unsubscribeBoundsChanged) {\n                    unsubscribeBoundsChanged();\n                    unsubscribeBoundsChanged = undefined;\n                }\n                if (resolveTimeout) {\n                    clearTimeout(resolveTimeout);\n                    resolveTimeout = undefined;\n                }\n            };\n            let resolveTimeout: any;\n            let unsubscribeBoundsChanged: () => void;\n            if (!resolveImmediately) {\n                unsubscribeBoundsChanged = onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                    if (!areBoundsEqual(dimensions, win.bounds)) {\n                        return;\n                    }\n\n                    done();\n                });\n            }\n\n            // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n            executor.moveResize(resultWindow, dimensions)\n                .then(() => {\n                    // if we're trying to resize with the bounds we already have\n                    if (resolveImmediately) {\n                        done();\n                        return;\n                    }\n\n                    // if no bounds change in the next 1s resolve\n                    resolveTimeout = setTimeout(() => {\n                        done();\n                    }, 1000);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (typeof buttonInfo === \"undefined\") {\n                if (typeof error === \"function\") {\n                    error(\"No button info\");\n                    return;\n                }\n                reject(\"No button info\");\n                return;\n            }\n\n            if (buttonInfo.buttonId === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            if (buttonInfo.imageBase64 === undefined) {\n                if (typeof error === \"function\") {\n                    error(\"No imageBase64\");\n                    return;\n                }\n                reject(\"No imageBase64\");\n                return;\n            }\n            const un = onFrameButtonAdded(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.addFrameButton(resultWindow, buttonInfo)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (buttonId === undefined || buttonId === \"\") {\n                if (typeof error === \"function\") {\n                    error(\"No buttonId\");\n                    return;\n                }\n                reject(\"No buttonId\");\n                return;\n            }\n\n            const un = onFrameButtonRemoved(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n\n            executor.removeFrameButton(resultWindow, buttonId)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n\n        });\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (_focus) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n                return;\n            }\n            const un = onFocusChanged((win: Glue42.Windows.GDWindow) => {\n                if (id === win.id && win.isFocused) {\n                    un();\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                    return;\n                }\n            });\n\n            executor.activate(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (_focus) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n                return;\n            }\n            const un = onFocusChanged((win: Glue42.Windows.GDWindow) => {\n                if (id === win.id && win.isFocused) {\n                    un();\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    return resolve(resultWindow);\n                }\n            });\n            executor.focus(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = _windowState === \"normal\" ? onMaximized : onNormal;\n            const un = currEvent(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n\n                resolve(resultWindow);\n            });\n            executor.maximizeRestore(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (_windowState === \"maximized\") {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n\n            const un = onMaximized((win: Glue42.Windows.GDWindow) => {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                un();\n                resolve(resultWindow);\n            });\n            executor.maximize(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (_windowState === \"normal\") {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n\n            const un = onNormal((win: Glue42.Windows.GDWindow) => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.restore(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (_windowState === \"minimized\") {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n\n            const un = onMinimized((win: Glue42.Windows.GDWindow) => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            });\n            executor.minimize(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            const un = onCollapsed((win: Glue42.Windows.GDWindow) => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n\n                resolve(resultWindow);\n            });\n            executor.collapse(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (!isCollapsed) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            const un = onExpanded(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.expand(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const currEvent = isCollapsed ? onExpanded : onCollapsed;\n            const un = currEvent(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.toggleCollapse(resultWindow)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    async function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        let targetWindowGroup;\n        if (!target) {\n            const e = new Error(`Please specify a target window - ${target}`);\n            if (typeof error === \"function\") {\n                // TODO should call only the error handler?\n                error(e.message);\n                return;\n            }\n            throw e;\n        }\n\n        if (typeof target === \"string\") {\n            const targetWindow = windowStore.get(target);\n            if (!targetWindow) {\n                const e = new Error(`Invalid target parameter or no such window. Invoked with:  ${target}`);\n                if (typeof error === \"function\") {\n                    error(e.message);\n                    return;\n                }\n                throw e;\n            }\n            targetWindowGroup = targetWindow.API.group;\n        } else {\n            targetWindowGroup = target.group;\n        }\n\n        return Promise.all([\n            waitForMyWindowToJoinTargetGroup(targetWindowGroup),\n            executor.snap(resultWindow, target, direction)\n        ])\n            .then(() => {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resultWindow;\n            })\n            .catch((e) => {\n                if (typeof error === \"function\") {\n                    error(e);\n                }\n                return e;\n            });\n    }\n\n    function waitForMyWindowToJoinTargetGroup(targetGroup: Glue42.Windows.Group): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = targetGroup.onWindowAdded((_, window) => {\n                if (resultWindow.id === window.id) {\n                    unsub();\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, index: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let sourceWindowId: string;\n            const targetWindowId: string = resultWindow.id;\n            const errorMessage: string = \"Invalid tab parameter - should be an object with property id or a string. Invoked for source window id:\" + resultWindow.id;\n\n            if (!tab) {\n                reject(errorMessage);\n                return;\n            }\n\n            if (typeof tab === \"string\") {\n                sourceWindowId = tab;\n            } else if (typeof tab.id !== \"undefined\") {\n                sourceWindowId = tab.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n\n            const argsForSend: any = {\n                sourceWindowId,\n                targetWindowId,\n            };\n\n            if (index) {\n                argsForSend.index = index;\n            }\n\n            const sourceWin = windowStore.get(argsForSend.sourceWindowId).API;\n            const un = sourceWin.onAttached((win: Glue42.Windows.GDWindow) => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n\n                resolve(resultWindow);\n            });\n\n            executor.attachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    un();\n                    reject(e);\n                });\n        });\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const argsForSend: any = { windowId: resultWindow.id };\n            const _options: Glue42.Windows.DetachOptions = opt || {};\n\n            if (typeof _options.relativeTo !== \"undefined\") {\n                if (typeof _options.relativeTo === \"string\") {\n                    argsForSend.relativeTo = _options.relativeTo;\n                } else if (typeof _options.relativeTo.id !== \"undefined\") {\n                    argsForSend.relativeTo = _options.relativeTo.id;\n                }\n\n                if (typeof _options.relativeDirection !== \"undefined\") {\n                    argsForSend.relativeDirection = _options.relativeDirection;\n                }\n\n                if (typeof _options.width !== \"undefined\") {\n                    argsForSend.width = _options.width;\n                }\n\n                if (typeof _options.height !== \"undefined\") {\n                    argsForSend.height = _options.height;\n                }\n            }\n\n            if (typeof _options.bounds !== \"undefined\") {\n                argsForSend.bounds = _options.bounds;\n            }\n\n            if (typeof _options.hideTabHeader !== \"undefined\") {\n                argsForSend.hideTabHeader = _options.hideTabHeader;\n            }\n\n            let visibilityChangeHeard = false;\n            let detachedHeard = false;\n\n            const unVisibility = _registry.add(\"frame-attached\", ((win: Glue42.Windows.GDWindow) => {\n                const isVisibilityCorrect = _options.hideTabHeader === undefined || _options.hideTabHeader !== win.isTabHeaderVisible;\n                if (id === win.id && isVisibilityCorrect) {\n                    visibilityChangeHeard = true;\n                    unVisibility();\n                    if (detachedHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unDetached === \"function\") {\n                            unDetached();\n                        }\n                    }\n                }\n            }));\n\n            const unDetached = onDetached((win: Glue42.Windows.GDWindow) => {\n                if (id === win.id) {\n                    detachedHeard = true;\n                    unDetached();\n                    if (visibilityChangeHeard) {\n                        if (typeof success === \"function\") {\n                            success(resultWindow);\n                        }\n                        resolve(resultWindow);\n                        if (typeof unVisibility === \"function\") {\n                            unVisibility();\n                        }\n                    }\n                }\n            });\n\n            executor.detachTab(resultWindow, argsForSend)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    unDetached();\n                    unVisibility();\n                    reject(e);\n                });\n        });\n\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (toBeVisible === _isVisible) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                return resolve(resultWindow);\n            }\n            const un = onVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                un();\n                resolve(resultWindow);\n            });\n            executor.setVisible(resultWindow, toBeVisible)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.showLoader(resultWindow, loader)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.hideLoader(resultWindow)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const un = onContextUpdated(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.updateContext(resultWindow, context)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.lock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (!resultWindow.isLocked) {\n            if (typeof success === \"function\") {\n                success(resultWindow);\n            }\n            return Promise.resolve(resultWindow);\n        }\n\n        return new Promise((resolve, reject) => {\n            executor.unlock(resultWindow)\n                .then(() => waitForLockingChanged())\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function waitForLockingChanged() {\n        return new Promise<void>((resolve) => {\n            const un = onLockingChanged((window: GDWindow) => {\n                if (window.id === resultWindow.id) {\n                    un();\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<string> {\n        return new Promise((resolve, reject) => {\n            // agm.invoke(\"T42.Wnd.GetIcon\", { windowId: resultWindow.id }, \"best\", {}, successHandler, error);\n            executor.getIcon(resultWindow)\n                .then((icon: string) => {\n                    if (typeof success === \"function\") {\n                        success(icon);\n                    }\n                    resolve(icon);\n                })\n                .catch((e) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            executor.setIcon(resultWindow, base64Image)\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const un = onFrameColorChanged(() => {\n                un();\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n                resolve(resultWindow);\n            });\n            executor.setFrameColor(resultWindow, frameColor)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            if (_isTabHeaderVisible === toBeTabHeaderVisible) {\n                if (typeof success === \"function\") {\n                    success(resultWindow);\n                }\n\n                return resolve(resultWindow);\n            }\n            const un = onTabHeaderVisibilityChanged((win: Glue42.Windows.GDWindow) => {\n                if (win.id === id && win.isTabHeaderVisible === toBeTabHeaderVisible) {\n                    if (typeof success === \"function\") {\n                        success(resultWindow);\n                    }\n                    un();\n                    resolve(resultWindow);\n                }\n            });\n            executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible)\n                .catch((e: string) => {\n                    if (typeof error === \"function\") {\n                        error(e);\n                    }\n                    reject(e);\n                });\n        });\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (!tooltip) {\n            throw new Error(`${tooltip} is null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean, mode?: Glue42.Windows.FlashMode): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true,\n            mode: \"auto\"\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        if (typeof mode !== \"undefined\") {\n            flashOptions.mode = mode;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    function print(printOptions: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.print(resultWindow, printOptions);\n    }\n\n    function printToPDF(printToPDFOptions: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        return executor.printToPDF(resultWindow, printToPDFOptions);\n    }\n\n    function ungroup(ungroupOptions?: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const unGroupChanged = onGroupChanged(\n                (win: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => {\n                    if (id === win.id) {\n                        unGroupChanged();\n                        resolve(resultWindow);\n                    }\n                });\n\n            executor.ungroup(resultWindow, ungroupOptions)\n                .catch((e: string) => {\n                    unGroupChanged();\n                    reject(e);\n                });\n        });\n    }\n\n    function place(placementSettings: Glue42.Windows.PlacementSettings): Promise<void> {\n        return executor.place(resultWindow, placementSettings);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        callback(resultWindow.title, resultWindow);\n        return _registry.add(\"onTitleChanged\", callback);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"maximized\", callback);\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"minimized\", callback);\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            callback(resultWindow);\n        }\n        return _registry.add(\"normal\", callback);\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"focus-changed\", callback);\n    }\n\n    function onStickyChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"sticky-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return _registry.add(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        return _registry.add(\"zoom-factor-changed\", callback);\n    }\n\n    function onPlacementSettingsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        return _registry.add(\"placementSettingsChanged\", callback);\n    }\n\n    function onNeighboursChanged(callback: (neighbours: Glue42.Windows.Neighbours, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        return _registry.add(\"neighbours-changed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (resultWindow.id === undefined) {\n            return;\n        }\n        _registry.execute(\"onClose\", resultWindow);\n        resultWindow.id = undefined;\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    function handleWindowChangeState(state: string): void {\n        if (state === \"collapsed\") {\n            isCollapsed = true;\n        } else if (state === \"expanded\") {\n            isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds.top = bounds.top;\n        _bounds.left = bounds.left;\n        _bounds.width = bounds.width;\n        _bounds.height = bounds.height;\n\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleIsStickyChanged(isSticky: boolean): void {\n        _isSticky = isSticky;\n        _registry.execute(\"sticky-changed\", isSticky, resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(neighbours: Neighbours, groupId: string): void {\n        _neighbours = neighbours || {};\n        _registry.execute(\"neighbours-changed\", neighbours, resultWindow);\n        _groupId = groupId;\n        if (resultWindow.groupId !== groupId) {\n            _registry.execute(\"group-changed\", resultWindow);\n        }\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    function handleFrameSelectionChanged(newWindow: string, prevWindow: string): void {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (typeof newWindow !== \"undefined\" && newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n\n        if (_isTabSelected && previousWindow) {\n            const un = previousWindow.onTabSelectionChanged((newWin: Glue42.Windows.GDWindow, prevWin: Glue42.Windows.GDWindow) => {\n                if ((prevWin && prevWin.id) === previousWindow.id) {\n                    un();\n                    _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n                }\n            });\n        } else {\n            _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n        }\n    }\n\n    function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean): void {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    function handleDetached(tabGroupId: string): void {\n        _tabGroupId = tabGroupId;\n        // this tabGroupId is always the same as the current one\n        // the tabGroupId is actually changed in the frame-attached event\n        const un = _registry.add(\"frame-attached\", (win: Glue42.Windows.GDWindow) => {\n            if (win.id === id) {\n                un();\n                _registry.execute(\"detached\", resultWindow);\n            }\n        });\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    function handlePlacementSettingsChanged(placementSettings: Glue42.Windows.PlacementSettings): void {\n        let promise: Promise<Glue42.Displays.Display>;\n        const copy = placementSettings as any;\n        if (!copy.display) {\n            promise = Promise.resolve(undefined);\n        } else {\n            const displayAPI = displayAPIGetter();\n            if (!displayAPI) {\n                // display API is disabled\n                promise = Promise.resolve(undefined);\n            } else {\n                const index = copy.display - 1;\n                promise = new Promise((resolve, reject) => {\n                    displayAPI.all().then((displays) => {\n                        const display = displays.find((d) => d.index === index);\n                        resolve(display);\n                    }).catch(reject);\n                });\n            }\n        }\n\n        promise.then((d) => {\n            copy.display = d;\n            _placementSettings = copy;\n            _registry.execute(\"placementSettingsChanged\", resultWindow);\n        });\n    }\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        _logger.trace(`handle group changed to win: ${id} with group id: ${newGroup.id}`);\n        _group = newGroup;\n        _groupId = newGroup.id;\n        _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n    }\n\n    // This is used to set the relation from window to corespondent group API, it could be undefined, if the window is removed from group\n    function handleGroupAssociation(group: Glue42.Windows.Group) {\n        if (group) {\n            _logger.trace(`setting group to win: ${id} with group id: ${group.id}`);\n        }\n        _group = group;\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        return Object.keys(allWindows).reduce((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    function areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, current: Glue42.Windows.Bounds) {\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < _settings.minHeight) {\n            height = _settings.minHeight;\n        }\n        if (requested.height > _settings.maxHeight) {\n            height = _settings.maxHeight;\n        }\n        if (requested.width < _settings.minWidth) {\n            width = _settings.minWidth;\n        }\n        if (requested.width > _settings.maxWidth) {\n            width = _settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        id,\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n        get groupId() {\n            return _groupId;\n        },\n        get isSticky() {\n            return _isSticky;\n        },\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n            }\n            return undefined;\n        },\n        get placementSettings(): Glue42.Windows.PlacementSettings {\n            return Object.assign({}, _placementSettings);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n        setSticky,\n        print,\n        printToPDF,\n        place,\n        ungroup,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onStickyChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n        onPlacementSettingsChanged,\n        onNeighboursChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            return updateContext(context);\n\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id\n                        ;\n                });\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleGroupAssociation,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged,\n        handleIsStickyChanged,\n        handlePlacementSettingsChanged,\n    };\n\n    return {\n        API: resultWindow,\n        Events: events,\n        Registry: _registry\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory } from \"callback-registry\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public init(\n        agm: Glue42Core.AGM.API,\n        instance: Glue42Core.AGM.Instance | string\n    ) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n\n    public close(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"close\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public navigate(\n        resultWindow: Glue42.Windows.GDWindow,\n        newUrl: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"navigate\", {\n                windowId: resultWindow.id,\n                options: {\n                    url: newUrl\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(\n        resultWindow: Glue42.Windows.GDWindow,\n        style: Glue42.Windows.WindowSettings\n    ): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (style.focus !== undefined && !resultWindow.isFocused) {\n            wait(resultWindow.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (style.hidden !== undefined) {\n            const toBeVisible = !style.hidden;\n            wait(resultWindow.setVisible(toBeVisible));\n        }\n\n        if (style.onTop !== undefined) {\n            wait(resultWindow.setOnTop(style.onTop));\n        }\n\n        if (style.tabTooltip !== undefined || (style as any).tabToolTip !== undefined) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(resultWindow.setTabTooltip(toolTip));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(resultWindow.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(resultWindow.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return resultWindow;\n    }\n\n    public setSizeConstraints(\n        resultWindow: Glue42.Windows.GDWindow,\n        constraints: Glue42.Windows.SizeConstraints\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setSizeConstraints\", {\n                windowId: resultWindow.id,\n                options: constraints\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabToolTip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabToolTip } });\n        return w;\n    }\n\n    public resetButtons(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonsConfig: Glue42.Windows.WindowButtons\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"resetButtons\", {\n                windowId: resultWindow.id,\n                options: buttonsConfig\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n\n    public setOnTop(\n        resultWindow: Glue42.Windows.GDWindow,\n        onTop: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setOnTop\", {\n                windowId: resultWindow.id,\n                options: { onTop }\n            }).then(() => {\n                resolve(resultWindow);\n            }).catch(reject);\n        });\n    }\n    public setTitle(\n        resultWindow: Glue42.Windows.GDWindow,\n        newTitle: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const options = {\n                windowId: resultWindow.id,\n                options: {\n                    title: newTitle\n                }\n            };\n\n            this.execute(\"setTitle\", options)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setSticky(\n        resultWindow: Glue42.Windows.GDWindow,\n        isSticky: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const options = {\n                windowId: resultWindow.id,\n                options: {\n                    isSticky\n                }\n            };\n\n            this.execute(\"setSticky\", options)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public moveResize(\n        resultWindow: Glue42.Windows.GDWindow,\n        dimensions: Partial<Glue42.Windows.Bounds>\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"moveResize\", {\n                windowId: resultWindow.id,\n                options: {\n                    bounds: dimensions\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public addFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonInfo: Glue42.Windows.ButtonInfo\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"addButton\", {\n                windowId: resultWindow.id,\n                options: buttonInfo\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public removeFrameButton(\n        resultWindow: Glue42.Windows.GDWindow,\n        buttonId: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"removeButton\", {\n                windowId: resultWindow.id,\n                options: buttonId\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public activate(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"activate\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public focus(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"focus\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximizeRestore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"maximizeRestore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public maximize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"maximize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public restore(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"restore\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public minimize(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"minimize\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public collapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"collapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public expand(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"expand\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public toggleCollapse(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"toggleCollapse\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public snap(\n        resultWindow: Glue42.Windows.GDWindow,\n        target: string | Glue42.Windows.GDWindow,\n        direction: Glue42.Windows.RelativeDirection\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const sourceWindowId = resultWindow.id;\n            let targetWindowId;\n            const errorMessage =\n                \"Invalid target parameter - should be an object with property id or a string. Invoked for source window id:\" +\n                resultWindow.id;\n            if (!target) {\n                reject(errorMessage);\n                return;\n            }\n            if (typeof target === \"string\") {\n                targetWindowId = target;\n            } else if (typeof target.id !== \"undefined\") {\n                targetWindowId = target.id;\n            } else {\n                reject(errorMessage);\n                return;\n            }\n            const args: any = {\n                targetWindowId\n            };\n\n            if (direction) {\n                args.snappingEdge = direction;\n            }\n            this.execute(\"snap\", {\n                windowId: resultWindow.id,\n                options: args\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public attachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"attachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public detachTab(\n        resultWindow: Glue42.Windows.GDWindow,\n        options: Glue42.Windows.DetachOptions\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"detachTab\", {\n                windowId: resultWindow.id,\n                options\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeVisible: boolean = true\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            let command: string;\n            if (toBeVisible) {\n                command = \"show\";\n            } else {\n                command = \"hide\";\n            }\n\n            this.execute(command, { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public showLoader(\n        resultWindow: Glue42.Windows.GDWindow,\n        loader?: Glue42.Windows.Loader\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"showLoadingAnimation\", { windowId: resultWindow.id, options: loader })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public hideLoader(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"hideLoadingAnimation\", { windowId: resultWindow.id })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public updateContext(\n        resultWindow: Glue42.Windows.GDWindow,\n        context: any\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"updateContext\", {\n                windowId: resultWindow.id,\n                context,\n                replace:\n                    Object.keys(resultWindow.context).length > 0 ? false : true\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public lock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: true\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public unlock(\n        resultWindow: Glue42.Windows.GDWindow\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"lockUnlock\", {\n                windowId: resultWindow.id,\n                options: {\n                    lock: false\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public getIcon(resultWindow: Glue42.Windows.GDWindow): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"getIcon\", {\n                windowId: resultWindow.id,\n                options: {}\n            })\n                .then((result) => {\n                    resolve((result as any).icon);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setIcon(\n        resultWindow: Glue42.Windows.GDWindow,\n        base64Image: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            this.execute(\"setIcon\", {\n                windowId: resultWindow.id,\n                options: {\n                    dataURL: base64Image\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setFrameColor(\n        resultWindow: Glue42.Windows.GDWindow,\n        frameColor: string\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setFrameColor\", {\n                windowId: resultWindow.id,\n                options: {\n                    frameColor\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public setTabHeaderVisible(\n        resultWindow: Glue42.Windows.GDWindow,\n        toBeTabHeaderVisible: boolean\n    ): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            function successHandler(w: Glue42.Windows.GDWindow) {\n                resolve(w);\n            }\n\n            function errorHandler(e: string) {\n                reject(e);\n            }\n\n            this.execute(\"setTabHeaderVisible\", {\n                windowId: resultWindow.id,\n                options: {\n                    toShow: toBeTabHeaderVisible\n                }\n            })\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            return Promise.reject(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async configure(windowId: string, options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        return this.execute(\n            \"configure\",\n            { windowId, options: { ...options } }\n        );\n    }\n\n    public async print(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"print\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n        return resultWindow;\n    }\n    public async printToPDF(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        const filePath: string = (await this.execute(\n            \"printToPDF\",\n            { windowId: resultWindow.id, options: { ...options } }\n        )).filePath;\n\n        return filePath;\n    }\n\n    public async place(window: Glue42.Windows.GDWindow, options: Glue42.Windows.PlacementSettings): Promise<void> {\n        const copy = { ...options } as any;\n        if (copy.display) {\n            // Glue42.Displays.API works with zero based array of displays, which means that the first monitor has index 0\n            // whereas GD works with non zero based array of displays, which means that the first monitor has index 1\n            copy.display = copy.display.index + 1;\n        }\n        return this.execute(\n            \"place\",\n            { windowId: window.id, options: { ...copy } }\n        );\n    }\n\n    public execute(\n        command: string,\n        options: any\n    ): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const args: any = { ...options, command };\n            this.agm\n                .invoke(\"T42.Wnd.Execute\", args, this.agmTarget)\n                .then((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((i: Glue42Core.AGM.InvocationResult<any>) => {\n                    reject(i);\n                });\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(\n        windowId: string,\n        toShow: boolean\n    ): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this.execute(\"setGroupHeaderVisibility\", {\n            windowId,\n            options: {\n                toShow\n            }\n        });\n    }\n\n    public getGroupTitle(windowId: string): Promise<string> {\n        return this.execute(\"getGroupTitle\", {\n            windowId,\n            options: {}\n        }).then((r) => r.title);\n    }\n\n    public setGroupTitle(windowId: string, title: string) {\n        return this.execute(\"setGroupTitle\", {\n            windowId,\n            options: {\n                title\n            }\n        });\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    public ungroup(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const args = {\n                windowId: resultWindow.id,\n                options\n            };\n            this.execute(\"ungroup\", args)\n                .then(() => {\n                    resolve(resultWindow);\n                })\n                .catch((e: string) => {\n                    reject(e);\n                });\n        });\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string) {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo: { [key: string]: WindowWrapper }, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo[id] = win;\n        }\n        return memo;\n    }, {});\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    ShowFlydownData,\n    EventWithResponseData,\n    ResponseTypes,\n    IsStickyChanged\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n    private _displayAPIGetter: () => Glue42.Displays.API;\n\n        constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n        this._displayAPIGetter = displayAPIGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data, resolve);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any, success: (id: string) => void, error: (error: object | string) => void): void {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        // relativeTo fix\n        if (name === undefined) {\n            error({ message: \"The name is undefined\" });\n            return;\n        }\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        this._agm.invoke<{ id: string }>(\"T42.Wnd.Create\", copyOptions, this._agmInstance)\n            .then((message) => {\n                if (message.returned !== undefined) {\n                    const id: string = message.returned.id;\n                    success(id);\n                } else {\n                    error({ message: \"failed to execute T42.Wnd.Create - unknown reason\" });\n                }\n            })\n            .catch(error);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public setGroupHeaderVisible(windowId: string, toShow: boolean): Promise<Glue42Core.AGM.InvocationResult<Glue42.Windows.Group>> {\n        return this._agm.invoke<Glue42.Windows.Group>(\"T42.Wnd.SetGroupHeaderVisible\", {\n            windowId,\n            toShow,\n        }, this._agmInstance);\n    }\n\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const win = this.createWindow(w.id, w);\n                windowStore.markReadyToShow(win.API.id);\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle isSticky changed\n        if (windowInfo.type === \"IsStickyChanged\") {\n            const windowInfoIsStickyChangedChanged = (windowInfo as IsStickyChanged);\n            theWindowEvents.handleIsStickyChanged(windowInfoIsStickyChangedChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data.neighbors, windowInfoCompositionChanged.data.groupId);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            // Getting all windows, except current, with same tabGroupId\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                // Executing event windowAttached to all windows\n                win.Events.handleWindowAttached(theWindow);\n            });\n            this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            theWindowEvents.handleDetached(windowInfo.data.frameId);\n            const winsToBeNotified: { [key: string]: WindowWrapper } = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n\n            Object.keys(winsToBeNotified).forEach((id: string) => {\n                const win = winsToBeNotified[id];\n                win.Events.handleWindowDetached(theWindow);\n            });\n\n            const un = this._registry.add(\"frame-changed\", () => {\n                un();\n                this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n            });\n\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"PlacementSettingsChanged\") {\n            theWindowEvents.handlePlacementSettingsChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const wrapper = windowStore.get(windowId);\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._displayAPIGetter, this._agm, wrapper?.Registry);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            placementSettings: args.placementSettings,\n            isSticky: args.isSticky\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: windowStore.get(streamEvent.windowId).API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupWrapper, WindowWrapper } from \"./types\";\nimport { isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    function addWindow(winId: string): void {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const window: WindowWrapper = windowStore.get(winId);\n            window.Events.handleGroupAssociation(groupObject);\n            _registry.execute(\"window-added\", groupObject, window.API);\n        }\n    }\n\n    function removeWindow(winId: string): void {\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            const window: Glue42.Windows.GDWindow = _mapToWindowObject(winId);\n            _registry.execute(\"window-removed\", groupObject, window);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void): Glue42.Windows.GDWindow {\n        if (isUndefinedOrNull(window)) {\n            return;\n        }\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else {\n            winId = window.id;\n        }\n        const index: number = _windowsId.indexOf(winId);\n        if (index !== -1) {\n            const mappedWindow: Glue42.Windows.GDWindow = _mapToWindowObject(_windowsId[index]);\n            if (typeof success === \"function\") {\n                success(mappedWindow);\n            }\n            return mappedWindow;\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    function showHeader(success?: (group: Glue42.Windows.Group) => void, error?: Glue42Core.AGM.InvokeErrorHandler): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                executor.setGroupHeaderVisible(_windowsId[0], true),\n                waitForHeaderVisibilityChanged()\n            ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function hideHeader(success?: (group: Glue42.Windows.Group) => void, error?: () => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                executor.setGroupHeaderVisible(_windowsId[0], false),\n                waitForHeaderVisibilityChanged()\n            ])\n                .then(() => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    return;\n                });\n        });\n    }\n\n    function getTitle(): Promise<string> {\n        return executor.getGroupTitle(_windowsId[0]);\n    }\n\n    function setTitle(title: string): Promise<void> {\n        return executor.setGroupTitle(_windowsId[0], title);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.captureGroup(_windowsId, captureOptions);\n    }\n\n    function waitForHeaderVisibilityChanged(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsub = onHeaderVisibilityChanged((group) => {\n                unsub();\n                resolve();\n            });\n\n            // setTimeout(() => {\n            //     resolve();\n            // }, 1500);\n        });\n    }\n\n    function execute(command: string, options?: object, success?: (group: Glue42.Windows.Group) => void, error?: (err?: any) => void): Promise<Glue42.Windows.Group> {\n        return new Promise((resolve, reject) => {\n            executor.execute<Glue42.Windows.Group>(command, options)\n                .then((w) => {\n                    if (typeof success === \"function\") {\n                        success(groupObject);\n                    }\n                    resolve(groupObject);\n                })\n                .catch((e: any) => {\n                    reject(e);\n                });\n        });\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        showHeader,\n        hideHeader,\n        getTitle,\n        setTitle,\n        capture,\n        maximize: (success, error) => {\n            return execute(\"maximizeGroup\", { windowId: _windowsId[0] }, success, error);\n        },\n        restore: (success, error) => {\n            return execute(\"restoreGroup\", { windowId: _windowsId[0] }, success, error);\n        },\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal = {\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupInternal,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowsLibrary,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _logger = logger.subLogger(\"groups\");\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        addNewWindow(windows[k]);\n    });\n\n    environment.onCompositionChanged((windowInfo: any) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    windowStore.onAdded((win) => {\n        addNewWindow(win);\n    });\n    windowStore.onRemoved((win) => {\n        removeWindow(win);\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"undefined\") {\n            logger.debug(\"trying to find a group by a window, but winId is undefined\");\n            return;\n        }\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else {\n            windowId = winId.id;\n        }\n        let groupFound: Glue42.Windows.Group;\n        Object.keys(_groups).forEach((groupId: string) => {\n            const group: Glue42.Windows.Group = _groups[groupId].groupAPI;\n            if (group.find(windowId) !== undefined) {\n                groupFound = group;\n                return;\n            }\n        });\n\n        if (typeof success === \"function\") {\n            success(groupFound);\n        }\n\n        return groupFound;\n    }\n\n    // Events\n\n    function onWindowMoved(callback?: (windowId: string, oldGroup: Glue42.Windows.Group, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGetGroup(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteGroup(groupId: string): void {\n        if (_groups.hasOwnProperty(groupId) && typeof _groups[groupId] !== \"undefined\") {\n            if (_groups[groupId].groupAPI.windows.length === 0) {\n                delete _groups[groupId];\n            }\n        }\n    }\n\n    function addNewWindow(win: WindowWrapper) {\n        _logger.trace(`Adding new window ${win.API.id} to win.API.groupId ${win.API.groupId}`);\n        const group = addWindow(win);\n        if (group) {\n            _logger.trace(`handleGroupAssociation ${win.API.id} to group.groupAPI.id ${group.groupAPI.id}`);\n            win.Events.handleGroupAssociation(group.groupAPI);\n        }\n    }\n\n    function addWindow(win: WindowWrapper, groupId?: string): GroupWrapper {\n        const windowGroupId: string = groupId || win.API.groupId;\n        const windowId: string = win.API.id;\n        if (typeof windowGroupId === \"undefined\" || typeof windowId === \"undefined\") {\n            _logger.debug(`trying to add a window without group - winId: ${windowId}`);\n            return;\n        }\n\n        const group = createOrGetGroup(windowGroupId);\n        group.groupInternal.addWindow(windowId);\n        return group;\n    }\n\n    function removeWindow(win: WindowWrapper, groupId?: string) {\n        const windowId: string = win.API.id;\n        const windowGroupId: string = groupId || win.API.groupId;\n        if (typeof windowGroupId !== \"undefined\") {\n            const group = _groups[windowGroupId];\n            group.groupInternal.removeWindow(windowId);\n            win.Events.handleGroupAssociation(undefined);\n            deleteGroup(windowGroupId);\n        }\n    }\n\n    function handleCompositionChanged(windowInfo: any): void {\n        const newGroupId: string = windowInfo.groupId;\n        const windowId: string = windowInfo.windowId;\n        const oldGroup: Glue42.Windows.Group = findGroupByWindow(windowId);\n        const oldGroupId = oldGroup ? oldGroup.id : undefined;\n        _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId}`);\n        if (oldGroupId === newGroupId) {\n            _logger.trace(`handleCompositionChanged newGroupId: ${newGroupId} windowId: ${windowId} oldGroup: ${oldGroupId} are the same - returning...`);\n            return;\n        }\n\n        const win = windowStore.get(windowId) || windowStore.get(windowId);\n        const newGroup = addWindow(win, newGroupId);\n        if (oldGroup) {\n            removeWindow(win, oldGroupId);\n            _registry.execute(\"window-moved\", windowId, oldGroup, newGroupId);\n        }\n        win.Events.handleGroupChanged(newGroup.groupAPI, oldGroup);\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\nimport executor from \"./environment/gd/executor\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, displayAPIGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: object) => void): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n\n            const errorHandler = (errorResponse: object) => {\n                if (typeof error === \"function\") {\n                    error(errorResponse);\n                }\n                reject(errorResponse);\n            };\n\n            const successHandler = (id: string) => {\n                windowStore.waitFor(id)\n                    .then((win) => {\n                        if (typeof success === \"function\") {\n                            success(win.API);\n                        }\n                        resolve(win.API);\n\n                        if (win.API.windowType === \"electron\") {\n                            // on normal windows urlCHanged has to be detected first in orer for the window to be ready\n                            // that causes the user callbacks to miss urlChanged since they are not registered yet\n                            // here we 'replay' the urlChanged event\n                            win.Events.handleUrlChanged(win.API.url);\n                        }\n                    })\n                    .catch(errorHandler);\n            };\n\n            environment.open(name, url, options, successHandler, errorHandler);\n        });\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window && window.API.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        if (typeof success !== \"function\") {\n            return windowsForListing[0];\n        }\n\n        if (windowsForListing.length > 0) {\n            success(windowsForListing[0]);\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function configure(options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        const win = my();\n        const winId = win ? win.id : \"\";\n        return executor.configure(winId, options);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabAttached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabDetached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowFrameColorChanged(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup,\n        configure\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, displayAPIGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter, displayAPIGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry } from \"callback-registry\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private interop: Glue42.Interop.API;\n\n    constructor(private config: Glue42.Layouts.Configuration, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry, private logger: Glue42.Logger.API) {\n        this.interop = config.agm;\n        this.registerRequestMethods();\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse) {\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        // TODO - fix activities typings\n        return (myActivity.owner as any).id === (myWindow as any).id;\n    }\n\n    private registerRequestMethods() {\n        this.interop.register<Glue42.Layouts.SaveRequestContext>(SaveContextMethodName, (args) => {\n            const usersCbs = this.callbacks.execute(\"saveRequested\", args);\n            if (usersCbs?.length > 1) {\n                this.logger.warn(`Multiple subscriptions for \"glue.layouts.onSaveRequested\" - only the first one will be used`);\n            }\n            const requestResult = usersCbs[0] as Glue42.Layouts.SaveRequestResponse;\n            const autoSaveWindowContext = this.config.autoSaveWindowContext;\n\n            if (autoSaveWindowContext) {\n                return { autoSaveWindowContext };\n            }\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult?.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult?.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    /** Version of the layout */\n    public version: string;\n\n    /** Displays of the layout */\n    public displays: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n        this.version = data.version;\n        this.displays = data.displays;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreMessageContext, ACSRestoreMessageInstanceInfo, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: Glue42.Layouts.Configuration, private stream: LayoutsStream, private callbacks: CallbackRegistry, logger: Glue42.Logger.API) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config, config.activityGetter, callbacks, logger);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (!layout.name) {\n                throw Error(\"layout.name argument is required\");\n            }\n\n            if (!layout.type) {\n                layout.type = \"Global\";\n            }\n\n            if (layout.activityId) {\n                layout.type = \"Activity\";\n            }\n\n            if (typeof layout.ignoreHidden === \"undefined\") {\n                layout.ignoreHidden = true; // default to true\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                actIds: [],\n                appIds: [],\n                type: layout.type,\n                context: layout.context,\n                metadata: layout.metadata || {},\n                options: { ignoreLayoutRestrictions: false },\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        throw new Error(\"Current application is not in activity. Can not save activity layout for it\");\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n\n                layoutObject.actIds.push(actId);\n                layoutObject.options = { ignoreLayoutRestrictions: true };\n            } else if (layout.type === \"Global\") {\n                if (this.config.gdMajorVersion === 2) {\n                    let instances: any[] = this.appManager.instances();\n\n                    if (layout.ignoreHidden) {\n                        instances = instances.filter((i) => this.isVisibleWindow(i));\n                    }\n\n                    if (layout.ignoreMyInstance && this.appManager.myInstance) {\n                        instances = instances.filter((i) => i.id !== this.appManager.myInstance.id);\n                    }\n\n                    instances.reduce((prev, current) => {\n                        if (!current.id) {\n                            return prev;\n                        }\n\n                        if (current.inActivity) {\n                            const actId = current.activityId;\n\n                            if (prev.actIds.indexOf(actId) === -1) {\n                                prev.actIds.push(actId);\n                            }\n                        } else {\n                            prev.appIds.push(current.id);\n                        }\n\n                        return prev;\n                    }, layoutObject);\n                } else {\n                    layoutObject.autoCollectApps = true;\n                }\n            } else {\n                throw new Error(\"layout type \" + layout.type + \" not supported\");\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (typeof options === \"undefined\") {\n                throw Error(\"options argument is required\");\n            }\n\n            if (!options.name) {\n                throw Error(\"options.name argument is required\");\n            }\n\n            if (!options.type) {\n                options.type = \"Global\";\n            }\n\n            if (options.activityIdToJoin) {\n                options.type = \"Activity\";\n            }\n\n            if (typeof options.restoreActivityOwner === \"undefined\") {\n                options.restoreActivityOwner = false;\n            }\n\n            if (typeof options.ignoreActivityWindowTypes === \"undefined\") {\n                options.ignoreActivityWindowTypes = [];\n            }\n\n            if (typeof options.setActivityContext === \"undefined\") {\n                options.setActivityContext = true;\n            }\n\n            // if no closeOwnRunning we set closeRunningInstance to true; if\n            if (typeof options.closeRunningInstance === \"undefined\") {\n                if (options.type === \"Global\") {\n                    options.closeRunningInstance = true;\n                } else if (options.type === \"Activity\") {\n                    // we don't close anything in case of activity layout type\n                    options.closeRunningInstance = false;\n                }\n            }\n\n            if (typeof options.reuseWindows === \"undefined\") {\n                options.reuseWindows = true;\n            }\n\n            options.context = options.context || {};\n\n            const t42: ACSRestoreMessageContext = {\n                restoreOptions: {\n                    activityToJoin: options.activityIdToJoin,\n                    setActivityContext: options.setActivityContext,\n                    ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                    restoreActivityOwner: options.restoreActivityOwner,\n                    closeOldWindows: options.closeRunningInstance,\n                    reuseExistingWindows: options.reuseWindows\n                }\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                toClose: [],\n                splash: options.splash\n            };\n\n            // getting instance for closing is necessary only for GD2\n            // G4E-2418 - A global layout including swimlane app can not be restored, when the activities configuration is set to false\n            if (this.config.gdMajorVersion === 2) {\n                if (options.closeRunningInstance) {\n                    arg.toClose = this.getInstancesToClose(options);\n                }\n            }\n\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            arg.context._t42 = t42;\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject, true);\n        });\n    }\n\n    public export(layoutType?: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                let layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                if (layoutType) {\n                    layouts = layouts.filter((l) => l.type = layoutType);\n                }\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            if (!layout.metadata) {\n                throw Error(\"metadata argument is required\");\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                reject(\"context must be an object\");\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, true);\n        });\n    }\n\n    public updateDefaultContext(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                reject(\"context must be an object\");\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateDefaultContext\", request, resolve, reject, true);\n        });\n    }\n\n    public get(name: string, type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout> {\n        const matching = this.list().find((l) => l.name === name && l.type === type);\n        if (!matching) {\n            return Promise.reject(`can not find layout with name=${name} and type=${type}`);\n        }\n        return Promise.resolve(matching);\n    }\n\n    public getAll(type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.LayoutSummary[]> {\n        const matching = this.list().filter((l) => type === l.type);\n        return Promise.resolve(matching);\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private isVisibleWindow(instance: Glue42.AppManager.Instance) {\n        // GD3\n        // allow exes to participate in layouts (TODO - check if the app is layouts aware (has the layouts methods) - if not treat it as not visible window)\n        if (instance.application.type === \"exe\" || instance.application.type === \"node\") {\n            return true;\n        }\n        // allow activities to participate in layouts\n        if (instance.application.type === \"activity\") {\n            return true;\n        }\n\n        if (!instance || !instance.window) {\n            return false;\n        }\n\n        return instance.window.isVisible;\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                reject(\"No result from method \" + methodName);\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                reject(result.returned);\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getInstancesToClose(options: Glue42.Layouts.RestoreOptions) {\n        const instances: ACSRestoreMessageInstanceInfo[] = [];\n        const shellApp = this.appManager.applications().filter((a: any) => a.isShell)[0];\n        const shellApplicationName = shellApp ? shellApp.name : \"AppManager\";\n\n        this.appManager.instances().forEach((i: any) => {\n\n            // ignore my instance\n            if (this.appManager.myInstance && i.id === this.appManager.myInstance.id) {\n                return;\n            }\n\n            // ignore shell app\n            if (i.application.name === shellApplicationName) {\n                return;\n            }\n\n            // ignore hidden windows\n            if (!this.isVisibleWindow(i)) {\n                return;\n            }\n\n            // if activity layout stop only the instances\n            // running in the same activity\n            if (options.type === \"Activity\") {\n                if (i.activityId !== options.activityIdToJoin) {\n                    return;\n                }\n            }\n            instances.push({ application: i.application.name, instance: i.id });\n        });\n\n        return instances;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import Layouts from \"./layouts\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport { Glue42 } from \"../../glue\";\nimport { LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport default function(config: Glue42.Layouts.Configuration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks, logger);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, {id});\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targetting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: {...options}, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        return {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n    }\n}\n\ntype SizeOptions =  Glue42.Displays.ScaleOptions |  Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\n\nexport async function setupAGM(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        return new Promise((resolve, reject) => {\n            if (!this.isChannel(name)) {\n                return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            const contextName = this.createContextName(name);\n\n            this.contexts.subscribe(contextName, (data) => {\n                resolve(data);\n            }).then((unsubscribeFunc) => unsubscribeFunc());\n        });\n    }\n\n    public updateChannel(name: string, data: { name: string, meta: any, data: any }): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    public updateData(name: string, data: any) {\n        const contextName = this.createContextName(name);\n        if (this.contexts.setPathSupported) {\n            const pathValues: Glue42.Contexts.PathValue[] = Object.keys(data).map((key) => {\n                return {\n                    path: `data.` + key,\n                    value: data[key]\n                };\n            });\n            return this.contexts.setPaths(contextName, pathValues);\n        } else {\n            // pre 3.10, note that we update the data property only\n            return this.contexts.update(contextName, { data });\n        }\n    }\n\n    public isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { switchChannel } from \"./agm\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber) {\n        this.shared.subscribe(this.handler.bind(this));\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            if (!this.shared.isChannel(name)) {\n                return Promise.reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            return this.shared.updateData(name, data);\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.updateData(this.currentContext, data);\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    public async join(name: string): Promise<void> {\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave() {\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.updateChannel(info.name, context);\n\n        return context;\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector: boolean = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (name === this.currentContext) {\n            // ignore joining the channel that we're already\n            return;\n        }\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise((resolve, reject) => {\n                let timeoutId: NodeJS.Timeout;\n\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        this.currentContext = name;\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.unsubscribe();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        // @ignore-ed as currently not entirely supported by the framework.\n        add: channels.add.bind(channels),\n\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<LibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject>(options.windows, true),\n        channels: getLibConfig<LibConfigObject>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject>(options.displays, true)\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    public onclick: ((this: Notification, ev: Event) => any) | null;\n    public onclose: ((this: Notification, ev: Event) => any) | null;\n    public onerror: ((this: Notification, ev: Event) => any) | null;\n    public onshow: ((this: Notification, ev: Event) => any) | null;\n    public onaction: ((this: Notification, ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload } from \"./types\";\nimport generate from \"shortid\";\nconst STARTING_INDEX = 0;\n\nexport class Notifications implements Glue42.Notifications.API {\n    private methodsRegistered: boolean = false;\n    private readonly methodNameRoot = \"T42.Notifications.Handler-\" + generate();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n\n    constructor(private interop: Glue42.Interop.API) {\n    }\n\n    public get maxActions(): number {\n        return 2;\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (!this.methodsRegistered) {\n            const bunchOfPromises = [];\n            for (let index = STARTING_INDEX; index < this.maxActions; index++) {\n                bunchOfPromises.push(\n                    this.interop.register(this.methodNameRoot + \"_\" + index, this.handleNotificationAction.bind(this))\n                );\n            }\n\n            await Promise.all(bunchOfPromises);\n            this.methodsRegistered = true;\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            severity: \"Medium\",\n            description: options.body,\n            glueRoutingDetailMethodName: this.methodNameRoot + \"_\" + STARTING_INDEX,\n            actions: [],\n            source: id\n        };\n\n        if (options.actions) {\n            const validActions = options.actions.slice(0, this.maxActions);\n\n            let index = STARTING_INDEX;\n            for (const action of validActions) {\n                const args: GnsNotificationActionPayload = { // this should include user arguments (action.interop?.arguments)\n                    g42notificationId: id,\n                    g42action: action.action,\n                    g42interopMethod: action.interop?.method,\n                    g42interopTarget: action.interop?.target,\n                };\n                // TODO, properly convert between args and GNS value\n                const parameters = Object.keys(args).map((key) => {\n                    const value = (args as any)[key];\n                    return {\n                        name: key,\n                        value: {\n                            stringValue: value\n                        }\n                    };\n                });\n\n                const glueAction: GnsNotificationActionSettings = {\n                    name: this.methodNameRoot + \"_\" + index,\n                    description: action.title,\n                    displayName: action.title,\n                    parameters\n                };\n\n                notification.actions.push(glueAction);\n                index++;\n            }\n        }\n\n        await this.interop.invoke(\"T42.GNS.Publish.RaiseNotification\", { notification });\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n        return g42notification;\n    }\n\n    private handleNotificationAction(args: any) {\n        if (args.g42notificationId) {\n            // action click\n            const payload: GnsNotificationActionPayload = args as GnsNotificationActionPayload;\n            const id = payload.g42notificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onaction\");\n            (event as Glue42.Notifications.ActionEvent).action = payload.g42action;\n            if (notification.onaction) {\n                notification.onaction(event as Glue42.Notifications.ActionEvent);\n            }\n\n            // interop\n            const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n            const actionInterop = actionDefinition.interop;\n            if (actionInterop) {\n                this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        } else if (args.notification && args.notification.source) {\n            // notification click\n            const id = args.notification.source;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onclick\");\n            if (notification.onclick) {\n                notification.onclick(event);\n            }\n\n            // interop\n            const clickInterop = notification.options.clickInterop;\n            if (clickInterop) {\n                this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n    private isSubscribed = false;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        if (this.isSubscribed) {\r\n            return;\r\n        }\r\n        this.isSubscribed = true;\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport { AppDefinition, GetWindowsInfoResult, GetWindowsInfoResultItem, IntentInfo } from \"./types\";\n\nconst GLUE42_FDC3_INTENTS_METHOD_PREFIX = \"Tick42.FDC3.Intents.\";\n\nexport class Intents implements Glue42.Intents.API {\n    constructor(private interop: Glue42.Interop.API, private windows: Glue42.Windows.API, private logger: Glue42.Logger.API) {\n    }\n\n    public async find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent[]> {\n        let intents = await this.all();\n        if (typeof intentFilter === \"undefined\") {\n            return intents;\n        }\n\n        if (typeof intentFilter === \"string\") {\n            return intents.filter((intent) => intent.name === intentFilter);\n        }\n\n        if (typeof intentFilter !== \"object\") {\n            throw new Error(\"Please provide the intentFilter as a string or an object!\");\n        }\n\n        if (intentFilter.contextType) {\n            const ctToLower = intentFilter.contextType.toLowerCase();\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.contextTypes?.some((ct) => ct.toLowerCase() === ctToLower)));\n        }\n\n        if (intentFilter.name) {\n            intents = intents.filter((intent) => intent.name === intentFilter.name);\n        }\n\n        return intents;\n    }\n\n    public async raise(intent: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n\n        if (typeof intent === \"string\") {\n            intent = {\n                intent\n            };\n        }\n\n        const intentName = intent.intent;\n        const intentDef = await this.get(intentName);\n\n        if (typeof intentDef === \"undefined\") {\n            throw new Error(`Intent ${intentName} not found.`);\n        }\n\n        const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === \"app\");\n\n        // Default to \"reuse\" in the case of a dynamic intent and to \"startNew\" if target isn't provided.\n        const target = intent.target || (isDynamicIntent ? \"reuse\" : \"startNew\");\n        // The handler that will execute the intent.\n        let handler: Glue42.Intents.IntentHandler;\n        const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\");\n        if (target === \"startNew\") {\n            handler = anAppHandler;\n        } else if (target === \"reuse\") {\n            const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\");\n            handler = anInstanceHandler || anAppHandler;\n        } else if (target.instance) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\" && intentHandler.instanceId === target.instance);\n        } else if (target.app) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\" && intentHandler.applicationName === target.app);\n        } else {\n            throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);\n        }\n\n        if (!handler) {\n            throw new Error(`Can not raise intent for request ${JSON.stringify(intent)} - can not find intent handler.`);\n        }\n\n        let instanceId = handler.instanceId;\n        if (handler.type === \"app\") {\n            instanceId = await this.startApp(handler.applicationName, intent.options);\n        }\n\n        const result: Partial<Glue42.Intents.IntentResult> = await this.raiseIntentToInstance(instanceId, intentName, intent.context);\n        result.request = intent;\n        result.handler = handler;\n\n        return result as Glue42.Intents.IntentResult;\n    }\n\n    public async all(): Promise<Glue42.Intents.Intent[]> {\n        // Gathers all intents from:\n        // 1. Application definitions\n        // 2. Running instances (application can register dynamic intents by calling `addIntentListener()` that aren't predefined inside of their application definitions)\n        // It also populates intent handlers (actual entities that can handle the intent).\n        let apps: AppDefinition[];\n        try {\n            const result = await this.interop.invoke<{ applications: AppDefinition[] }>(\"T42.ACS.GetApplications\", { withIntentsInfo: true });\n            apps = result.returned.applications;\n        } catch (e) {\n            this.logger.error(`Failed to get the applications!`, e);\n            return [];\n        }\n        const intents: { [key: string]: Glue42.Intents.Intent } = {};\n        const appsWithIntents = apps.filter((app) => app.intents && app.intents.length > 0);\n        //  Gather app handlers from application definitions.\n        for (const app of appsWithIntents) {\n            for (const intentDef of app.intents) {\n                let intent = intents[intentDef.name];\n                if (!intent) {\n                    intent = {\n                        name: intentDef.name,\n                        handlers: [],\n                    };\n                    intents[intentDef.name] = intent;\n                }\n\n                const handler: Glue42.Intents.IntentHandler = {\n                    applicationName: app.name,\n                    applicationTitle: app.title,\n                    applicationDescription: app.caption,\n                    displayName: intentDef.displayName,\n                    contextTypes: intentDef.contexts,\n                    applicationIcon: app.icon,\n                    type: \"app\"\n                };\n\n                intent.handlers.push(handler);\n            }\n        }\n\n        const servers = this.interop.servers();\n        const serverWindowIds = servers.map((server) => server.windowId).filter((serverWindowId) => typeof serverWindowId !== \"undefined\");\n\n        const T42WndGetInfo = \"T42.Wnd.GetInfo\";\n        const isT42WndGetInfoMethodRegistered = this.interop.methods().some((method) => method.name === T42WndGetInfo);\n\n        let windowsInfos: GetWindowsInfoResultItem[];\n        // For backwards compatibility with previous versions of Glue Desktop, the windows' titles will be attempted to be obtained using the Windows API.\n        if (isT42WndGetInfoMethodRegistered) {\n            try {\n                const result = await this.interop.invoke<GetWindowsInfoResult>(T42WndGetInfo, { ids: serverWindowIds });\n                windowsInfos = result.returned.windows;\n            } catch (e) {\n                // Swallow the error. The windows' titles will be attempted to be obtained using the Windows API.\n            }\n        }\n\n        // Discover all running instances that provide intents, and add them to the corresponding intent.\n        for (const server of servers) {\n            await Promise.all(server.getMethods()\n                .filter((method) => method.name.startsWith(GLUE42_FDC3_INTENTS_METHOD_PREFIX))\n                .map(async (method) => {\n                    const intentName = method.name.replace(GLUE42_FDC3_INTENTS_METHOD_PREFIX, \"\");\n                    let intent = intents[intentName];\n                    if (!intent) {\n                        intent = {\n                            name: intentName,\n                            handlers: [],\n                        };\n                        intents[intentName] = intent;\n                    }\n                    const info = method.flags as Glue42.Intents.AddIntentListenerRequest;\n\n                    const app = apps.find((appWithIntents) => appWithIntents.name === server.application);\n                    let appIntent: IntentInfo | undefined;\n                    if (app && app.intents) {\n                        appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);\n                    }\n\n                    const title = await this.windowsIdToTitle(server.windowId, windowsInfos);\n                    const handler: Glue42.Intents.IntentHandler = {\n                        instanceId: server.instance,\n                        applicationName: server.application,\n                        applicationIcon: info.icon || app?.icon,\n                        applicationTitle: app?.title,\n                        applicationDescription: info.description || app?.caption,\n                        displayName: info.displayName || appIntent?.displayName,\n                        contextTypes: info.contextTypes || appIntent?.contexts,\n                        instanceTitle: title,\n                        type: \"instance\"\n                    };\n                    intent.handlers.push(handler);\n                }));\n        }\n\n        return Object.values(intents);\n    }\n\n    public addIntentListener(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): { unsubscribe: () => void } {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n        if (typeof handler !== \"function\") {\n            throw new Error(\"Please provide the handler as a function!\");\n        }\n\n        // `addIntentListener()` is sync.\n        // tslint:disable-next-line:no-console\n        const result: { unsubscribe: () => void } = { unsubscribe: () => console.log(\"Could not unsubscribe!\") };\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\n        const flags = typeof intent === \"string\" ? { intent } : intent;\n\n        this.interop.register({ name: methodName, flags }, (args: Glue42.Intents.IntentContext) => {\n            return handler(args);\n        }).then(() => {\n            result.unsubscribe = () => {\n                this.interop.unregister(methodName);\n            };\n        });\n\n        return result;\n    }\n\n    private async get(intent: string): Promise<Glue42.Intents.Intent> {\n        return (await this.all()).find((registeredIntent) => registeredIntent.name === intent);\n    }\n\n    private async startApp(application: string, options?: Glue42.AppManager.ApplicationStartOptions) {\n        const result = await this.interop.invoke<{ Name: string, Id: string }>(\"T42.ACS.StartApplication\", { Name: application, options });\n        return result.returned.Id;\n    }\n\n    private async raiseIntentToInstance(instanceId: string, intent: string, context?: Glue42.Intents.IntentContext): Promise<{ result: any }> {\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intent}`;\n        let interopServer = this.interop.servers().find((server) => server.instance === instanceId);\n        if (!interopServer) {\n            // Wait 30 sec for the server to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.serverAdded((server) => {\n                    if (server.instance === instanceId) {\n                        interopServer = server;\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop server for instance ${instanceId}`));\n                }, 30 * 1000);\n            }));\n        }\n\n        const method = interopServer.getMethods().find((registeredMethod) => registeredMethod.name === methodName);\n        if (!method) {\n            // Wait 10 sec for the method to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.methodAdded((addedMethod) => {\n                    if (addedMethod.name === methodName) {\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop method ${methodName} for instance ${instanceId}`));\n                }, 10 * 1000);\n            }));\n        }\n\n        const result = await this.interop.invoke(methodName, context, { instance: instanceId });\n\n        return {\n            result: result.returned\n        };\n    }\n\n    private async windowsIdToTitle(id: string, windowsInfos?: GetWindowsInfoResultItem[]): Promise<string> {\n        if (typeof windowsInfos !== \"undefined\") {\n            return windowsInfos.find((windowsInfo) => windowsInfo.id === id)?.title;\n        }\n\n        // The Windows API could be undefined e.g. when running inside of a node environment.\n        const window = this.windows?.findById(id);\n        const title = await window?.getTitle();\n        return title;\n    }\n}\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\nimport { Intents } from \"./intents/intents\";\nimport { InitInfo } from \"./initInfo\";\n\nlet initInfo: InitInfo;\nconst factory = async (options: Glue42.Config): Promise<Glue42.Glue> => {\n    // if running in GD, do not allow creating multiple instance of this API in the same page\n    const glue42gd: Glue42.GDObject = typeof window !== \"undefined\" && window.glue42gd;\n    if (glue42gd) {\n        if (initInfo) {\n            return initInfo.getPromise();\n        } else {\n            initInfo = new InitInfo();\n        }\n    }\n    const g = await factoryCore(options, glue42gd);\n    initInfo?.resolve(g);\n    return g;\n};\n\nconst factoryCore = async (options: Glue42.Config, glue42gd: Glue42.GDObject): Promise<Glue42.Glue> => {\n\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                () => {\n                    return _displays;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"exit\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: glue42gd?.activityInfo?.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode as Glue42.AppManager.Mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const layoutsConfig = glueConfig.layouts as Glue42.Layouts.Configuration;\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: layoutsConfig.mode,\n            autoSaveWindowContext: layoutsConfig.autoSaveWindowContext ?? false,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const channelsAPI = channels(core.contexts, core.agm);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = new Intents(core.agm, _windows, core.logger.subLogger(\"intents\"));\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop);\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    const glueApi = (await CoreFactory(options, ext)) as Glue42.Glue;\n\n    // Decorate the ready glue object with extra functionalities coming from the user-defined libraries.\n    if (Array.isArray(options?.libraries) && options.libraries.length) {\n        await Promise.all(options.libraries.map((lib) => lib(glueApi, options)));\n    }\n\n    return glueApi;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\nfactory.initInfo = initInfo;\n\nexport default factory;\n","import { Glue42 } from \"../glue\";\n\nexport class InitInfo {\n\n    public reject: (reason?: any) => void;\n    public resolve: (value: Glue42.Glue | PromiseLike<Glue42.Glue>) => void;\n    public numberOfCalls: number = 0;\n\n    private promise: Promise<Glue42.Glue>;\n\n    constructor() {\n        this.numberOfCalls = 1;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    public getPromise() {\n        this.numberOfCalls++;\n        return this.promise;\n    }\n\n    public done(g: Glue42.Glue) {\n        this.resolve(g);\n    }\n\n    public error(e: Error) {\n        this.reject(e);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","composeMsgForRootStateMetric","system","merged","flatten","arr","flat","toFlatten","concat","isArray","root","getAggregateState","highestState","sort","state","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","Repository","options","protocol","init","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","catch","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","timestamp","className","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","PerfTracker","api","initialPublishTimeout","publishInterval","lastCount","scheduleCollection","setTimeout","collect","setInterval","collectMemory","collectEntries","memory","performance","JSON","stringify","totalJSHeapSize","usedJSHeapSize","allEntries","getEntries","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","canUpdate","publishMetricsMsg","sendFireAndForget","canUpdateMetric","_b","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","service","instance","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","disableAutoAppSystem","featureMetric","reportingSystem","def","featureMetricFunc","action","payload","addFAVSupport","perfConfig","pagePerformanceMetrics","enabled","initPerf","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","replayArgumentsArr","callbacksForKey","replayArgument","includes","err","allForKey","acc","element","index","execute","argumentsArr","_i","results","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","timers","timer","timerName","marks","endTime","period","startTime","mark","currentTime","diff","timerObj","stop","WebSocketConstructor","require","WebSocket","WS","startupTimer","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","reconnectInterval","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","toJSON","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","err_1","_c","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","globalDomain","subLogger","maxRetries","reconnectAttempts","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","map","all","domainName","domainLogger","bind","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","PromisePlus","executor","timeoutMilliseconds","timeoutMessage","timeout","WebPlatformTransport","parentReady","iAmConnected","children","parentPingTimeout","connectionRequestTimeout","defaultTargetString","connectionAccepted","handle","handleConnectionAccepted","connectionRejected","handleConnectionRejected","connectionRequest","handleConnectionRequest","handleParentReady","parentPing","handleParentPing","platformPing","handlePlatformPing","platformUnload","handlePlatformUnload","platformReady","handlePlatformReady","clientUnload","handleClientUnload","setUpMessageListener","setUpUnload","opener","top","parentType","publicWindowId","windowId","event","waitParent","initiateRemoteConnection","connectionResolve","connectionReject","myClientId","bridgeInstanceId","request","glue42core","clientId","clientType","parentPingResolve","checkMessageTypeValid","messageType","ownWindowId","handleAcceptanceOfMyRequest","handleAcceptanceOfGrandChildRequest","parentWindowId","applicationName","child","find","c","grandChildId","source","origin","rejectConnectionRequest","typeToValidate","rejection","Connection","messageHandlers","ids","_connected","isTrace","inproc","sharedWorker","webPlatform","canPublish","handleConnectionChanged","handleTransportMessage","replaySpecs","replayer","isObjectBasedTransport","trace","strMessage","isLoggedIn","authRequest","distributeMessage","handlers","handlerId","handler","loggerError","log","msgObj","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","publishMessage","compareWith","loggerName","interop","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","GW_MESSAGE_CREATE_CONTEXT","GW_MESSAGE_ACTIVITY_CREATED","GW_MESSAGE_ACTIVITY_DESTROYED","GW_MESSAGE_CONTEXT_CREATED","GW_MESSAGE_CONTEXT_ADDED","GW_MESSAGE_SUBSCRIBE_CONTEXT","GW_MESSAGE_SUBSCRIBED_CONTEXT","GW_MESSAGE_UNSUBSCRIBE_CONTEXT","GW_MESSAGE_DESTROY_CONTEXT","GW_MESSAGE_CONTEXT_DESTROYED","GW_MESSAGE_UPDATE_CONTEXT","GW_MESSAGE_CONTEXT_UPDATED","GW_MESSAGE_JOINED_ACTIVITY","ContextMessageReplaySpec","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","commands","command","deletePath","setValueToPath","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","flags","set","Map","val","what","withWhat","right","left","deepEqual","x","pathArr","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_protocolVersion","_connection","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","contextsDomainInfo","uri","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","currentContext","calculatedDelta","calculateContextDeltaV2","calculateContextDeltaV1","gwResponse","handleUpdated","updaterId","setPath","setPathSupported","setPaths","pathValues","pathValues_1","pathValue","pathValues_2","subscribe","_d","_r","un","unsubscribe","thisCallbackSubscriptionNumber","clone","hadCallbacks","joinedActivity","sentExplicitSubscription","sendSubscribe","subscriptionKey","sendUnsubscribe","destroy","extraData","oldContext","invokeUpdateCallbacks","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","ContextsModule","_bridge","checkName","checkData","checkPath","paths","paths_1","ready","promisify","successCallback","errorCallback","rejectAfter","ms","finally","Client","configuration","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","methodDefinition","serversMethodMap","errorObj","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","supportsStreaming","objectTypes","metadata","called_with","executed_by","returned","serversMethodPair","invId","invokePromise","race","invocationId","getInvocationResultObj","every","getInvokePromise","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","clearInterval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterValueEl","isSubset","superObj","subObj","ele","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","ServerSubscription","subscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","returns","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","API","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","pid","machine","environment","region","hideMethodSystemFlags","ClientRepository","methodsCount","myServer","wrapper","unwrappedInstance","addServer","serverId","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","that","gatewayId","display_name","object_types","input_signature","result_signature","getServersByMethod","clientMethodDefinition","extractMethodsFromServers","hideServerMethodSystemFlags","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","allServers","collectionToReplay","clientMethods","entries","ServerRepository","nextId","getById","SUBSCRIPTION_REQUEST","SUBSCRIPTION_ADDED","SUBSCRIPTION_REMOVED","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","STATUS_AWAITING_ACCEPT","STATUS_SUBSCRIBED","ERR_MSG_SUB_FAILED","ON_CLOSE_MSG_CLIENT_INIT","ClientStreaming","subscriptionsList","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","timeoutId","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","drainSubscriptions","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","readyPromise","existingSubscriptions_1","registeredMethods","registeredMethods_1","handleReconnect","protocolPromise","waitForMethod","MessageBus","publish","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","ext","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","_allowTrace","glueInitTimer","internalConfig","_e","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","_f","getApplication","uid","applicationConfig","instanceId","gwConfig","gateway","gwURL","uniqueAppName","appInstanceId","getConnection","windowAsAny","containerApplication","htmlContainer","containerName","bus","auth","gwToken","getAuth","gdConsoleLevel","defaultLevel","consoleLogLevel","getLogger","contexts","libs","customLogger","prepareConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupInterop","initTimer","agmConfig","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","metricsPublishingEnabledFunc","getMetricsPublishingEnabled","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","glueVer","glueConfig","browser","timing","initTimes","duration","extOptions","enrichGlue","updatePerfData","deprecatedDecorator","wrong","proper","agmAny","method_added","method_removed","server_added","server_method_aded","server_method_removed","_id","ActivityEntity","other","_updateCore","isString","arg","isUndefined","isUndefinedOrNull","isFunction","ifNotUndefined","doWithIt","ownerWindow","helperWindows","_ownerWindow","_helperWindows","ActivityType","hw","covertToWindowDef","_manager","initiate","windowType","appByWindowTypeGetter","_appByWindowTypeGetter","WindowType","getWindows","activity","isIndependent","createWindow","entitiy","entity","eventType","newStatus","oldStatus","EntityEventType","StatusChange","EntityEventContext","ActivityContextChange","ActivityState","_activity","ActivityAGM","_ensureHasAgm","AGM","util.isUndefinedOrNull","windows","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","manager","ownerActivityId","_ownerActivityId","AttachedActivityDescriptor","ownerId","windowIds","frameColor","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","actType","_actType","_status","_context","_ownerId","_agm","Activity","getActivityType","addWindowToActivity","windowTypes","createStackedWindows","leaveWindowFromActivity","setActivityContext","updateActivityContext","subscribeActivityEvents","ns","os","subscribeWindowEvents","subscribeActivityContextChanged","act","stopActivity","attachActivities","subscribeActivitiesAttached","newActId","oldActId","subscribeActivitiesDetached","newAct","originalActivity","allStates","_attached","color","callbacksToWait","underlyingWindow","setFrameColor","LogLevel","GlueLogger","_glueLogger","owner","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","object","exec","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","ActivityWindow","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isVisible","setWindowVisibility","focus","activateWindow","bounds","setWindowBounds","closeWindow","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","ActivityWindowLeftActivity","ActivityStatus","gwMmessageError","gwMessageAddActivityTypes","gwMessageActivityCreated","gwMessageActivityDestroyed","gwMessageActivityInitiated","gwMessageJoinedActivity","gwMessageActivityJoined","gwMessageActivityLeft","gwMessageOwnerChanged","gwMessageAddPeerFactories","gwMessagePeerFactoriesAdded","gwMessagePeerFactoriesRemoved","gwMessagePeerCreated","_config","_windows","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","glue42gd_1","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","EntityEvent","ActivityStatusChangeEventContext","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","my","exit","mode","activity_types","typesToTrack","_activityTypeStatusChangeCallbacks","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","Removed","_windowTypeStatusChangeCallbacks","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","factory_ids","_activityChangeCallbacks","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","removedKeys_1","activityWindowId","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","layout","width","height","cellSize","peer_name","created_id","joinActivity","destroy_peer_id","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","windowDefinitions","visible","cloneOptions","into","merge","newActivityInfo","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","forwardMessageToEventHandler","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","resolveCreatedPromise","rejectCreatedPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","reqId","getRandomRequestId","createdPromise","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","msg1","msg2","msg3","toReturn","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","ActivityContextChangedEventContext","unsubscribeContext","forwardAddedAndRemovedMessagesToEventHandler","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peerFactoryIdAndOwnerIdToWindowType","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","ActivityMy","_w","announcedWindows","myWin","updateContext","setContext","_myActivityJoinedCallbacks","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","_myDetached","_myAttachedTo","_myDetachedFrom","attached","getFrameColor","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","detached","_notifyAttachedTo","_notifyAttached","oldAct","_notifyDetached","_notifyDetachedFrom","signalsToWait","_signals","_callbacks","ReadyMarker","isSet","isError","_error","processNew","_processNew","EntityObservableCollection","items","_items","internalEntity","_updateInternalCollections","_notifyListeners","entityAddedHandler","getByName","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","_beforeDelete","_update","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_dataReadyMarker","_descriptorsMarker","_readyMarker","setCallback","dataErr","announceWindow","_announcedWindows","signal","errCatch","refreshDescriptors","onActivitiesAttached","_handleActivitiesAttached","onActivitiesDetached","_handleActivitiesDetached","onActivityAttachedDescriptorsRefreshed","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","initReady","aw","_getInitialData","ActivityManager","bridgeType","getError","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","registerActivityType","unregisterActivityType","initiateActivity","actId","getOrWait","at","factoryMethod","getName","registerWindowFactory","unregisterWindowFactory","array","predicate","util.some","getAnnouncementInfo","registerWindow","currentWindow","windowEventHandler_1","unsubscribeWindowEvents","wt","window_1","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","invalidKeys_1","filteredWindowTypeOrConfiguration_1","wid","relativeWindowTypes","stackedWindow","tasks","leaveActivity","removedKey","cloneActivity","descriptors","_updateDescriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","_frameColorChangesCallbacks","getActivityTypes","getWindowTypes","getActivities","ac","getActivityWindows","onActivityTypeStatusChange","onWindowTypeStatusChange","onActivityWindowChange","onActivityStatusChange","descriptorAsObjectFromAPI","oldActivityId","newActivityId","getAttachedDescriptors","_my","activityTypes","_getActivityTypesWrapper","subscribeActivityTypeEvents","_getWindowTypesWrapper","registerFactory","unregisterFactory","subscribeWindowTypeEvents","announce","instances","ActivityManagementAPI","subscribeActivityFrameColorChanged","_mgr","ActivityAPI","aware","inActivity","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","ActivityModule","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","GetFunctionalEntitlementMethodName","CanIMethodName","OnEventMethodName","objectValues","objectClone","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","onAppUnavailable","ApplicationImpl","_props","Title","Version","AutoStart","IsShell","Caption","IsHidden","ApplicationName","ActivityWindowType","Arguments","AllowMultiple","IsReady","Icon","IconUrl","SortOrder","UserProperties","autoStart","caption","hidden","container","allowMultiple","Type","Mode","isActivity","styleAttributes","WindowStyleAttributes","searchFor","modeIndex","startModeIndex","stopModeIndex","style","props","Name","Context","Options","acsResult","Instance_0","Id","handleInstanceStarted","unsub","check","filtered","isActivityInstance","onInstanceAgmServerReady","waitForApplicationInstance","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","InstanceImpl","activityInstance","_isActivityOwner","activityInstances","inst","isActivityOwner","activityOwnerInstance","_startUpContext","_title","_isActivityInstance","_inActivity","_agmInstance","ActivityId","IsActivityOwner","updateAgmInstanceFromProps","AgmServers","GD3","agmInstances","gdAgmServers","propsAgmServer","propsAgm","machineName","userName","handleInstanceStopped","_gdMajorVersion","_apps","_instances","instanceId_1","_getAppId","_updateAppFromProps","_getAppOrThrow","updateFromProps","available","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","AppManagerImpl","_getInstanceByIdAndName","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","AgmNames.GetFunctionalEntitlementMethodName","Entitlement","Function","func","AgmNames.CanIMethodName","Result","registerMethod","transformFunction","EntitlementsImpl","_isMethodRegistered","InMemoryStoreCommandMethodName","InMemoryStore","apps","url","details","START_ONLY","SKIP_ICONS","appManager","entitlements","skipIcon","applications","handleAppAdded","snapshot","skipIcons","start","resolveFunc","rejectFunc","resultPromise","AgmNames.OnEventMethodName","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","onShuttingDown","inMemory","CallbackFactory","WindowStore","_pendingWindows","remote","_pendingWindowsStates","urlChanged","targetWindowState","markReadyToShow","waitForTimeoutInMilliseconds","onReadyWindow","fail","displays","monitor","totalOverlap","calculateTotalOverlap","display","max","workingAreaWidth","workingAreaHeight","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","appManagerGetter","displayAPIGetter","_group","resultWindow","_mode","_url","_bounds","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","_isSticky","isSticky","isCollapsed","_windowState","_tabGroupId","tabGroupId","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","_placementSettings","placementSettings","moveResize","dimensions","resolveTimeout","unsubscribeBoundsChanged","resolveImmediately","areBoundsEqual","onBoundsChanged","setVisible","toBeVisible","onVisibilityChanged","onContextUpdated","waitForLockingChanged","onLockingChanged","onTitleChanged","onClose","onUrlChanged","onFrameButtonAdded","onFrameButtonRemoved","onCollapsed","onExpanded","onMaximized","onMinimized","onNormal","onDetached","onFocusChanged","onFrameColorChanged","onTabHeaderVisibilityChanged","onGroupChanged","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","_t42","getWindowInfo","requested","minHeight","maxHeight","minWidth","maxWidth","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","handleWindowClose","handleWindowChangeState","handleTitleChanged","newTitle","handleVisibilityChanged","handleUrlChanged","newUrl","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","isFocused","handleFrameButtonAdded","frameButton","buttonObj","btn","buttonId","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","un_1","onTabSelectionChanged","newWin","prevWin","handleCompositionChanged","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","newGroup","oldGroup","handleGroupAssociation","group","handleAttached","newTabGroupId","tabHeaderVisible","handleDetached","handleWindowAttached","handleWindowDetached","handleZoomFactorChanged","handleIsStickyChanged","handlePlacementSettingsChanged","copy","displayAPI_1","index_1","hostInstance","agmInstance","frameButtons","opened","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","utils","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","collapse","expand","toggleCollapse","activate","setTitle","setStyle","errMessage","callbackifyPromise","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","addFrameButton","buttonInfo","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","targetWindow","targetWindowGroup","targetGroup","onWindowAdded","showLoader","loader","hideLoader","lock","unlock","getIcon","icon","setIcon","base64Image","setTabTooltip","tooltip","attachTab","tab","sourceWindowId","targetWindowId","argsForSend","onAttached","detachTab","opt","_options","hideTabHeader","visibilityChangeHeard","detachedHeard","unVisibility","isVisibilityCorrect","unDetached","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","setSticky","print","printOptions","printToPDF","printToPDFOptions","place","ungroup","ungroupOptions","unGroupChanged","onFrameButtonClicked","onStickyChanged","onWindowAttached","onWindowDetached","onClosing","onRefreshing","prevent","onZoomFactorChanged","onPlacementSettingsChanged","onNeighboursChanged","tabs","allWindows","getURL","getTitle","getBounds","getContext","resizeTo","moveTo","getParentWindow","myParentId","parentInstanceId","getChildWindows","Events","Registry","GDExecutor","agmTarget","stylePromises","wait","tabTooltip","tabToolTip","toolTip","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","snappingEdge","replace","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","clearFlydownArea","cancelCallback","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","filePath","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","getWindowsByTabGroupId","wndId","normalizeInstance","_windowId","_appManagerGetter","_displayAPIGetter","GDEnvironment","caller","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","copyOptions","windowState","handleFlydownBoundsRequested","windowInfo","readyResolve","extendedStreamEvent","getExtendedStreamEvent","windowInfoCreatedEvent","setReadyState","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","setUrlChangedState","windowInfoTitleChanged","windowInfoIsStickyChangedChanged","windowInfoCompositionChanged","neighbors","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","winsToBeNotified_1","oldTabGroupId","winsToBeNotified_2","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","mapToWindowConstructorOptions","isActiveTab","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","waitForHeaderVisibilityChanged","onHeaderVisibilityChanged","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","mappedWindow","isHeaderVisible","showHeader","setGroupHeaderVisible","hideHeader","getGroupTitle","setGroupTitle","captureGroup","onWindowRemoved","groupAPI","groupInternal","addWindow","removeWindow","window_2","_groups","heardForWindowsCounter","findGroupByWindow","groupFound","addNewWindow","windowGroupId","createdGroup","groupFactory","createOrGetGroup","deleteGroup","onCompositionChanged","newGroupId","oldGroupId","onGroupHeaderVisibilityChanged","groupEvents","onAdded","onRemoved","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","gdPromise","rej","envDetector","groupsFactory","myWindow","getIfReady","windowAdded","windowRemoved","errorHandler","waitFor","windowsForListing","findById","onTabAttached","unsubFunc","unsubscribed","tabAttached","onTabDetached","tabDetached","onWindowGotFocus","onWindowLostFocus","onEvent","configure","LayoutStore","condition","layouts","where","randomByte","encode","build","require$$0","activitiesGetter","registerRequestMethods","ContextProvider","context_1","activityIsOwner","usersCbs","requestResult","autoSaveWindowContext","windowContext","activityContext","transformACSLayout","something","accumulator","convertedValue","components","activityGetter","LayoutsAPIImpl","isSlimMode","l","gotSnapshot","verifyNotSlimMode","ignoreHidden","layoutObject","actIds","appIds","ignoreLayoutRestrictions","isVisibleWindow","ignoreMyInstance","autoCollectApps","invokeMethodAndTrack","activityIdToJoin","restoreActivityOwner","ignoreActivityWindowTypes","closeRunningInstance","reuseWindows","t42","restoreOptions","activityToJoin","closeOldWindows","reuseExistingWindows","toClose","splash","getInstancesToClose","store","layoutType","getObjectValues","Layouts","LayoutImpl","newName","oldName","onSaveRequested","skipStreamEvent","agmResult","streamEventReceived","handleResult","shellApp","isShell","shellApplicationName","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","ACSStream","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","removeWhere","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","first","layout1","layout2","restoredLayouts","acsStream","DisplayCommand","callGD","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","switchChannel","channel","swId","newChannel","CONTEXT_PREFIX","SharedContextSubscriber","isChannel","createContextName","___","startsWith","channelContextName","channelName","shared","ChannelsImpl","subsKey","subscribeFor","updateData","channelNames","getContextData","joinCore","leaveCore","changedKey","changed","updateChannel","changeSelector","doesChannelExist","intervalId","sharedContexts","channels","interopLib","leaveNoSelectorSwitch","joinNoSelectorSwitch","setupAGM","onChanged","CommandMethod","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","getLibConfig","defaultMode","trueMode","getModeAsString","actions","badge","dir","image","lang","renotify","requireInteraction","silent","Glue42Notification","Notifications","methodsRegistered","bunchOfPromises","maxActions","methodNameRoot","handleNotificationAction","notification","severity","glueRoutingDetailMethodName","validActions","g42notificationId","g42action","g42interopMethod","g42interopTarget","stringValue","glueAction","validActions_1","g42notification","notifications","payload_1","event_1","Event","onaction","actionInterop","dispatchEvent","event_2","onclick","clickInterop","core","getConfiguration","ThemesImpl","getMethodName","getAll","selected","theme","setMethodName","sharedContextName","getThemesMethodName","setThemesMethodName","isSubscribed","initInfo","GLUE42_FDC3_INTENTS_METHOD_PREFIX","Intents","intentFilter","intents","intent","contextType","ctToLower_1","contextTypes","ct","intentName","intentDef","isDynamicIntent","intentDefHandler","anAppHandler","intentHandler","anInstanceHandler","startApp","raiseIntentToInstance","withIntentsInfo","appsWithIntents","appsWithIntents_1","applicationTitle","applicationDescription","applicationIcon","serverWindowIds","serverWindowId","T42WndGetInfo","windowsInfos","appWithIntents","appIntent","appDefIntent","windowsIdToTitle","instanceTitle","servers_1","registeredIntent","interopServer","registeredMethod","addedMethod","windowsInfo","numberOfCalls","InitInfo","getPromise","factoryCore","createWindows","windowsLogger","getLibLogger","debugLog","WindowsFactory","_displays","createActivities","activityLogger","createAppManager","AppManagerFactory","createLayouts","layoutsConfig","lay","LayoutsFactory","createChannels","channelsAPI","createHotkeys","hotkeysAPI","unregisterAll","isRegistered","createIntents","intentsAPI","createNotifications","notificationsAPI","createDisplaysApi","displaysLogger","DisplayManager","createThemes","themesAPI","themes","getCurrent","select","newLogger","loggerConfig","currentLog","glueFactoryLog","CoreFactory","glueApi","libraries","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"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"}