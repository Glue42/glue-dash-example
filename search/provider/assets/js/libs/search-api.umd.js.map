{"version":3,"file":"search-api.umd.js","sources":["../node_modules/nanoid/index.browser.js","../node_modules/callback-registry/lib/index.js","../src/shared/protocol.ts","../node_modules/decoder-validate/dist/index.es5.js","../src/shared/decoders.ts","../src/controllers/client.ts","../src/shared/constants.ts","../src/controllers/glue.ts","../src/controllers/main.ts","../src/shared/utils.ts","../src/controllers/provider.ts","../src/facade.ts","../src/services/sequelizer.ts","../src/services/limits-tracker.ts","../src/models/client-query.ts","../src/models/provider.ts","../src/models/provider-query.ts","../src/services/publisher.ts","../src/services/model-factory.ts","../src/shared/ioc.ts","../src/index.ts"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","\"use strict\";\nfunction createRegistry(options) {\n    if (options && options.errorHandling\n        && typeof options.errorHandling !== \"function\"\n        && options.errorHandling !== \"log\"\n        && options.errorHandling !== \"silent\"\n        && options.errorHandling !== \"throw\") {\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\n    }\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\n    var callbacks = {};\n    function add(key, callback, replayArgumentsArr) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            callbacksForKey = [];\n            callbacks[key] = callbacksForKey;\n        }\n        callbacksForKey.push(callback);\n        if (replayArgumentsArr) {\n            setTimeout(function () {\n                replayArgumentsArr.forEach(function (replayArgument) {\n                    var _a;\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\n                        try {\n                            if (Array.isArray(replayArgument)) {\n                                callback.apply(undefined, replayArgument);\n                            }\n                            else {\n                                callback.apply(undefined, [replayArgument]);\n                            }\n                        }\n                        catch (err) {\n                            _handleError(err, key);\n                        }\n                    }\n                });\n            }, 0);\n        }\n        return function () {\n            var allForKey = callbacks[key];\n            if (!allForKey) {\n                return;\n            }\n            allForKey = allForKey.reduce(function (acc, element, index) {\n                if (!(element === callback && acc.length === index)) {\n                    acc.push(element);\n                }\n                return acc;\n            }, []);\n            if (allForKey.length === 0) {\n                delete callbacks[key];\n            }\n            else {\n                callbacks[key] = allForKey;\n            }\n        };\n    }\n    function execute(key) {\n        var argumentsArr = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            argumentsArr[_i - 1] = arguments[_i];\n        }\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey || callbacksForKey.length === 0) {\n            return [];\n        }\n        var results = [];\n        callbacksForKey.forEach(function (callback) {\n            try {\n                var result = callback.apply(undefined, argumentsArr);\n                results.push(result);\n            }\n            catch (err) {\n                results.push(undefined);\n                _handleError(err, key);\n            }\n        });\n        return results;\n    }\n    function _handleError(exceptionArtifact, key) {\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\n        if (_userErrorHandler) {\n            _userErrorHandler(errParam);\n            return;\n        }\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\n        if (options) {\n            switch (options.errorHandling) {\n                case \"log\":\n                    return console.error(msg);\n                case \"silent\":\n                    return;\n                case \"throw\":\n                    throw new Error(msg);\n            }\n        }\n        console.error(msg);\n    }\n    function clear() {\n        callbacks = {};\n    }\n    function clearKey(key) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            return;\n        }\n        delete callbacks[key];\n    }\n    return {\n        add: add,\n        execute: execute,\n        clear: clear,\n        clearKey: clearKey\n    };\n}\n;\ncreateRegistry.default = createRegistry;\nmodule.exports = createRegistry;\n//# sourceMappingURL=index.js.map","import { Glue42Search } from \"../../search\";\nimport { LegacySearchResultItem } from \"./types\";\n\nexport const SEARCH_QUERY_STATUSES: {\n    done: \"done\",\n    inProgress: \"in-progress\",\n    error: \"error\"\n} = {\n    done: \"done\",\n    inProgress: \"in-progress\",\n    error: \"error\"\n};\n\nexport const CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS: {\n    info: \"info\",\n    search: \"search\",\n    cancel: \"cancel\"\n} = {\n    info: \"info\",\n    search: \"search\",\n    cancel: \"cancel\"\n};\n\nexport type Operation = \"search\" | \"info\" | \"cancel\";\n\nexport type QueryStatus = \"done\" | \"in-progress\" | \"error\";\n\nexport interface ProtocolSearchResultsBatch {\n    items: (Glue42Search.QueryResult | LegacySearchResultItem)[];\n    provider?: Glue42Search.ProviderData;\n    queryId: string;\n    status: \"in-progress\";\n}\n\nexport interface ProtocolSearchCompleted {\n    items: (Glue42Search.QueryResult | LegacySearchResultItem)[];\n    queryId: string;\n    status: \"done\";\n}\n\nexport interface ProtocolProviderError {\n    items: (Glue42Search.QueryResult | LegacySearchResultItem)[];\n    provider?: Glue42Search.ProviderData;\n    queryId: string;\n    errorMessage: string;\n    status: \"error\";\n}\n\nexport interface ProtocolQueryCancelRequest {\n    operation: \"cancel\",\n    id: string;\n}\n\nexport interface ProtocolProviderInfoRequest {\n    operation: \"info\"\n}\n\nexport interface ProtocolProviderInfoResponse {\n    supportedTypes: string[];\n    providers: Glue42Search.ProviderData[];\n    apiVersion: \"1\";\n}\n\nexport interface ProtocolSearchRequest extends Glue42Search.QueryConfig {\n    operation: \"search\"\n    apiVersion: \"1\"\n}\n\nexport interface ProtocolSearchResponse {\n    id: string;\n}\n","/**\r\n * Wraps values in an `Ok` type.\r\n *\r\n * Example: `ok(5) // => {ok: true, result: 5}`\r\n */\r\nvar ok = function (result) { return ({ ok: true, result: result }); };\r\n/**\r\n * Typeguard for `Ok`.\r\n */\r\nvar isOk = function (r) { return r.ok === true; };\r\n/**\r\n * Wraps errors in an `Err` type.\r\n *\r\n * Example: `err('on fire') // => {ok: false, error: 'on fire'}`\r\n */\r\nvar err = function (error) { return ({ ok: false, error: error }); };\r\n/**\r\n * Typeguard for `Err`.\r\n */\r\nvar isErr = function (r) { return r.ok === false; };\r\n/**\r\n * Create a `Promise` that either resolves with the result of `Ok` or rejects\r\n * with the error of `Err`.\r\n */\r\nvar asPromise = function (r) {\r\n    return r.ok === true ? Promise.resolve(r.result) : Promise.reject(r.error);\r\n};\r\n/**\r\n * Unwraps a `Result` and returns either the result of an `Ok`, or\r\n * `defaultValue`.\r\n *\r\n * Example:\r\n * ```\r\n * Result.withDefault(5, number().run(json))\r\n * ```\r\n *\r\n * It would be nice if `Decoder` had an instance method that mirrored this\r\n * function. Such a method would look something like this:\r\n * ```\r\n * class Decoder<A> {\r\n *   runWithDefault = (defaultValue: A, json: any): A =>\r\n *     Result.withDefault(defaultValue, this.run(json));\r\n * }\r\n *\r\n * number().runWithDefault(5, json)\r\n * ```\r\n * Unfortunately, the type of `defaultValue: A` on the method causes issues\r\n * with type inference on  the `object` decoder in some situations. While these\r\n * inference issues can be solved by providing the optional type argument for\r\n * `object`s, the extra trouble and confusion doesn't seem worth it.\r\n */\r\nvar withDefault = function (defaultValue, r) {\r\n    return r.ok === true ? r.result : defaultValue;\r\n};\r\n/**\r\n * Return the successful result, or throw an error.\r\n */\r\nvar withException = function (r) {\r\n    if (r.ok === true) {\r\n        return r.result;\r\n    }\r\n    else {\r\n        throw r.error;\r\n    }\r\n};\r\n/**\r\n * Given an array of `Result`s, return the successful values.\r\n */\r\nvar successes = function (results) {\r\n    return results.reduce(function (acc, r) { return (r.ok === true ? acc.concat(r.result) : acc); }, []);\r\n};\r\n/**\r\n * Apply `f` to the result of an `Ok`, or pass the error through.\r\n */\r\nvar map = function (f, r) {\r\n    return r.ok === true ? ok(f(r.result)) : r;\r\n};\r\n/**\r\n * Apply `f` to the result of two `Ok`s, or pass an error through. If both\r\n * `Result`s are errors then the first one is returned.\r\n */\r\nvar map2 = function (f, ar, br) {\r\n    return ar.ok === false ? ar :\r\n        br.ok === false ? br :\r\n            ok(f(ar.result, br.result));\r\n};\r\n/**\r\n * Apply `f` to the error of an `Err`, or pass the success through.\r\n */\r\nvar mapError = function (f, r) {\r\n    return r.ok === true ? r : err(f(r.error));\r\n};\r\n/**\r\n * Chain together a sequence of computations that may fail, similar to a\r\n * `Promise`. If the first computation fails then the error will propagate\r\n * through. If it succeeds, then `f` will be applied to the value, returning a\r\n * new `Result`.\r\n */\r\nvar andThen = function (f, r) {\r\n    return r.ok === true ? f(r.result) : r;\r\n};\r\n\r\n\r\nvar result = Object.freeze({\r\n\tok: ok,\r\n\tisOk: isOk,\r\n\terr: err,\r\n\tisErr: isErr,\r\n\tasPromise: asPromise,\r\n\twithDefault: withDefault,\r\n\twithException: withException,\r\n\tsuccesses: successes,\r\n\tmap: map,\r\n\tmap2: map2,\r\n\tmapError: mapError,\r\n\tandThen: andThen\r\n});\r\n\r\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction isEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a === null && b === null) {\r\n        return true;\r\n    }\r\n    if (typeof (a) !== typeof (b)) {\r\n        return false;\r\n    }\r\n    if (typeof (a) === 'object') {\r\n        // Array\r\n        if (Array.isArray(a)) {\r\n            if (!Array.isArray(b)) {\r\n                return false;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return false;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (!isEqual(a[i], b[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        // Hash table\r\n        var keys = Object.keys(a);\r\n        if (keys.length !== Object.keys(b).length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!b.hasOwnProperty(keys[i])) {\r\n                return false;\r\n            }\r\n            if (!isEqual(a[keys[i]], b[keys[i]])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * Type guard for `DecoderError`. One use case of the type guard is in the\r\n * `catch` of a promise. Typescript types the error argument of `catch` as\r\n * `any`, so when dealing with a decoder as a promise you may need to\r\n * distinguish between a `DecoderError` and an error string.\r\n */\r\nvar isDecoderError = function (a) {\r\n    return a.kind === 'DecoderError' && typeof a.at === 'string' && typeof a.message === 'string';\r\n};\r\n/*\r\n * Helpers\r\n */\r\nvar isJsonArray = function (json) { return Array.isArray(json); };\r\nvar isJsonObject = function (json) {\r\n    return typeof json === 'object' && json !== null && !isJsonArray(json);\r\n};\r\nvar typeString = function (json) {\r\n    switch (typeof json) {\r\n        case 'string':\r\n            return 'a string';\r\n        case 'number':\r\n            return 'a number';\r\n        case 'boolean':\r\n            return 'a boolean';\r\n        case 'undefined':\r\n            return 'undefined';\r\n        case 'object':\r\n            if (json instanceof Array) {\r\n                return 'an array';\r\n            }\r\n            else if (json === null) {\r\n                return 'null';\r\n            }\r\n            else {\r\n                return 'an object';\r\n            }\r\n        default:\r\n            return JSON.stringify(json);\r\n    }\r\n};\r\nvar expectedGot = function (expected, got) {\r\n    return \"expected \" + expected + \", got \" + typeString(got);\r\n};\r\nvar printPath = function (paths) {\r\n    return paths.map(function (path) { return (typeof path === 'string' ? \".\" + path : \"[\" + path + \"]\"); }).join('');\r\n};\r\nvar prependAt = function (newAt, _a) {\r\n    var at = _a.at, rest = __rest(_a, [\"at\"]);\r\n    return (__assign({ at: newAt + (at || '') }, rest));\r\n};\r\n/**\r\n * Decoders transform json objects with unknown structure into known and\r\n * verified forms. You can create objects of type `Decoder<A>` with either the\r\n * primitive decoder functions, such as `boolean()` and `string()`, or by\r\n * applying higher-order decoders to the primitives, such as `array(boolean())`\r\n * or `dict(string())`.\r\n *\r\n * Each of the decoder functions are available both as a static method on\r\n * `Decoder` and as a function alias -- for example the string decoder is\r\n * defined at `Decoder.string()`, but is also aliased to `string()`. Using the\r\n * function aliases exported with the library is recommended.\r\n *\r\n * `Decoder` exposes a number of 'run' methods, which all decode json in the\r\n * same way, but communicate success and failure in different ways. The `map`\r\n * and `andThen` methods modify decoders without having to call a 'run' method.\r\n *\r\n * Alternatively, the main decoder `run()` method returns an object of type\r\n * `Result<A, DecoderError>`. This library provides a number of helper\r\n * functions for dealing with the `Result` type, so you can do all the same\r\n * things with a `Result` as with the decoder methods.\r\n */\r\nvar Decoder = /** @class */ (function () {\r\n    /**\r\n     * The Decoder class constructor is kept private to separate the internal\r\n     * `decode` function from the external `run` function. The distinction\r\n     * between the two functions is that `decode` returns a\r\n     * `Partial<DecoderError>` on failure, which contains an unfinished error\r\n     * report. When `run` is called on a decoder, the relevant series of `decode`\r\n     * calls is made, and then on failure the resulting `Partial<DecoderError>`\r\n     * is turned into a `DecoderError` by filling in the missing information.\r\n     *\r\n     * While hiding the constructor may seem restrictive, leveraging the\r\n     * provided decoder combinators and helper functions such as\r\n     * `andThen` and `map` should be enough to build specialized decoders as\r\n     * needed.\r\n     */\r\n    function Decoder(decode) {\r\n        var _this = this;\r\n        this.decode = decode;\r\n        /**\r\n         * Run the decoder and return a `Result` with either the decoded value or a\r\n         * `DecoderError` containing the json input, the location of the error, and\r\n         * the error message.\r\n         *\r\n         * Examples:\r\n         * ```\r\n         * number().run(12)\r\n         * // => {ok: true, result: 12}\r\n         *\r\n         * string().run(9001)\r\n         * // =>\r\n         * // {\r\n         * //   ok: false,\r\n         * //   error: {\r\n         * //     kind: 'DecoderError',\r\n         * //     input: 9001,\r\n         * //     at: 'input',\r\n         * //     message: 'expected a string, got 9001'\r\n         * //   }\r\n         * // }\r\n         * ```\r\n         */\r\n        this.run = function (json) {\r\n            return mapError(function (error) { return ({\r\n                kind: 'DecoderError',\r\n                input: json,\r\n                at: 'input' + (error.at || ''),\r\n                message: error.message || ''\r\n            }); }, _this.decode(json));\r\n        };\r\n        /**\r\n         * Run the decoder as a `Promise`.\r\n         */\r\n        this.runPromise = function (json) { return asPromise(_this.run(json)); };\r\n        /**\r\n         * Run the decoder and return the value on success, or throw an exception\r\n         * with a formatted error string.\r\n         */\r\n        this.runWithException = function (json) { return withException(_this.run(json)); };\r\n        /**\r\n         * Construct a new decoder that applies a transformation to the decoded\r\n         * result. If the decoder succeeds then `f` will be applied to the value. If\r\n         * it fails the error will propagated through.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * number().map(x => x * 5).run(10)\r\n         * // => {ok: true, result: 50}\r\n         * ```\r\n         */\r\n        this.map = function (f) {\r\n            return new Decoder(function (json) { return map(f, _this.decode(json)); });\r\n        };\r\n        /**\r\n         * Chain together a sequence of decoders. The first decoder will run, and\r\n         * then the function will determine what decoder to run second. If the result\r\n         * of the first decoder succeeds then `f` will be applied to the decoded\r\n         * value. If it fails the error will propagate through.\r\n         *\r\n         * This is a very powerful method -- it can act as both the `map` and `where`\r\n         * methods, can improve error messages for edge cases, and can be used to\r\n         * make a decoder for custom types.\r\n         *\r\n         * Example of adding an error message:\r\n         * ```\r\n         * const versionDecoder = valueAt(['version'], number());\r\n         * const infoDecoder3 = object({a: boolean()});\r\n         *\r\n         * const decoder = versionDecoder.andThen(version => {\r\n         *   switch (version) {\r\n         *     case 3:\r\n         *       return infoDecoder3;\r\n         *     default:\r\n         *       return fail(`Unable to decode info, version ${version} is not supported.`);\r\n         *   }\r\n         * });\r\n         *\r\n         * decoder.run({version: 3, a: true})\r\n         * // => {ok: true, result: {a: true}}\r\n         *\r\n         * decoder.run({version: 5, x: 'abc'})\r\n         * // =>\r\n         * // {\r\n         * //   ok: false,\r\n         * //   error: {... message: 'Unable to decode info, version 5 is not supported.'}\r\n         * // }\r\n         * ```\r\n         *\r\n         * Example of decoding a custom type:\r\n         * ```\r\n         * // nominal type for arrays with a length of at least one\r\n         * type NonEmptyArray<T> = T[] & { __nonEmptyArrayBrand__: void };\r\n         *\r\n         * const nonEmptyArrayDecoder = <T>(values: Decoder<T>): Decoder<NonEmptyArray<T>> =>\r\n         *   array(values).andThen(arr =>\r\n         *     arr.length > 0\r\n         *       ? succeed(createNonEmptyArray(arr))\r\n         *       : fail(`expected a non-empty array, got an empty array`)\r\n         *   );\r\n         * ```\r\n         */\r\n        this.andThen = function (f) {\r\n            return new Decoder(function (json) {\r\n                return andThen(function (value) { return f(value).decode(json); }, _this.decode(json));\r\n            });\r\n        };\r\n        /**\r\n         * Add constraints to a decoder _without_ changing the resulting type. The\r\n         * `test` argument is a predicate function which returns true for valid\r\n         * inputs. When `test` fails on an input, the decoder fails with the given\r\n         * `errorMessage`.\r\n         *\r\n         * ```\r\n         * const chars = (length: number): Decoder<string> =>\r\n         *   string().where(\r\n         *     (s: string) => s.length === length,\r\n         *     `expected a string of length ${length}`\r\n         *   );\r\n         *\r\n         * chars(5).run('12345')\r\n         * // => {ok: true, result: '12345'}\r\n         *\r\n         * chars(2).run('HELLO')\r\n         * // => {ok: false, error: {... message: 'expected a string of length 2'}}\r\n         *\r\n         * chars(12).run(true)\r\n         * // => {ok: false, error: {... message: 'expected a string, got a boolean'}}\r\n         * ```\r\n         */\r\n        this.where = function (test, errorMessage) {\r\n            return _this.andThen(function (value) { return (test(value) ? Decoder.succeed(value) : Decoder.fail(errorMessage)); });\r\n        };\r\n    }\r\n    /**\r\n     * Decoder primitive that validates strings, and fails on all other input.\r\n     */\r\n    Decoder.string = function () {\r\n        return new Decoder(function (json) {\r\n            return typeof json === 'string'\r\n                ? ok(json)\r\n                : err({ message: expectedGot('a string', json) });\r\n        });\r\n    };\r\n    /**\r\n     * Decoder primitive that validates numbers, and fails on all other input.\r\n     */\r\n    Decoder.number = function () {\r\n        return new Decoder(function (json) {\r\n            return typeof json === 'number'\r\n                ? ok(json)\r\n                : err({ message: expectedGot('a number', json) });\r\n        });\r\n    };\r\n    /**\r\n     * Decoder primitive that validates booleans, and fails on all other input.\r\n     */\r\n    Decoder.boolean = function () {\r\n        return new Decoder(function (json) {\r\n            return typeof json === 'boolean'\r\n                ? ok(json)\r\n                : err({ message: expectedGot('a boolean', json) });\r\n        });\r\n    };\r\n    Decoder.constant = function (value) {\r\n        return new Decoder(function (json) {\r\n            return isEqual(json, value)\r\n                ? ok(value)\r\n                : err({ message: \"expected \" + JSON.stringify(value) + \", got \" + JSON.stringify(json) });\r\n        });\r\n    };\r\n    Decoder.object = function (decoders) {\r\n        return new Decoder(function (json) {\r\n            if (isJsonObject(json) && decoders) {\r\n                var obj = {};\r\n                for (var key in decoders) {\r\n                    if (decoders.hasOwnProperty(key)) {\r\n                        var r = decoders[key].decode(json[key]);\r\n                        if (r.ok === true) {\r\n                            // tslint:disable-next-line:strict-type-predicates\r\n                            if (r.result !== undefined) {\r\n                                obj[key] = r.result;\r\n                            }\r\n                        }\r\n                        else if (json[key] === undefined) {\r\n                            return err({ message: \"the key '\" + key + \"' is required but was not present\" });\r\n                        }\r\n                        else {\r\n                            return err(prependAt(\".\" + key, r.error));\r\n                        }\r\n                    }\r\n                }\r\n                return ok(obj);\r\n            }\r\n            else if (isJsonObject(json)) {\r\n                return ok(json);\r\n            }\r\n            else {\r\n                return err({ message: expectedGot('an object', json) });\r\n            }\r\n        });\r\n    };\r\n    Decoder.array = function (decoder) {\r\n        return new Decoder(function (json) {\r\n            if (isJsonArray(json) && decoder) {\r\n                var decodeValue_1 = function (v, i) {\r\n                    return mapError(function (err$$1) { return prependAt(\"[\" + i + \"]\", err$$1); }, decoder.decode(v));\r\n                };\r\n                return json.reduce(function (acc, v, i) {\r\n                    return map2(function (arr, result) { return arr.concat([result]); }, acc, decodeValue_1(v, i));\r\n                }, ok([]));\r\n            }\r\n            else if (isJsonArray(json)) {\r\n                return ok(json);\r\n            }\r\n            else {\r\n                return err({ message: expectedGot('an array', json) });\r\n            }\r\n        });\r\n    };\r\n    Decoder.tuple = function (decoders) {\r\n        return new Decoder(function (json) {\r\n            if (isJsonArray(json)) {\r\n                if (json.length !== decoders.length) {\r\n                    return err({\r\n                        message: \"expected a tuple of length \" + decoders.length + \", got one of length \" + json.length\r\n                    });\r\n                }\r\n                var result = [];\r\n                for (var i = 0; i < decoders.length; i++) {\r\n                    var nth = decoders[i].decode(json[i]);\r\n                    if (nth.ok) {\r\n                        result[i] = nth.result;\r\n                    }\r\n                    else {\r\n                        return err(prependAt(\"[\" + i + \"]\", nth.error));\r\n                    }\r\n                }\r\n                return ok(result);\r\n            }\r\n            else {\r\n                return err({ message: expectedGot(\"a tuple of length \" + decoders.length, json) });\r\n            }\r\n        });\r\n    };\r\n    Decoder.union = function (ad, bd) {\r\n        var decoders = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            decoders[_i - 2] = arguments[_i];\r\n        }\r\n        return Decoder.oneOf.apply(Decoder, [ad, bd].concat(decoders));\r\n    };\r\n    Decoder.intersection = function (ad, bd) {\r\n        var ds = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            ds[_i - 2] = arguments[_i];\r\n        }\r\n        return new Decoder(function (json) {\r\n            return [ad, bd].concat(ds).reduce(function (acc, decoder) { return map2(Object.assign, acc, decoder.decode(json)); }, ok({}));\r\n        });\r\n    };\r\n    /**\r\n     * Escape hatch to bypass validation. Always succeeds and types the result as\r\n     * `any`. Useful for defining decoders incrementally, particularly for\r\n     * complex objects.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * interface User {\r\n     *   name: string;\r\n     *   complexUserData: ComplexType;\r\n     * }\r\n     *\r\n     * const userDecoder: Decoder<User> = object({\r\n     *   name: string(),\r\n     *   complexUserData: anyJson()\r\n     * });\r\n     * ```\r\n     */\r\n    Decoder.anyJson = function () { return new Decoder(function (json) { return ok(json); }); };\r\n    /**\r\n     * Decoder identity function which always succeeds and types the result as\r\n     * `unknown`.\r\n     */\r\n    Decoder.unknownJson = function () {\r\n        return new Decoder(function (json) { return ok(json); });\r\n    };\r\n    /**\r\n     * Decoder for json objects where the keys are unknown strings, but the values\r\n     * should all be of the same type.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * dict(number()).run({chocolate: 12, vanilla: 10, mint: 37});\r\n     * // => {ok: true, result: {chocolate: 12, vanilla: 10, mint: 37}}\r\n     * ```\r\n     */\r\n    Decoder.dict = function (decoder) {\r\n        return new Decoder(function (json) {\r\n            if (isJsonObject(json)) {\r\n                var obj = {};\r\n                for (var key in json) {\r\n                    if (json.hasOwnProperty(key)) {\r\n                        var r = decoder.decode(json[key]);\r\n                        if (r.ok === true) {\r\n                            obj[key] = r.result;\r\n                        }\r\n                        else {\r\n                            return err(prependAt(\".\" + key, r.error));\r\n                        }\r\n                    }\r\n                }\r\n                return ok(obj);\r\n            }\r\n            else {\r\n                return err({ message: expectedGot('an object', json) });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Decoder for values that may be `undefined`. This is primarily helpful for\r\n     * decoding interfaces with optional fields.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * interface User {\r\n     *   id: number;\r\n     *   isOwner?: boolean;\r\n     * }\r\n     *\r\n     * const decoder: Decoder<User> = object({\r\n     *   id: number(),\r\n     *   isOwner: optional(boolean())\r\n     * });\r\n     * ```\r\n     */\r\n    Decoder.optional = function (decoder) {\r\n        return new Decoder(function (json) { return (json === undefined || json === null ? ok(undefined) : decoder.decode(json)); });\r\n    };\r\n    /**\r\n     * Decoder that attempts to run each decoder in `decoders` and either succeeds\r\n     * with the first successful decoder, or fails after all decoders have failed.\r\n     *\r\n     * Note that `oneOf` expects the decoders to all have the same return type,\r\n     * while `union` creates a decoder for the union type of all the input\r\n     * decoders.\r\n     *\r\n     * Examples:\r\n     * ```\r\n     * oneOf(string(), number().map(String))\r\n     * oneOf(constant('start'), constant('stop'), succeed('unknown'))\r\n     * ```\r\n     */\r\n    Decoder.oneOf = function () {\r\n        var decoders = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            decoders[_i] = arguments[_i];\r\n        }\r\n        return new Decoder(function (json) {\r\n            var errors = [];\r\n            for (var i = 0; i < decoders.length; i++) {\r\n                var r = decoders[i].decode(json);\r\n                if (r.ok === true) {\r\n                    return r;\r\n                }\r\n                else {\r\n                    errors[i] = r.error;\r\n                }\r\n            }\r\n            var errorsList = errors\r\n                .map(function (error) { return \"at error\" + (error.at || '') + \": \" + error.message; })\r\n                .join('\", \"');\r\n            return err({\r\n                message: \"expected a value matching one of the decoders, got the errors [\\\"\" + errorsList + \"\\\"]\"\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Decoder that always succeeds with either the decoded value, or a fallback\r\n     * default value.\r\n     */\r\n    Decoder.withDefault = function (defaultValue, decoder) {\r\n        return new Decoder(function (json) {\r\n            return ok(withDefault(defaultValue, decoder.decode(json)));\r\n        });\r\n    };\r\n    /**\r\n     * Decoder that pulls a specific field out of a json structure, instead of\r\n     * decoding and returning the full structure. The `paths` array describes the\r\n     * object keys and array indices to traverse, so that values can be pulled out\r\n     * of a nested structure.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * const decoder = valueAt(['a', 'b', 0], string());\r\n     *\r\n     * decoder.run({a: {b: ['surprise!']}})\r\n     * // => {ok: true, result: 'surprise!'}\r\n     *\r\n     * decoder.run({a: {x: 'cats'}})\r\n     * // => {ok: false, error: {... at: 'input.a.b[0]' message: 'path does not exist'}}\r\n     * ```\r\n     *\r\n     * Note that the `decoder` is ran on the value found at the last key in the\r\n     * path, even if the last key is not found. This allows the `optional`\r\n     * decoder to succeed when appropriate.\r\n     * ```\r\n     * const optionalDecoder = valueAt(['a', 'b', 'c'], optional(string()));\r\n     *\r\n     * optionalDecoder.run({a: {b: {c: 'surprise!'}}})\r\n     * // => {ok: true, result: 'surprise!'}\r\n     *\r\n     * optionalDecoder.run({a: {b: 'cats'}})\r\n     * // => {ok: false, error: {... at: 'input.a.b.c' message: 'expected an object, got \"cats\"'}\r\n     *\r\n     * optionalDecoder.run({a: {b: {z: 1}}})\r\n     * // => {ok: true, result: undefined}\r\n     * ```\r\n     */\r\n    Decoder.valueAt = function (paths, decoder) {\r\n        return new Decoder(function (json) {\r\n            var jsonAtPath = json;\r\n            for (var i = 0; i < paths.length; i++) {\r\n                if (jsonAtPath === undefined) {\r\n                    return err({\r\n                        at: printPath(paths.slice(0, i + 1)),\r\n                        message: 'path does not exist'\r\n                    });\r\n                }\r\n                else if (typeof paths[i] === 'string' && !isJsonObject(jsonAtPath)) {\r\n                    return err({\r\n                        at: printPath(paths.slice(0, i + 1)),\r\n                        message: expectedGot('an object', jsonAtPath)\r\n                    });\r\n                }\r\n                else if (typeof paths[i] === 'number' && !isJsonArray(jsonAtPath)) {\r\n                    return err({\r\n                        at: printPath(paths.slice(0, i + 1)),\r\n                        message: expectedGot('an array', jsonAtPath)\r\n                    });\r\n                }\r\n                else {\r\n                    jsonAtPath = jsonAtPath[paths[i]];\r\n                }\r\n            }\r\n            return mapError(function (error) {\r\n                return jsonAtPath === undefined\r\n                    ? { at: printPath(paths), message: 'path does not exist' }\r\n                    : prependAt(printPath(paths), error);\r\n            }, decoder.decode(jsonAtPath));\r\n        });\r\n    };\r\n    /**\r\n     * Decoder that ignores the input json and always succeeds with `fixedValue`.\r\n     */\r\n    Decoder.succeed = function (fixedValue) {\r\n        return new Decoder(function (json) { return ok(fixedValue); });\r\n    };\r\n    /**\r\n     * Decoder that ignores the input json and always fails with `errorMessage`.\r\n     */\r\n    Decoder.fail = function (errorMessage) {\r\n        return new Decoder(function (json) { return err({ message: errorMessage }); });\r\n    };\r\n    /**\r\n     * Decoder that allows for validating recursive data structures. Unlike with\r\n     * functions, decoders assigned to variables can't reference themselves\r\n     * before they are fully defined. We can avoid prematurely referencing the\r\n     * decoder by wrapping it in a function that won't be called until use, at\r\n     * which point the decoder has been defined.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * interface Comment {\r\n     *   msg: string;\r\n     *   replies: Comment[];\r\n     * }\r\n     *\r\n     * const decoder: Decoder<Comment> = object({\r\n     *   msg: string(),\r\n     *   replies: lazy(() => array(decoder))\r\n     * });\r\n     * ```\r\n     */\r\n    Decoder.lazy = function (mkDecoder) {\r\n        return new Decoder(function (json) { return mkDecoder().decode(json); });\r\n    };\r\n    return Decoder;\r\n}());\r\n\r\n/* tslint:disable:variable-name */\r\n/** See `Decoder.string` */\r\nvar string = Decoder.string;\r\n/** See `Decoder.number` */\r\nvar number = Decoder.number;\r\n/** See `Decoder.boolean` */\r\nvar boolean = Decoder.boolean;\r\n/** See `Decoder.anyJson` */\r\nvar anyJson = Decoder.anyJson;\r\n/** See `Decoder.unknownJson` */\r\nvar unknownJson = Decoder.unknownJson;\r\n/** See `Decoder.constant` */\r\nvar constant = Decoder.constant;\r\n/** See `Decoder.object` */\r\nvar object = Decoder.object;\r\n/** See `Decoder.array` */\r\nvar array = Decoder.array;\r\n/** See `Decoder.tuple` */\r\nvar tuple = Decoder.tuple;\r\n/** See `Decoder.dict` */\r\nvar dict = Decoder.dict;\r\n/** See `Decoder.optional` */\r\nvar optional = Decoder.optional;\r\n/** See `Decoder.oneOf` */\r\nvar oneOf = Decoder.oneOf;\r\n/** See `Decoder.union` */\r\nvar union = Decoder.union;\r\n/** See `Decoder.intersection` */\r\nvar intersection = Decoder.intersection;\r\n/** See `Decoder.withDefault` */\r\nvar withDefault$1 = Decoder.withDefault;\r\n/** See `Decoder.valueAt` */\r\nvar valueAt = Decoder.valueAt;\r\n/** See `Decoder.succeed` */\r\nvar succeed = Decoder.succeed;\r\n/** See `Decoder.fail` */\r\nvar fail = Decoder.fail;\r\n/** See `Decoder.lazy` */\r\nvar lazy = Decoder.lazy;\r\n\r\nexport { result as Result, Decoder, isDecoderError, string, number, boolean, anyJson, unknownJson, constant, object, array, tuple, dict, optional, oneOf, union, intersection, withDefault$1 as withDefault, valueAt, succeed, fail, lazy };\r\n//# sourceMappingURL=index.es5.js.map\r\n","import { Decoder, string, number, object, optional, array, oneOf, constant, anyJson } from \"decoder-validate\";\nimport { Glue42Search } from \"../../search\";\nimport { QueryStatus, Operation, ProtocolProviderError, ProtocolSearchCompleted, ProtocolSearchResultsBatch } from \"./protocol\";\nimport { LegacySearchResultItem, SearchCancelRequest } from \"./types\";\n\nexport const nonEmptyStringDecoder: Decoder<string> = string().where((s) => s.length > 0, \"Expected a non-empty string\");\nexport const nonNegativeNumberDecoder: Decoder<number> = number().where((num) => num >= 0, \"Expected a non-negative number\");\n\nexport const searchTypeDecoder: Decoder<Glue42Search.SearchType> = object({\n    name: nonEmptyStringDecoder,\n    displayName: optional(nonEmptyStringDecoder)\n});\n\nexport const providerData: Decoder<Glue42Search.ProviderData> = object({\n    id: nonEmptyStringDecoder,\n    interopId: nonEmptyStringDecoder,\n    name: nonEmptyStringDecoder,\n    appName: optional(nonEmptyStringDecoder),\n    types: optional(array(searchTypeDecoder))\n});\n\nexport const providerLimitsDecoder: Decoder<Glue42Search.ProviderLimits> = object({\n    maxResults: optional(nonNegativeNumberDecoder),\n    maxResultsPerType: optional(nonNegativeNumberDecoder)\n});\n\nexport const queryConfigDecoder: Decoder<Glue42Search.QueryConfig> = object({\n    search: nonEmptyStringDecoder,\n    providers: optional(array(providerData)),\n    types: optional(array(searchTypeDecoder)),\n    providerLimits: optional(providerLimitsDecoder)\n});\n\nexport const providerRegistrationConfig: Decoder<Glue42Search.ProviderRegistrationConfig> = object({\n    name: nonEmptyStringDecoder,\n    types: optional(array(searchTypeDecoder))\n});\n\nexport const operationDecoder: Decoder<Operation> = oneOf<\"search\" | \"info\" | \"cancel\">(\n    constant(\"cancel\"),\n    constant(\"info\"),\n    constant(\"search\")\n);\n\nexport const queryStatusDecoder: Decoder<QueryStatus> = oneOf<\"done\" | \"in-progress\" | \"error\">(\n    constant(\"done\"),\n    constant(\"in-progress\"),\n    constant(\"error\")\n);\n\nexport const searchCancelRequestDecoder: Decoder<SearchCancelRequest> = object({\n    id: nonEmptyStringDecoder\n});\n\nexport const mainActionDecoder: Decoder<Glue42Search.MainAction> = object({\n    method: nonEmptyStringDecoder,\n    target: optional(oneOf<{ instance: string } | \"all\">(\n        object({ instance: nonEmptyStringDecoder }),\n        constant(\"all\")\n    )),\n    params: optional(anyJson())\n});\n\nexport const secondaryActionDecoder: Decoder<Glue42Search.SecondaryAction> = object({\n    name: nonEmptyStringDecoder,\n    method: nonEmptyStringDecoder,\n    target: optional(oneOf<{ instance: string } | \"all\">(\n        object({ instance: nonEmptyStringDecoder }),\n        constant(\"all\")\n    )),\n    params: optional(anyJson())\n});\n\nexport const queryResultDecoder: Decoder<Glue42Search.QueryResult> = object({\n    type: searchTypeDecoder,\n    id: optional(nonEmptyStringDecoder),\n    displayName: optional(nonEmptyStringDecoder),\n    description: optional(nonEmptyStringDecoder),\n    iconURL: optional(nonEmptyStringDecoder),\n    metadata: optional(anyJson()),\n    action: optional(mainActionDecoder),\n    secondaryActions: optional(array(secondaryActionDecoder))\n});\n\nexport const legacySearchResultItemDecoder: Decoder<LegacySearchResultItem> = object({\n    type: string(),\n    category: optional(string()),\n    id: optional(string()),\n    displayName: optional(string()),\n    description: optional(string()),\n    iconURL: optional(string()),\n    action: optional(mainActionDecoder)\n});\n\nexport const protocolSearchResultsBatchDecoder: Decoder<ProtocolSearchResultsBatch> = object({\n    items: array(oneOf<Glue42Search.QueryResult | LegacySearchResultItem>(\n        queryResultDecoder,\n        legacySearchResultItemDecoder\n    )),\n    provider: optional(providerData),\n    queryId: nonEmptyStringDecoder,\n    status: constant(\"in-progress\")\n});\n\nexport const protocolSearchCompletedDecoder: Decoder<ProtocolSearchCompleted> = object({\n    items: array(oneOf<Glue42Search.QueryResult | LegacySearchResultItem>(\n        queryResultDecoder,\n        legacySearchResultItemDecoder\n    )),\n    queryId: nonEmptyStringDecoder,\n    status: constant(\"done\")\n});\n\nexport const protocolProviderErrorDecoder: Decoder<ProtocolProviderError> = object({\n    items: array(oneOf<Glue42Search.QueryResult | LegacySearchResultItem>(\n        queryResultDecoder,\n        legacySearchResultItemDecoder\n    )),\n    provider: optional(providerData),\n    queryId: nonEmptyStringDecoder,\n    errorMessage: nonEmptyStringDecoder,\n    status: constant(\"error\")\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable indent */\nimport { Glue42Core } from \"@glue42/core\";\nimport { nanoid } from \"nanoid\";\nimport { Glue42Search } from \"../../search\";\nimport { ActiveClientQuery, InteropServerProvider, LegacySearchResultItem } from \"../shared/types\";\nimport { GlueController } from \"./glue\";\nimport {\n    default as CallbackRegistryFactory,\n    CallbackRegistry\n} from \"callback-registry\";\nimport { ProtocolProviderError, ProtocolSearchCompleted, ProtocolSearchResultsBatch, SEARCH_QUERY_STATUSES } from \"../shared/protocol\";\nimport { queryStatusDecoder, protocolProviderErrorDecoder, protocolSearchCompletedDecoder, protocolSearchResultsBatchDecoder } from \"../shared/decoders\";\nimport { ModelFactory } from \"../services/model-factory\";\n\nexport class ClientController {\n\n    private readonly registry: CallbackRegistry = CallbackRegistryFactory();\n    private readonly activeQueryLookup: { [key in string]: ActiveClientQuery } = {};\n    private readonly queryIdToMasterIdLookup: { [key in string]: string } = {};\n    private pendingDebounce: ({ resolve: (value: Glue42Search.Query) => void, reject: (reason?: any) => void })[] = [];\n    private debounceTimer?: NodeJS.Timer;\n    private debounceMS = 0;\n\n    constructor(\n        private readonly logger: Glue42Core.Logger.API,\n        private readonly glueController: GlueController,\n        private readonly modelFactory: ModelFactory\n    ) {}\n\n    public async start(): Promise<void> {\n        await this.glueController.registerMainClientMethod(this.handleProviderCall.bind(this));\n    }\n\n    public setDebounceMS(data: { milliseconds: number, commandId: string }): void {\n\n        this.logger.info(`[${data.commandId}] Setting the debounceMS to: ${data.milliseconds}`);\n\n        this.debounceMS = data.milliseconds;\n\n        this.logger.info(`[${data.commandId}] debounceMS set to: ${data.milliseconds}`);\n    }\n\n    public getDebounceMS(data: { commandId: string }): number {\n\n        this.logger.info(`[${data.commandId}] Getting the debounceMS`);\n\n        return this.debounceMS;\n\n    }\n\n    public async query(data: { queryConfig: Glue42Search.QueryConfig, commandId: string }, skipDebounce?: boolean): Promise<Glue42Search.Query> {\n\n        if (this.debounceMS && !skipDebounce) {\n            return this.debounceQuery(data);\n        }\n\n        const { queryConfig, commandId } = data;\n\n        this.logger.info(`[${commandId}] Initiating a query request`);\n\n        let allProvidersInfo = await this.glueController.getAllProvidersInfo();\n\n        this.logger.trace(`[${commandId}] Got all available providers: ${JSON.stringify(allProvidersInfo)}`);\n\n        if (queryConfig.providers) {\n            this.logger.info(`[${commandId}] Filtering providers by explicitly allowed providers.`);\n            allProvidersInfo = this.filterProvidersByAllowList(allProvidersInfo, queryConfig.providers);\n        }\n\n        if (queryConfig.types) {\n            this.logger.info(`[${commandId}] Filtering providers by explicitly allowed types.`);\n            allProvidersInfo = this.filterProvidersByAllowedTypes(allProvidersInfo, queryConfig.types);\n        }\n\n        if (!allProvidersInfo.length) {\n            this.logger.warn(`[${commandId}] There are no providers that can handle the query for ${data.queryConfig.search}`);\n        }\n\n        this.logger.info(`[${commandId}] Sending query request to providers: ${JSON.stringify(allProvidersInfo)}`);\n        const allQueryResponses = await this.glueController.sendQueryRequest(queryConfig, allProvidersInfo);\n\n        this.logger.info(`[${commandId}] Received responses from the providers: ${JSON.stringify(allQueryResponses)}`);\n        const masterQueryId = this.generateMasterQueryId();\n\n        const queryModel = this.modelFactory.buildClientQueryModel(masterQueryId, this);\n\n        this.logger.info(`[${commandId}] The query is in progress with master id: ${masterQueryId}`);\n\n        this.activeQueryLookup[masterQueryId] = {\n            servers: allQueryResponses,\n            model: queryModel\n        };\n\n        allQueryResponses.forEach((response) => {\n            this.queryIdToMasterIdLookup[response.queryId] = masterQueryId;\n        });\n\n        if (!allQueryResponses.length) {\n            // there are no providers that will handle this request\n            setTimeout(() => {\n                this.registry.execute(`on-query-completed-${masterQueryId}`);\n\n                this.cleanUpQuery(masterQueryId);\n            }, 0);\n        }\n\n        return queryModel.exposeFacade();\n    }\n\n    public async cancelQuery(masterQueryId: string, commandId: string): Promise<void> {\n\n        const activeQuery = this.activeQueryLookup[masterQueryId];\n\n        if (!activeQuery) {\n            throw new Error(`[${commandId}] Cannot cancel query: ${masterQueryId}, because this query does not exist`);\n        }\n\n        const interopIds = activeQuery.servers;\n\n        this.logger.info(`[${commandId}] Sending cancel query requests`);\n\n        await Promise.all(interopIds.map((serverId) => {\n            this.logger.trace(`[${commandId}] Sending cancel query request to ${serverId.interopId} with queryId: ${serverId.queryId}`);\n\n            return this.glueController.sendQueryCancelRequest({ id: serverId.queryId }, { instance: serverId.interopId });\n        }));\n\n        this.logger.info(`[${commandId}] The query was cancelled`);\n    }\n\n    public processClientOnResults(data: { callback: (resultBatch: Glue42Search.QueryResultBatch) => void, masterQueryId: string, commandId: string }): Glue42Search.UnsubscribeFunction {\n        return this.registry.add(`on-query-results-${data.masterQueryId}`, data.callback);\n    }\n\n    public processClientOnCompleted(data: { callback: () => void, masterQueryId: string, commandId: string }): Glue42Search.UnsubscribeFunction {\n        return this.registry.add(`on-query-completed-${data.masterQueryId}`, data.callback);\n    }\n\n    public processClientOnError(data: { callback: (error: Glue42Search.QueryError) => void, masterQueryId: string, commandId: string }): Glue42Search.UnsubscribeFunction {\n        return this.registry.add(`on-query-error-${data.masterQueryId}`, data.callback);\n    }\n\n    private async handleProviderCall(args: any): Promise<any> {\n        const { status } = args;\n\n        const validatedOperation = queryStatusDecoder.runWithException(status);\n\n        const commandId = nanoid(10);\n\n        switch (validatedOperation) {\n            case SEARCH_QUERY_STATUSES.done:\n                return this.handleQueryCompleted({ completedConfig: args, commandId });\n            case SEARCH_QUERY_STATUSES.inProgress:\n                return this.handleQueryResults({ resultsBatch: args, commandId });\n            case SEARCH_QUERY_STATUSES.error:\n                return this.handleQueryError({ error: args, commandId });\n            default:\n                throw new Error(`Unrecognized status: ${status}`);\n        }\n    }\n\n    private handleQueryResults(data: { resultsBatch: ProtocolSearchResultsBatch, commandId: string }): void {\n        const { resultsBatch, commandId } = data;\n\n        this.logger.trace(`[${commandId}] Processing a results batch from provider: ${resultsBatch.provider?.name} with id: ${resultsBatch.provider?.id}`);\n\n        const verifiedResultsBatch = protocolSearchResultsBatchDecoder.runWithException(resultsBatch);\n\n        const masterQueryId = this.queryIdToMasterIdLookup[verifiedResultsBatch.queryId];\n\n        if (!masterQueryId) {\n            this.logger.warn(`[${commandId}] Received results for an unknown query. Provider ${JSON.stringify(verifiedResultsBatch.provider)}, items: ${JSON.stringify(verifiedResultsBatch.items)}`);\n            return;\n        }\n\n        this.logger.trace(`[${commandId}] The results batch is validated, forwarding to the callbacks`);\n\n        const translatedResults: Glue42Search.QueryResult[] = this.checkTransformLegacyResults(verifiedResultsBatch.items);\n\n        const results: Glue42Search.QueryResultBatch = {\n            provider: verifiedResultsBatch.provider,\n            results: translatedResults\n        };\n\n        this.registry.execute(`on-query-results-${masterQueryId}`, results);\n    }\n\n    private handleQueryCompleted(data: { completedConfig: ProtocolSearchCompleted, commandId: string }): void {\n        const { completedConfig, commandId } = data;\n\n        this.logger.trace(`[${commandId}] Processing a query completed message from query id: ${completedConfig.queryId}`);\n\n        const verifiedCompleteConfig = protocolSearchCompletedDecoder.runWithException(completedConfig);\n\n        const masterQueryId = this.queryIdToMasterIdLookup[verifiedCompleteConfig.queryId];\n\n        if (!masterQueryId) {\n            this.logger.warn(`[${commandId}] Received completed message for an unknown query. Provider query id: ${JSON.stringify(verifiedCompleteConfig.queryId)}`);\n            return;\n        }\n\n        if (verifiedCompleteConfig.items.length) {\n            const translatedResults: Glue42Search.QueryResult[] = this.checkTransformLegacyResults(verifiedCompleteConfig.items);\n\n            const results: Glue42Search.QueryResultBatch = {\n                results: translatedResults\n            };\n\n            this.registry.execute(`on-query-results-${masterQueryId}`, results);\n        }\n\n        delete this.queryIdToMasterIdLookup[verifiedCompleteConfig.queryId];\n\n        const activeQuery = this.activeQueryLookup[masterQueryId];\n\n        activeQuery.servers = activeQuery.servers.filter((server) => server.queryId !== verifiedCompleteConfig.queryId);\n\n        if (activeQuery.servers.length) {\n            this.logger.trace(`[${commandId}] Waiting for more providers to complete`);\n\n            return;\n        }\n\n        this.logger.trace(`[${commandId}] All providers are done, marking this query as completed`);\n\n        this.registry.execute(`on-query-completed-${masterQueryId}`);\n\n        this.cleanUpQuery(masterQueryId);\n    }\n\n    private handleQueryError(data: { error: ProtocolProviderError, commandId: string }): void {\n        const { error, commandId } = data;\n\n        this.logger.trace(`[${commandId}] Processing an error message from query: ${error.queryId}`);\n\n        const validatedError = protocolProviderErrorDecoder.runWithException(error);\n\n        const masterQueryId = this.queryIdToMasterIdLookup[validatedError.queryId];\n\n        if (!masterQueryId) {\n            this.logger.warn(`[${commandId}] Received error message for an unknown query. Provider query id: ${JSON.stringify(validatedError.queryId)} and message: ${JSON.stringify(validatedError.errorMessage)}`);\n            return;\n        }\n\n        const queryError: Glue42Search.QueryError = {\n            error: validatedError.errorMessage,\n            provider: validatedError.provider\n        };\n\n        this.registry.execute(`on-query-error-${masterQueryId}`, queryError);\n    }\n\n    private filterProvidersByAllowList(servers: InteropServerProvider[], allowed: Glue42Search.ProviderData[]): InteropServerProvider[] {\n\n        const allowedLookup = allowed.reduce<{ [key in string]: boolean }>((lookup, allowedEntry) => {\n            lookup[allowedEntry.id] = true;\n\n            return lookup;\n        }, {});\n\n        return servers.filter((server) => {\n            const serverProviders = server.info.providers;\n\n            return serverProviders.some((provider) => allowedLookup[provider.id]);\n        });\n    }\n\n    private filterProvidersByAllowedTypes(servers: InteropServerProvider[], allowed: Glue42Search.SearchType[]): InteropServerProvider[] {\n\n        const allowedLookup = allowed.reduce<{ [key in string]: boolean }>((lookup, allowedEntry) => {\n            lookup[allowedEntry.name] = true;\n\n            return lookup;\n        }, {});\n\n        return servers.filter((server) => {\n            const allTypes = server.info.supportedTypes;\n\n            return allTypes.some((supportedType) => allowedLookup[supportedType]);\n        });\n    }\n\n    private generateMasterQueryId(): string {\n        const queryId = nanoid(10);\n\n        if (this.activeQueryLookup[queryId]) {\n            return this.generateMasterQueryId();\n        }\n\n        return queryId;\n    }\n\n    private cleanUpQuery(masterQueryId: string): void {\n        this.registry.clearKey(`on-query-results-${masterQueryId}`);\n        this.registry.clearKey(`on-query-completed-${masterQueryId}`);\n        this.registry.clearKey(`on-query-error-${masterQueryId}`);\n\n        delete this.activeQueryLookup[masterQueryId];\n    }\n\n    private debounceQuery(data: { queryConfig: Glue42Search.QueryConfig, commandId: string }): Promise<Glue42Search.Query> {\n        return new Promise<Glue42Search.Query>((res, rej) => {\n            clearTimeout(this.debounceTimer);\n\n            this.debounceTimer = setTimeout(() => {\n                const currentPending = [...this.pendingDebounce];\n\n                this.pendingDebounce = [];\n\n                this.query(data, true)\n                    .then((query) => currentPending.forEach(({ resolve }) => resolve(query)))\n                    .catch((error) => currentPending.forEach(({ reject }) => reject(error)));\n\n            }, this.debounceMS);\n\n            this.pendingDebounce.push({ resolve: res, reject: rej });\n        });\n    }\n\n    private checkTransformLegacyResults(items: (Glue42Search.QueryResult | LegacySearchResultItem)[]): Glue42Search.QueryResult[] {\n\n        if (!items.length) {\n            return [];\n        }\n\n        const sampleItem = items[0];\n\n        if (!sampleItem || typeof sampleItem.type === \"object\") {\n            return items as Glue42Search.QueryResult[];\n        }\n\n        return (items as LegacySearchResultItem[]).map<Glue42Search.QueryResult>((item) => {\n            return {\n                type: { name: item.type, displayName: item.category },\n                id: item.id,\n                displayName: item.displayName,\n                description: item.description,\n                iconURL: item.iconURL,\n                action: item.action\n            };\n        });\n    }\n}\n","export const MAIN_PROVIDER_METHOD_NAME = \"T42.Search.Provider\";\n\nexport const MAIN_CLIENT_METHOD_NAME = \"T42.Search.Client\";\n\nexport const SEQUELIZER_INTERVAL_MS = 10;\n\nexport const FLUSH_SEQUELIZER_INTERVAL_MS = 10;\n\nexport const FLUSH_TIMEOUT_MS = 100;\n\nexport const STALE_QUERY_TIMEOUT_MS = 900000;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42Search } from \"../../search\";\nimport { MAIN_CLIENT_METHOD_NAME, MAIN_PROVIDER_METHOD_NAME } from \"../shared/constants\";\nimport { CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS, ProtocolProviderError, ProtocolProviderInfoRequest, ProtocolProviderInfoResponse, ProtocolQueryCancelRequest, ProtocolSearchCompleted, ProtocolSearchRequest, ProtocolSearchResponse, ProtocolSearchResultsBatch, SEARCH_QUERY_STATUSES } from \"../shared/protocol\";\nimport { InteropServerProvider, InteropServerQueryIdentification, PublisherQueryResultBatch, SearchCancelRequest } from \"../shared/types\";\n\nexport class GlueController {\n    constructor(private readonly glue: Glue42Core.GlueCore) {}\n\n    public get myAppName(): string | undefined {\n        return this.glue.interop.instance.applicationName;\n    }\n\n    public get myInteropId(): string {\n        return this.glue.interop.instance.instance as string;\n    }\n\n    public async registerMainProviderMethod(handler: (args: any, caller: Glue42Core.Interop.Instance) => Promise<any>): Promise<void> {\n        const mainMethodStatus = this.checkMyMethodExists(MAIN_PROVIDER_METHOD_NAME);\n\n        if (mainMethodStatus.exists) {\n            return;\n        }\n\n        await this.glue.interop.register(MAIN_PROVIDER_METHOD_NAME, handler);\n    }\n\n    public async registerMainClientMethod(handler: (args: any, caller: Glue42Core.Interop.Instance) => Promise<any>): Promise<void> {\n        const mainMethodStatus = this.checkMyMethodExists(MAIN_PROVIDER_METHOD_NAME);\n\n        if (mainMethodStatus.exists) {\n            return;\n        }\n\n        await this.glue.interop.register(MAIN_CLIENT_METHOD_NAME, handler);\n    }\n\n    public async clearMainProviderMethod(): Promise<void> {\n        // unregister is async, there is a bug in the typings\n        await this.glue.interop.unregister(MAIN_PROVIDER_METHOD_NAME);\n    }\n\n    public async sendClientResultsBatch(batch: PublisherQueryResultBatch, clientInstanceId: string, queryId: string): Promise<void> {\n        const interopArguments: ProtocolSearchResultsBatch = {\n            items: batch.results,\n            provider: batch.provider,\n            queryId,\n            status: SEARCH_QUERY_STATUSES.inProgress\n        };\n\n        await this.glue.interop.invoke<void>(MAIN_CLIENT_METHOD_NAME, interopArguments, { instance: clientInstanceId });\n    }\n\n    public async sendClientQueueCompleted(clientInstanceId: string, queryId: string): Promise<void> {\n        const interopArguments: ProtocolSearchCompleted = {\n            items: [],\n            queryId,\n            status: SEARCH_QUERY_STATUSES.done\n        };\n\n        await this.glue.interop.invoke<void>(MAIN_CLIENT_METHOD_NAME, interopArguments, { instance: clientInstanceId });\n    }\n\n    public async sendClientErrorMessage(error: string, clientInstanceId: string, queryId: string, provider: Glue42Search.ProviderData): Promise<void> {\n        const interopArguments: ProtocolProviderError = {\n            items: [],\n            provider,\n            errorMessage: error,\n            queryId,\n            status: SEARCH_QUERY_STATUSES.error\n        };\n\n        await this.glue.interop.invoke<void>(MAIN_CLIENT_METHOD_NAME, interopArguments, { instance: clientInstanceId });\n    }\n\n    public async sendQueryRequest(queryConfig: Glue42Search.QueryConfig, instances: InteropServerProvider[]): Promise<InteropServerQueryIdentification[]> {\n\n        if (!instances.length) {\n            return [];\n        }\n\n        const target = instances.map((inst) => ({ instance: inst.interopId }));\n\n        const invokeArgs: ProtocolSearchRequest = {\n            operation: CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS.search,\n            apiVersion: \"1\",\n            ...queryConfig\n        };\n\n        const response = await this.glue.interop.invoke<ProtocolSearchResponse>(MAIN_PROVIDER_METHOD_NAME, invokeArgs, target);\n\n        const allReturned = response.all_return_values || [];\n\n        return allReturned.map<InteropServerQueryIdentification>((returnValue) => {\n            return {\n                interopId: returnValue.executed_by?.instance as string,\n                queryId: returnValue.returned.id\n            };\n        });\n    }\n\n    public async sendQueryCancelRequest(request: SearchCancelRequest, instance: { instance: string }): Promise<void> {\n        const args: ProtocolQueryCancelRequest = {\n            operation: CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS.cancel,\n            id: request.id\n        };\n\n        await this.glue.interop.invoke(MAIN_PROVIDER_METHOD_NAME, args, instance);\n    }\n\n    public async getAllProvidersInfo(): Promise<InteropServerProvider[]> {\n\n        if (this.glue.interop.methods().every((method) => method.name !== MAIN_PROVIDER_METHOD_NAME)) {\n            return [];\n        }\n\n        const args: ProtocolProviderInfoRequest = {\n            operation: CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS.info\n        };\n\n        const response = await this.glue.interop.invoke<ProtocolProviderInfoResponse>(MAIN_PROVIDER_METHOD_NAME, args, \"all\");\n\n        const allReturned = response.all_return_values || [];\n\n        return allReturned.map<InteropServerProvider>((returnValue) => {\n\n            const isLegacy = typeof returnValue.returned.apiVersion === \"undefined\";\n\n            const info: ProtocolProviderInfoResponse = isLegacy ? {\n                supportedTypes: returnValue.returned.supportedTypes,\n                apiVersion: returnValue.returned.apiVersion,\n                providers: [{\n                    interopId: returnValue.executed_by?.instance as string,\n                    id: returnValue.executed_by?.instance as string,\n                    name: returnValue.executed_by?.instance as string,\n                    appName: response.executed_by?.application,\n                    types: returnValue.returned.supportedTypes.map((t) => ({ name: t }))\n                }]\n            } : returnValue.returned;\n\n            return {\n                interopId: returnValue.executed_by?.instance as string,\n                info\n            };\n        });\n    }\n\n    private checkMyMethodExists(methodName: string): { exists: boolean } {\n        const myMethods = this.glue.interop.methodsForInstance({ instance: this.glue.interop.instance.instance });\n\n        return { exists: myMethods.some((method) => method.name === methodName) };\n    }\n}","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42Search } from \"../../search\";\nimport { ClientController } from \"./client\";\nimport { GlueController } from \"./glue\";\nimport { ProviderController } from \"./provider\";\n\nexport class MainController {\n\n    constructor(\n        private readonly logger: Glue42Core.Logger.API,\n        private readonly glueController: GlueController,\n        private readonly clientController: ClientController,\n        private readonly providerController: ProviderController\n    ) {}\n\n    public setDebounceMS(data: { milliseconds: number, commandId: string }): void {\n        this.logger.info(`[${data.commandId}] Starting setDebounceMS operation with duration ${data.milliseconds}`);\n\n        this.clientController.setDebounceMS(data);\n\n        this.logger.info(`[${data.commandId}] Operation setDebounceMS with duration ${data.milliseconds} completed`);\n    }\n\n    public getDebounceMS(data: { commandId: string }): number {\n        this.logger.info(`[${data.commandId}] Starting getDebounceMS operation.`);\n\n        return this.clientController.getDebounceMS(data);\n    }\n\n    public async query(data: { queryConfig: Glue42Search.QueryConfig, commandId: string }): Promise<Glue42Search.Query> {\n        this.logger.info(`[${data.commandId}] Starting query operation with config ${JSON.stringify(data.queryConfig)}`);\n\n        if (Array.isArray(data.queryConfig.providers) && !data.queryConfig.providers.length) {\n            throw new Error(\"Cannot sent a query with a defined empty array of providers, because this is an impossible query for complete.\");\n        }\n\n        if (Array.isArray(data.queryConfig.types) && !data.queryConfig.types.length) {\n            throw new Error(\"Cannot sent a query with a defined empty array of types, because this is an impossible query for complete.\");\n        }\n\n        const query = await this.clientController.query(data);\n\n        this.logger.info(`[${data.commandId}] Operation query with config ${JSON.stringify(data.queryConfig)} completed.`);\n\n        return query;\n    }\n\n    public async registerProvider(data: { config: Glue42Search.ProviderRegistrationConfig, commandId: string }): Promise<Glue42Search.Provider> {\n        this.logger.info(`[${data.commandId}] Starting registerProvider operation with config ${JSON.stringify(data.config)}`);\n\n        const provider = await this.providerController.processRegisterProvider(data);\n\n        this.logger.info(`[${data.commandId}] Operation registerProvider with config ${JSON.stringify(data.config)} completed.`);\n\n        return provider;\n    }\n\n    public async providers(data: { commandId: string }): Promise<Glue42Search.ProviderData[]> {\n        this.logger.info(`[${data.commandId}] Starting providers operation.`);\n\n        const allProvidersInfo = await this.glueController.getAllProvidersInfo();\n\n        const allProvidersData = allProvidersInfo.flatMap((provInfo) => provInfo.info.providers);\n\n        this.logger.info(`[${data.commandId}] Operation providers completed.`);\n\n        return allProvidersData;\n    }\n\n    public async types(data: { commandId: string }): Promise<Glue42Search.SearchType[]> {\n        this.logger.info(`[${data.commandId}] Starting types operation.`);\n\n        const allProvidersInfo = await this.glueController.getAllProvidersInfo();\n\n        const allProvidersData = allProvidersInfo.flatMap((provInfo) => provInfo.info.providers);\n\n        const allSupportedTypes = allProvidersData.filter((provData) => !!provData.types).flatMap((provData) => provData.types as Glue42Search.SearchType[]);\n\n        const uniqueSupportedTypes = [...new Set(allSupportedTypes)];\n\n        this.logger.info(`[${data.commandId}] Operation types completed.`);\n\n        return uniqueSupportedTypes;\n    }\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const extractErrorMsg = (error: any): string => {\n    const stringError = typeof error === \"string\" ?\n        error :\n        error.message ? JSON.stringify(error.message) :\n            JSON.stringify(error);\n\n    return stringError;\n};","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable indent */\nimport { Glue42Core } from \"@glue42/core\";\nimport { nanoid } from \"nanoid\";\nimport { Glue42Search } from \"../../search\";\nimport { ProviderModel } from \"../models/provider\";\nimport { AsyncSequelizer } from \"../services/sequelizer\";\nimport { GlueController } from \"./glue\";\nimport {\n    default as CallbackRegistryFactory,\n    CallbackRegistry\n} from \"callback-registry\";\nimport { operationDecoder, queryConfigDecoder, searchCancelRequestDecoder } from \"../shared/decoders\";\nimport { ActiveQuery, LegacySearchRequest, ProviderQueryDoneCommand, ProviderQueryErrorCommand, ProviderQueryResultCommand, SearchCancelRequest } from \"../shared/types\";\nimport { STALE_QUERY_TIMEOUT_MS } from \"../shared/constants\";\nimport { CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS, ProtocolProviderInfoResponse, ProtocolSearchRequest, ProtocolSearchResponse } from \"../shared/protocol\";\nimport { LimitsTracker } from \"../services/limits-tracker\";\nimport { ModelFactory } from \"../services/model-factory\";\nimport { extractErrorMsg } from \"../shared/utils\";\n\nexport class ProviderController {\n\n    private readonly registry: CallbackRegistry = CallbackRegistryFactory();\n    private readonly providersModels: { [key in string]: ProviderModel } = {};\n    private readonly activeQueries: { [key in string]: ActiveQuery } = {};\n\n    constructor(\n        private readonly logger: Glue42Core.Logger.API,\n        private readonly glueController: GlueController,\n        private readonly sequelizer: AsyncSequelizer,\n        private readonly limitsTracker: LimitsTracker,\n        private readonly modelsFactory: ModelFactory\n    ) {}\n\n    public async processRegisterProvider(data: { config: Glue42Search.ProviderRegistrationConfig, commandId: string }): Promise<Glue42Search.Provider> {\n\n        const { config, commandId } = data;\n\n        this.logger.info(`[${commandId}] enqueueing the provider registration process with config: ${JSON.stringify(config)}`);\n\n        const result = await this.sequelizer.enqueue<Glue42Search.Provider>(async () => {\n\n            const allProvidersInfo = await this.glueController.getAllProvidersInfo();\n\n            const allProvidersData = allProvidersInfo.flatMap((provInfo) => provInfo.info.providers);\n\n            if (allProvidersData.some((providerData) => providerData && providerData.name === config.name)) {\n                throw new Error(`Cannot register a new provider with name: ${config.name}, because there already is a provider with this name`);\n            }\n\n            await this.glueController.registerMainProviderMethod(this.handleSearchQueryRequest.bind(this));\n\n            const modelData: Glue42Search.ProviderData = {\n                id: nanoid(10),\n                name: config.name,\n                interopId: this.glueController.myInteropId,\n                appName: this.glueController.myAppName,\n                types: config.types\n            };\n\n            const model = this.modelsFactory.buildProviderModel(modelData, this);\n\n            this.providersModels[modelData.id] = model;\n\n            return model.exposeFacade();\n        });\n\n        this.logger.info(`[${commandId}] the provider with name: ${config.name} has been registered.`);\n\n        return result;\n    }\n\n    public processProviderOnQuery(data: { callback: (query: Glue42Search.ProviderQuery) => void, id: string, commandId: string }): Glue42Search.UnsubscribeFunction {\n        return this.registry.add(`on-search-query-${data.id}`, data.callback);\n    }\n\n    public processProviderOnQueryCancel(data: { callback: (query: { id: string; }) => void, id: string, commandId: string }): Glue42Search.UnsubscribeFunction {\n        return this.registry.add(`on-cancel-query-${data.id}`, data.callback);\n    }\n\n    public async processProviderUnregister(data: { id: string, commandId: string }): Promise<void> {\n\n        this.logger.info(`[${data.commandId}] enqueueing the provider un-registration with id: ${data.id}`);\n\n        await this.sequelizer.enqueue<void>(async () => {\n            this.cleanUpProvider(data.id, data.commandId);\n\n            if (Object.keys(this.providersModels).length) {\n                return;\n            }\n\n            await this.glueController.clearMainProviderMethod();\n        });\n\n        this.logger.info(`[${data.commandId}] the provider un-registration with id: ${data.id} completed`);\n\n    }\n\n    public async processProviderQueryDone(command: ProviderQueryDoneCommand): Promise<void> {\n\n        const { commandId, identification } = command;\n\n        this.activeQueries[identification.queryId]?.publisher.syncSuspendProvider(identification.providerId, commandId);\n\n        await this.sequelizer.enqueue<void>(async () => {\n\n            this.logger.trace(`[${commandId}] Processing a query done command with identification: ${JSON.stringify(identification)}`);\n\n            const activeQuery = this.activeQueries[identification.queryId];\n\n            if (!activeQuery) {\n                this.logger.warn(`[${commandId}] Cannot mark provider: ${identification.providerId} done with query ${identification.queryId}, because there is no active query with this id`);\n                return;\n            }\n\n            await this.cleanUpProviderQuery(identification.queryId, identification.providerId, commandId);\n\n            if (activeQuery.providersAtWork.length) {\n                this.logger.trace(`[${commandId}] Query done command completed, but there are more providers still at work.`);\n\n                return;\n            }\n\n            this.cleanUpQuery(identification.queryId, commandId);\n\n            this.logger.trace(`[${commandId}] Query is completed, signalling.`);\n        });\n    }\n\n    public processProviderQueryError(command: ProviderQueryErrorCommand): Promise<void> {\n        const { commandId, identification, error } = command;\n\n        this.logger.warn(`[${commandId}] Processing an error sent by provider: ${identification.providerId} for query id: ${identification.queryId} -> ${error}`);\n\n        this.activeQueries[identification.queryId]?.publisher.markProviderError(command);\n\n        return this.processProviderQueryDone(command);\n    }\n\n    public processProviderQueryResult(command: ProviderQueryResultCommand): void {\n        const { commandId, identification } = command;\n\n        const activeQuery = this.activeQueries[identification.queryId];\n\n        if (!activeQuery) {\n            const errorMessage = `Will not send this result to the client, because there is no active query with id ${identification.queryId}. Most likely this query was cancelled.`;\n            this.logger.warn(`[${command}] ${errorMessage}`);\n            throw new Error(errorMessage);\n        }\n\n        if (activeQuery.publisher.checkProviderSuspended(identification.providerId)) {\n            const errorMessage = `Will not send this result to the client, because there is no info about this provider in the active query with id ${identification.queryId}. Most likely this query was marked as done by this provider already.`;\n            this.logger.warn(`[${command}] ${errorMessage}`);\n            throw new Error(errorMessage);\n        }\n\n        const requestedTypes = activeQuery.requestedTypes;\n\n        if (requestedTypes && requestedTypes.every((searchType) => searchType.name !== command.result.type.name)) {\n            const errorMessage = `Will not send this result to the client, because this result has a defined type: ${command.result.type.name} which is not in the explicitly requested list of types by the client.`;\n            this.logger.warn(`[${command}] ${errorMessage}`);\n            throw new Error(errorMessage);\n        }\n\n        const testResult = this.limitsTracker.testResultLimit(command);\n\n        if (testResult?.maxLimitHit) {\n            const errorMessage = `Will not process this result from provider ${command.identification.providerId}, because this provider has reached the max results limit set by the client. This provider cannot send more result, marking it as done.`;\n            this.logger.info(errorMessage);\n            setTimeout(()=> this.processProviderQueryDone(command), 0);\n            throw new Error(errorMessage);\n        }\n\n        if (testResult?.maxLimitPerTypeHit) {\n            const errorMessage = `Will not process this result from provider ${command.identification.providerId}, because this provider has reached the max results limit per type as set by the client.`;\n            this.logger.info(errorMessage);\n            throw new Error(errorMessage);\n        }\n\n        this.logger.trace(`[${commandId}] An active query for query ${identification.queryId} was found and the provider is within limits, queueing the result`);\n\n        activeQuery.publisher.queueResult(command);\n\n        this.logger.trace(`[${commandId}] The query result was queued successfully.`);\n\n    }\n\n    private async handleSearchQueryRequest(args: any, caller: Glue42Core.Interop.Instance): Promise<any> {\n        const { operation } = args;\n\n        const validatedOperation = operationDecoder.runWithException(operation);\n\n        const commandId = nanoid(10);\n\n        switch (validatedOperation) {\n            case CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS.info:\n                return this.handleInfoOperation({ commandId });\n            case CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS.search:\n                return this.handleSearchOperation({ args, commandId }, caller);\n            case CLIENT_TO_PROVIDER_PROTOCOL_OPERATIONS.cancel:\n                return this.handleCancelOperation({ args, commandId });\n            default:\n                throw new Error(`Unrecognized operation: ${operation}`);\n        }\n    }\n\n    private async handleInfoOperation(request: { commandId: string }): Promise<ProtocolProviderInfoResponse> {\n\n        this.logger.info(`[${request.commandId}] handling an info operation`);\n\n        const allSupportedTypes: Glue42Search.SearchType[] = Object.values(this.providersModels).flatMap((providerModel) => providerModel.myProviderData.types || []);\n\n        const uniqueSupportedTypes = [...new Set(allSupportedTypes)];\n\n        const providers: Glue42Search.ProviderData[] = Object.values(this.providersModels).map((providerModel) => providerModel.myProviderData);\n\n        const response: ProtocolProviderInfoResponse = {\n            supportedTypes: uniqueSupportedTypes.map((supportedType) => supportedType.name),\n            providers: providers,\n            apiVersion: \"1\"\n        };\n\n        this.logger.info(`[${request.commandId}] responding to an info operation with: ${JSON.stringify(response)}`);\n\n        return response;\n\n    }\n\n    private async handleSearchOperation(request: { args: ProtocolSearchRequest | LegacySearchRequest, commandId: string }, caller: Glue42Core.Interop.Instance): Promise<ProtocolSearchResponse> {\n        const commandId = request.commandId;\n\n        const queryId = this.generateQueryId();\n\n        this.logger.info(`[${commandId}] Processing search operation with queryId: ${queryId} request details: ${JSON.stringify(request.args)}`);\n\n        const isLegacyRequest = this.checkRequestLegacy(request.args);\n\n        const validatedRequest = this.prepareRequest(request.args, isLegacyRequest, commandId);\n\n        this.logger.info(`[${commandId}] Search operation with queryId: ${queryId} is validated. Creating an active query and enqueueing calling the providers.`);\n\n        this.activeQueries[queryId] = {\n            queryId,\n            callerInstanceId: caller.instance as string,\n            providersAtWork: [],\n            requestedTypes: validatedRequest.types,\n            publisher: this.modelsFactory.buildPublisher(caller.instance as string, queryId, isLegacyRequest),\n            staleTimer: this.setClearStaleQueryTimer(queryId)\n        };\n\n        if (validatedRequest.providerLimits) {\n            this.limitsTracker.enableTracking(validatedRequest.providerLimits, queryId);\n        }\n\n        // needed to allow the search clients to process the query id\n        setTimeout(() => {\n            this.sequelizer.enqueue<void>(async () => {\n                try {\n                    this.logger.info(`[${commandId}] Calling the providers.`);\n                    this.callProviders(validatedRequest, queryId, commandId);\n                } catch (error) {\n                    this.logger.error(`[${commandId}] Error calling the providers: ${extractErrorMsg(error)}`);\n                }\n            });\n        }, 0);\n\n        this.logger.info(`[${commandId}] Search operation with queryID: ${queryId} processed successfully.`);\n\n        return { id: queryId };\n    }\n\n    private async handleCancelOperation(request: { args: SearchCancelRequest, commandId: string }): Promise<void> {\n\n        await this.sequelizer.enqueue<void>(async () => {\n            const validation = searchCancelRequestDecoder.run(request.args);\n    \n            if (!validation.ok) {\n                const errorMsg = `Cannot process a cancel request, because of validation error: ${JSON.stringify(validation.error)}`;\n    \n                this.logger.warn(`[${request.commandId}] ${errorMsg}`);\n                throw new Error(errorMsg);\n            }\n    \n            const validatedRequest = validation.result;\n    \n            const activeQuery = this.activeQueries[validatedRequest.id];\n    \n            if (!activeQuery) {\n                return;\n            }\n    \n            clearTimeout(activeQuery.staleTimer);\n    \n            activeQuery.publisher.cancel(request.commandId);\n    \n            delete this.activeQueries[validatedRequest.id];\n    \n            activeQuery.providersAtWork.forEach((provider) => this.registry.execute(`on-cancel-query-${provider.myProviderData.id}`, { id: validatedRequest.id }));\n        });\n\n    }\n\n    private generateQueryId(): string {\n        const queryId = nanoid(10);\n\n        if (this.activeQueries[queryId]) {\n            return this.generateQueryId();\n        }\n\n        return queryId;\n    }\n\n    private translateLegacySearchRequest(legacyRequest: LegacySearchRequest): Glue42Search.QueryConfig {\n        return {\n            search: legacyRequest.search,\n            types: legacyRequest.types?.map<Glue42Search.SearchType>((searchType) => ({ name: searchType })),\n            providerLimits: {\n                maxResults: legacyRequest.limit,\n                maxResultsPerType: legacyRequest.categoryLimit\n            }\n        };\n    }\n\n    private checkRequestLegacy(searchRequest: ProtocolSearchRequest | LegacySearchRequest): boolean {\n        return typeof (searchRequest as ProtocolSearchRequest).apiVersion === \"undefined\";\n    }\n\n    private callProviders(validatedRequest: Glue42Search.QueryConfig, queryId: string, commandId: string): void {\n        let providers: ProviderModel[] = validatedRequest.providers ?\n            this.getFilteredProviderModels(validatedRequest.providers)\n            : Object.values(this.providersModels);\n\n        this.logger.trace(`[${commandId}] initial providers filtration yielded: ${JSON.stringify(providers.map((p) => p.myProviderData.name).join(\", \"))}`);\n\n        providers = validatedRequest.types ? this.getFilteredProvidersBySearchTypes(providers, validatedRequest.types) : providers;\n\n        this.logger.trace(`[${commandId}] search type providers filtration yielded: ${JSON.stringify(providers.map((p) => p.myProviderData.name).join(\", \"))}`);\n\n        this.activeQueries[queryId].publisher.configureProviders(providers);\n\n        this.activeQueries[queryId].providersAtWork.push(...providers);\n\n        providers.forEach((provider) => this.callProvider(provider, validatedRequest, queryId, commandId));\n    }\n\n    private callProvider(provider: ProviderModel, validatedRequest: Glue42Search.QueryConfig, queryId: string, commandId: string): void {\n        const queryModel = this.modelsFactory.buildProviderQueryModel(validatedRequest, { queryId, providerId: provider.myProviderData.id }, this);\n\n        const queryFacade = queryModel.exposeFacade();\n\n        this.logger.info(`[${commandId}] The query facade for provider: ${provider.myProviderData.id} with name ${provider.myProviderData.name} is ready, raising the event for query ID: ${queryId}.`);\n\n        this.registry.execute(`on-search-query-${provider.myProviderData.id}`, queryFacade);\n    }\n\n    private getFilteredProviderModels(providers: Glue42Search.ProviderData[]): ProviderModel[] {\n\n        const filtered = providers.reduce<ProviderModel[]>((providers, provider) => {\n            if (this.providersModels[provider.id]) {\n                providers.push(this.providersModels[provider.id]);\n            }\n\n            return providers;\n        }, []);\n\n        return filtered;\n    }\n\n    private getFilteredProvidersBySearchTypes(providers: ProviderModel[], searchTypes: Glue42Search.SearchType[]): ProviderModel[] {\n\n        const filtered = providers.filter((provider) => {\n            return provider.myProviderData.types?.some((providerSearchType) => searchTypes.some((searchType) => searchType.name === providerSearchType.name));\n        });\n\n        return filtered;\n    }\n\n    private setClearStaleQueryTimer(queryId: string): NodeJS.Timeout {\n        return setTimeout(() => {\n\n            const commandId = nanoid(10);\n\n            this.logger.info(`[${commandId}] Stale query timer is activated for queryId: ${queryId}`);\n\n            const activeQuery = this.activeQueries[queryId];\n\n            if (!activeQuery) {\n                this.logger.info(`[${commandId}] No active query was found, this was a false activation.`);\n\n                return;\n            }\n\n            this.logger.info(`[${commandId}] force-marking the query as done`);\n\n            this.cleanUpQuery(queryId, commandId);\n\n            this.logger.info(`[${commandId}] the stale query was cleared.`);\n\n        }, STALE_QUERY_TIMEOUT_MS);\n    }\n\n    private prepareRequest(searchRequest: LegacySearchRequest | Glue42Search.QueryConfig, isLegacyRequest: boolean, commandId: string): Glue42Search.QueryConfig {\n        const parsedRequest = isLegacyRequest ? this.translateLegacySearchRequest(searchRequest as LegacySearchRequest) : searchRequest;\n\n        const validation = queryConfigDecoder.run(parsedRequest);\n\n        if (!validation.ok) {\n            const errorMsg = `Cannot process a search request, because of validation error: ${JSON.stringify(validation.error)}`;\n\n            this.logger.warn(`[${commandId}] ${errorMsg}`);\n            throw new Error(errorMsg);\n        }\n\n        const validatedRequest = validation.result;\n\n        return validatedRequest;\n    }\n\n    private cleanUpQuery(queryId: string, commandId: string): void {\n        const activeQuery = this.activeQueries[queryId];\n\n        clearTimeout(activeQuery.staleTimer);\n\n        activeQuery.publisher.cleanPublisher(commandId);\n\n        delete this.activeQueries[queryId];\n        this.limitsTracker.cleanTracking(queryId);\n    }\n\n    private cleanUpProvider(providerId: string, commandId: string): void {\n        this.registry.clearKey(`on-search-query-${providerId}`);\n        this.registry.clearKey(`on-cancel-query-${providerId}`);\n\n        delete this.providersModels[providerId];\n\n        const queriesWithProvider = Object.values(this.activeQueries).filter((query) => !query.publisher.checkProviderSuspended(providerId));\n\n        queriesWithProvider.forEach((query) => {\n            this.processProviderQueryDone({\n                identification: {\n                    queryId: query.queryId,\n                    providerId\n                },\n                commandId\n            });\n        });\n    }\n\n    private async cleanUpProviderQuery(queryId: string, providerId: string, commandId: string): Promise<void> {\n        const activeQuery = this.activeQueries[queryId];\n\n        if (!activeQuery) {\n            this.logger.warn(`[${commandId}] Cannot clean up a provider query ${queryId} for provider ${providerId} because there is no such active query`);\n            return;\n        }\n\n        activeQuery.providersAtWork = activeQuery.providersAtWork.filter((provider) => provider.myProviderData.id !== providerId);\n\n        await activeQuery.publisher.markProviderDone(providerId, commandId);\n    }\n}\n","import { Glue42Search } from \"../search\";\nimport { MainController } from \"./controllers/main\";\nimport { nonNegativeNumberDecoder, providerRegistrationConfig, queryConfigDecoder } from \"./shared/decoders\";\nimport { nanoid } from \"nanoid\";\nimport { version } from \"../package.json\";\n\nexport class SearchFacade {\n\n    constructor(\n        private readonly main: MainController\n    ) {}\n\n    public exposeApi(): Glue42Search.API {\n\n        const api: Glue42Search.API = {\n            version,\n            setDebounceMS: this.setDebounceMS.bind(this),\n            getDebounceMS: this.getDebounceMS.bind(this),\n            listProviders: this.providers.bind(this),\n            listTypes: this.types.bind(this),\n            query: this.query.bind(this),\n            registerProvider: this.registerProvider.bind(this)\n        };\n\n        return Object.freeze(api);\n    }\n\n    private setDebounceMS(milliseconds: number): void {\n        nonNegativeNumberDecoder.runWithException(milliseconds);\n\n        const commandId = nanoid(10);\n\n        return this.main.setDebounceMS({ milliseconds, commandId });\n    }\n\n    private getDebounceMS(): number {\n        const commandId = nanoid(10);\n\n        return this.main.getDebounceMS({ commandId });\n    }\n\n    private async providers(): Promise<Glue42Search.ProviderData[]> {\n        const commandId = nanoid(10);\n\n        return this.main.providers({ commandId });\n    }\n\n    private async types(): Promise<Glue42Search.SearchType[]> {\n        const commandId = nanoid(10);\n\n        return this.main.types({ commandId });\n    }\n\n    private async query(queryConfig: Glue42Search.QueryConfig): Promise<Glue42Search.Query> {\n        const verifiedConfig = queryConfigDecoder.runWithException(queryConfig);\n\n        const commandId = nanoid(10);\n\n        return this.main.query({ queryConfig: verifiedConfig, commandId });\n    }\n\n    private async registerProvider(config: Glue42Search.ProviderRegistrationConfig): Promise<Glue42Search.Provider> {\n        const verifiedConfig = providerRegistrationConfig.runWithException(config);\n\n        const commandId = nanoid(10);\n\n        return this.main.registerProvider({ config: verifiedConfig, commandId });\n    }\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class AsyncSequelizer {\n\n    private readonly queue: Array<{ action: () => Promise<any>; resolve: (args?: any) => void; reject: (err?: any) => void }> = [];\n    private isExecutingQueue = false;\n\n    constructor(private readonly minSequenceInterval: number = 0) { }\n\n    public enqueue<T>(action: () => Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.queue.push({ action, resolve, reject });\n            this.executeQueue();\n        });\n    }\n\n    private async executeQueue(): Promise<void> {\n        if (this.isExecutingQueue) {\n            return;\n        }\n\n        this.isExecutingQueue = true;\n\n        while (this.queue.length) {\n            const operation = this.queue.shift();\n\n            // this satisfies the strict typescript mode\n            if (!operation) {\n                this.isExecutingQueue = false;\n                return;\n            }\n\n            try {\n                const actionResult = await operation.action();\n                operation.resolve(actionResult);\n            } catch (error) {\n                operation.reject(error);\n            }\n\n            await this.intervalBreak();\n        }\n\n        this.isExecutingQueue = false;\n    }\n\n    private intervalBreak(): Promise<void> {\n        return new Promise((res) => setTimeout(res, this.minSequenceInterval));\n    }\n}\n","import { Glue42Search } from \"../../search\";\nimport { LimitTestResult, ProviderQueryLimit, ProviderQueryResultCommand, QueryProviderResultsTracker } from \"../shared/types\";\n\n\n\n// important to work in O(1)\nexport class LimitsTracker {\n    private readonly limitsLookup: { [key in string]: { [key in string]: QueryProviderResultsTracker } } = {};\n    private readonly limitsData: { [key in string]: ProviderQueryLimit } = {};\n\n    public enableTracking(limits: Glue42Search.ProviderLimits, queryId: string): void {\n        this.limitsLookup[queryId] = {};\n        this.limitsData[queryId] = {\n            maxResults: limits.maxResults ? limits.maxResults : Number.MAX_SAFE_INTEGER,\n            maxResultsPerType: limits.maxResultsPerType ? limits.maxResultsPerType : Number.MAX_SAFE_INTEGER\n        };\n    }\n\n    public testResultLimit(command: ProviderQueryResultCommand): LimitTestResult | undefined {\n        const foundLookup = this.limitsLookup[command.identification.queryId];\n        const limitData = this.limitsData[command.identification.queryId];\n\n        if (!foundLookup || !limitData) {\n            return;\n        }\n\n        let providerStateLookup = foundLookup[command.identification.providerId];\n\n        if (!providerStateLookup) {\n            providerStateLookup = { total: 0 };\n            foundLookup[command.identification.providerId] = providerStateLookup;\n        }\n\n        providerStateLookup.total = ++providerStateLookup.total;\n\n        if (providerStateLookup.total > limitData.maxResults) {\n            return { maxLimitHit: true };\n        }\n\n        const resultTypeName = command.result.type.name;\n\n        providerStateLookup[resultTypeName] = providerStateLookup[resultTypeName] ? ++providerStateLookup[resultTypeName] : 1;\n\n        if (providerStateLookup[resultTypeName] > limitData.maxResultsPerType) {\n            return { maxLimitPerTypeHit: true };\n        }\n\n    }\n\n    public cleanTracking(queryId: string): void {\n        delete this.limitsLookup[queryId];\n        delete this.limitsData[queryId];\n    }\n}","import { Glue42Core } from \"@glue42/core\";\nimport { nanoid } from \"nanoid\";\nimport { Glue42Search } from \"../../search\";\nimport { ClientController } from \"../controllers/client\";\n\nexport class ClientQuery {\n\n    constructor(\n        private readonly controller: ClientController,\n        private readonly logger: Glue42Core.Logger.API,\n        private readonly masterQueryId: string\n    ) {}\n\n    public exposeFacade(): Glue42Search.Query {\n        const providerQueryFacade: Glue42Search.Query = {\n            cancel: this.cancel.bind(this),\n            onResults: this.onResults.bind(this),\n            onCompleted: this.onCompleted.bind(this),\n            onError: this.onError.bind(this)\n        };\n\n        return Object.freeze(providerQueryFacade);\n    }\n\n    private async cancel(): Promise<void> {\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid query cancel request, forwarding to the controller.`);\n\n        await this.controller.cancelQuery(this.masterQueryId, commandId);\n\n        this.logger.info(`[${commandId}] the cancel request was completed.`);\n    }\n\n    private onResults(callback: (resultBatch: Glue42Search.QueryResultBatch) => void): Glue42Search.UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"onQuery requires a callback of type function\");\n        }\n\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid query onResults request, forwarding to the controller.`);\n\n        const unsubscribe = this.controller.processClientOnResults({ callback, masterQueryId: this.masterQueryId, commandId });\n\n        this.logger.info(`[${commandId}] the onResults request was completed.`);\n\n        return unsubscribe;\n    }\n\n    private onCompleted(callback: () => void): Glue42Search.UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"onQuery requires a callback of type function\");\n        }\n\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid query onCompleted request, forwarding to the controller.`);\n\n        const unsubscribe = this.controller.processClientOnCompleted({ callback, masterQueryId: this.masterQueryId, commandId });\n\n        this.logger.info(`[${commandId}] the onCompleted request was completed.`);\n\n        return unsubscribe;\n    }\n\n    private onError(callback: (error: Glue42Search.QueryError) => void): Glue42Search.UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"onQuery requires a callback of type function\");\n        }\n\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid query onError request, forwarding to the controller.`);\n\n        const unsubscribe = this.controller.processClientOnError({ callback, masterQueryId: this.masterQueryId, commandId });\n\n        this.logger.info(`[${commandId}] the onError request was completed.`);\n\n        return unsubscribe;\n    }\n\n}","import { Glue42Core } from \"@glue42/core\";\nimport { nanoid } from \"nanoid\";\nimport { Glue42Search } from \"../../search\";\nimport { ProviderController } from \"../controllers/provider\";\n\nexport class ProviderModel {\n\n    constructor(\n        private readonly myData: Glue42Search.ProviderData,\n        private readonly controller: ProviderController,\n        private readonly logger: Glue42Core.Logger.API\n    ) {}\n\n    private get id(): string {\n        return this.myData.id;\n    }\n\n    private get name(): string {\n        return this.myData.name;\n    }\n\n    private get appName(): string | undefined {\n        return this.myData.appName;\n    }\n\n    private get types(): Glue42Search.SearchType[] | undefined {\n        return this.myData.types;\n    }\n\n    public get myProviderData(): Glue42Search.ProviderData {\n        return Object.assign({}, this.myData);\n    }\n\n    public exposeFacade(): Glue42Search.Provider {\n        const providerFacade: Glue42Search.Provider = {\n            interopId: this.myData.interopId,\n            id: this.id,\n            name: this.name,\n            appName: this.appName,\n            types: this.types,\n            onQuery: this.onQuery.bind(this),\n            onQueryCancel: this.onQueryCancel.bind(this),\n            unregister: this.unregister.bind(this)\n        };\n\n        return Object.freeze(providerFacade);\n    }\n\n    private onQuery(callback: (query: Glue42Search.ProviderQuery) => void): Glue42Search.UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"onQuery requires a callback of type function\");\n        }\n\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid onQuery request, forwarding to the controller.`);\n\n        const unsubscribe = this.controller.processProviderOnQuery({ callback, id: this.id, commandId });\n\n        this.logger.info(`[${commandId}] the onQuery request was completed.`);\n\n        return unsubscribe;\n    }\n\n    private onQueryCancel(callback: (query: { id: string; }) => void): Glue42Search.UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"onQuery requires a callback of type function\");\n        }\n\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid onQueryCancel request, forwarding to the controller.`);\n\n        const unsubscribe = this.controller.processProviderOnQueryCancel({ callback, id: this.id, commandId });\n\n        this.logger.info(`[${commandId}] the onQueryCancel request was completed.`);\n\n        return unsubscribe;\n    }\n\n    private async unregister(): Promise<void> {\n        const commandId = nanoid(10);\n\n        this.logger.info(`[${commandId}] received a valid unregister request, forwarding to the controller.`);\n\n        await this.controller.processProviderUnregister({ id: this.id, commandId });\n\n        this.logger.info(`[${commandId}] the unregister request was completed.`);\n    }\n\n}","import { Glue42Core } from \"@glue42/core\";\nimport { nanoid } from \"nanoid\";\nimport { Glue42Search } from \"../../search\";\nimport { ProviderController } from \"../controllers/provider\";\nimport { nonEmptyStringDecoder, queryResultDecoder } from \"../shared/decoders\";\nimport { QueryIdentification } from \"../shared/types\";\nimport { extractErrorMsg } from \"../shared/utils\";\n\nexport class ProviderQueryModel {\n    constructor(\n        private readonly myData: Glue42Search.QueryConfig,\n        private readonly controller: ProviderController,\n        private readonly logger: Glue42Core.Logger.API,\n        private readonly identification: QueryIdentification\n    ) {}\n\n    private get id(): string {\n        return this.identification.queryId;\n    }\n\n    private get search(): string {\n        return this.myData.search;\n    }\n\n    private get providers(): Glue42Search.ProviderData[] | undefined {\n        return this.myData.providers;\n    }\n\n    private get types(): Glue42Search.SearchType[] | undefined {\n        return this.myData.types;\n    }\n\n    private get providerLimits(): Glue42Search.ProviderLimits | undefined {\n        return this.myData.providerLimits;\n    }\n\n    public get myQueryData(): Glue42Search.QueryConfig {\n        return Object.assign({}, this.myData);\n    }\n\n    public exposeFacade(): Glue42Search.ProviderQuery {\n        const providerQueryFacade: Glue42Search.ProviderQuery = {\n            id: this.id,\n            search: this.search,\n            providers: this.providers,\n            types: this.types,\n            providerLimits: this.providerLimits,\n            sendResult: this.sendResult.bind(this),\n            error: this.error.bind(this),\n            done: this.done.bind(this)\n        };\n\n        return Object.freeze(providerQueryFacade);\n    }\n\n    private sendResult(result: Glue42Search.QueryResult): void {\n        queryResultDecoder.runWithException(result);\n\n        const commandId = nanoid(10);\n\n        this.logger.trace(`[${commandId}] Received a valid result, forwarding to the controller`);\n\n        return this.controller.processProviderQueryResult({ identification: this.identification, result, commandId });\n    }\n\n    private error(error: string): void {\n        const commandId = nanoid(10);\n\n        nonEmptyStringDecoder.runWithException(error);\n\n        this.logger.trace(`[${commandId}] Received a valid error, forwarding to the controller`);\n\n        this.controller.processProviderQueryError({ identification: this.identification, error, commandId }).catch((error) => this.logger.warn(`Error processing the error signal for this provider: ${this.id}, error: ${extractErrorMsg(error)}`));\n    }\n\n    private done(): void {\n        const commandId = nanoid(10);\n\n        this.logger.trace(`[${commandId}] Received a valid done, forwarding to the controller`);\n\n        this.controller.processProviderQueryDone({ identification: this.identification, commandId }).catch((error) => this.logger.warn(`Error processing the done signal for this provider: ${this.identification.providerId}, error: ${extractErrorMsg(error)}`));\n    }\n\n}","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42Search } from \"../../search\";\nimport { GlueController } from \"../controllers/glue\";\nimport { ProviderModel } from \"../models/provider\";\nimport { FLUSH_TIMEOUT_MS } from \"../shared/constants\";\nimport { LegacySearchResultItem, PublisherQueryResultBatch, ProviderQueryResultCommand, ProviderQueryErrorCommand, ProviderQueue } from \"../shared/types\";\nimport { extractErrorMsg } from \"../shared/utils\";\nimport { AsyncSequelizer } from \"./sequelizer\";\n\nexport class QueryResultsPublisher {\n\n    private queues: { [key in string]: ProviderQueue } = {};\n\n    constructor(\n        private readonly sequelizer: AsyncSequelizer,\n        private readonly glueController: GlueController,\n        private readonly logger: Glue42Core.Logger.API,\n        private readonly clientInstanceId: string,\n        private readonly queryId: string,\n        private readonly isLegacy: boolean\n    ) {}\n\n    public checkProviderSuspended(providerId: string): boolean {\n        return this.queues[providerId] ? !!this.queues[providerId].suspended : false;\n    }\n\n    public syncSuspendProvider(providerId: string, commandId: string): void {\n        const providerQueue = this.queues[providerId];\n\n        if (!providerQueue) {\n            this.logger.warn(`[${commandId}] Cannot suspend provider: ${providerId}, because there is no provider queue. This happens when the provider queue was already cancelled or completed`);\n\n            return;\n        }\n\n        providerQueue.suspended = true;\n    }\n\n    public configureProviders(providers: ProviderModel[]): void {\n        providers.forEach((provider) => {\n            this.queues[provider.myProviderData.id] = {\n                providerData: provider,\n                pendingResults: []\n            };\n        });\n    }\n\n    public queueResult(command: ProviderQueryResultCommand): void {\n        const { commandId, identification } = command;\n\n        this.logger.trace(`[${commandId}] Queuing a new result from provider: ${identification.providerId}`);\n\n        const providerQueue = this.queues[identification.providerId];\n\n        if (!providerQueue) {\n            this.logger.warn(`[${commandId}] Cannot queue this result, because there is no provider queue. This happens when the provider queue was already cancelled or completed`);\n\n            return;\n        }\n\n        const result = this.isLegacy ? this.translateLegacySearchItem(command.result) : command.result;\n\n        providerQueue.pendingResults.push(result);\n\n        clearTimeout(providerQueue.flushTimer);\n\n        if (providerQueue.pendingResults.length === 10) {\n            this.logger.trace(`[${commandId}] Reached the limit in the queue buffer, flushing to the client.`);\n            this.flushProviderQueue(identification.providerId, commandId);\n\n            return;\n        }\n\n        this.logger.trace(`[${commandId}] The limit in the queue buffer is not reached yet, setting a flush timer.`);\n\n        providerQueue.flushTimer = setTimeout(() => {\n            this.logger.trace(`[${commandId}] Reached the time limit in the queue buffer, flushing to the client.`);\n            this.flushProviderQueue(identification.providerId, commandId);\n        }, FLUSH_TIMEOUT_MS);\n    }\n\n    public cancel(commandId: string): void {\n        this.logger.trace(`[${commandId}] Cancelling queue ${this.queryId}.`);\n\n        Object.values(this.queues).forEach((queue) => clearTimeout(queue.flushTimer));\n\n        this.queues = {};\n\n        this.logger.trace(`[${commandId}] Queue ${this.queryId} publisher cancelled.`);\n\n    }\n\n    public async markProviderDone(providerId: string, commandId: string): Promise<void> {\n        this.logger.trace(`[${commandId}] Marking provider ${providerId} as done.`);\n\n        const providerQueue = this.queues[providerId];\n\n        if (!providerQueue) {\n            this.logger.info(`[${commandId}] Cannot mark this queue as done, because there is no provider queue. This happens when the provider queue was already cancelled, completed or the provider sent an error`);\n\n            return;\n        }\n\n        clearTimeout(providerQueue.flushTimer);\n\n        await this.flushProviderQueue(providerId, commandId);\n\n        delete this.queues[providerId];\n\n        this.logger.trace(`[${commandId}] Provider ${providerId} marked as done.`);\n    }\n\n    public markProviderError(command: ProviderQueryErrorCommand): void {\n        const providerQueue = this.queues[command.identification.providerId];\n\n        if (!providerQueue) {\n            this.logger.warn(`[${command.commandId}] Cannot mark this provider as errored, because there is no provider queue. This happens when the provider queue was already cancelled, completed or the provider sent and error`);\n\n            return;\n        }\n\n        this.glueController.sendClientErrorMessage(command.error, this.clientInstanceId, this.queryId, providerQueue.providerData.myProviderData)\n            .catch((error) => this.logger.warn(`[${command.commandId}] The client errored when handling error message for query: ${this.queryId} -> ${extractErrorMsg(error)}`));\n    }\n\n    public cleanPublisher(commandId: string): void {\n        Object.values(this.queues).forEach((queue) => clearTimeout(queue.flushTimer));\n\n        this.queues = {};\n\n        this.glueController.sendClientQueueCompleted(this.clientInstanceId, this.queryId)\n            .catch((error) => this.logger.warn(`[${commandId}] The client errored when handling search end message for query: ${this.queryId} -> ${extractErrorMsg(error)}`));\n    }\n\n    private async flushProviderQueue(providerId: string, commandId: string): Promise<void> {\n\n        await this.sequelizer.enqueue<void>(async () => {\n            const providerQueue = this.queues[providerId];\n\n            if (!providerQueue) {\n                this.logger.warn(`[${commandId}] Cannot flush this queue, because there is no provider queue. This happens when the provider queue was already cancelled, completed or the provider sent and error`);\n\n                return;\n            }\n\n            if (!providerQueue.pendingResults.length) {\n                this.logger.info(`[${commandId}] This provider does not have any pending results to flush.`);\n                return;\n            }\n\n            const resultBatch: PublisherQueryResultBatch = {\n                results: providerQueue.pendingResults,\n                provider: providerQueue.providerData.myProviderData\n            };\n\n            providerQueue.pendingResults = [];\n\n            try {\n                await this.glueController.sendClientResultsBatch(resultBatch, this.clientInstanceId, this.queryId);\n            } catch (error) {\n                this.logger.warn(`[${commandId}] The client errored when handling search results for query: ${this.queryId} -> ${extractErrorMsg(error)}`);\n            }\n        });\n\n    }\n\n    private translateLegacySearchItem(searchResult: Glue42Search.QueryResult): LegacySearchResultItem {\n        return {\n            type: searchResult.type.name,\n            category: searchResult.type.displayName,\n            id: searchResult.id,\n            displayName: searchResult.displayName,\n            description: searchResult.description,\n            iconURL: searchResult.iconURL,\n            action: searchResult.action\n        };\n    }\n}","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42Search } from \"../../search\";\nimport { ClientController } from \"../controllers/client\";\nimport { GlueController } from \"../controllers/glue\";\nimport { ProviderController } from \"../controllers/provider\";\nimport { ClientQuery } from \"../models/client-query\";\nimport { ProviderModel } from \"../models/provider\";\nimport { ProviderQueryModel } from \"../models/provider-query\";\nimport { QueryIdentification } from \"../shared/types\";\nimport { QueryResultsPublisher } from \"./publisher\";\nimport { AsyncSequelizer } from \"./sequelizer\";\n\nexport class ModelFactory {\n\n    constructor(\n        private readonly glueController: GlueController,\n        private readonly glue: Glue42Core.GlueCore,\n        private readonly flushSequelizer: AsyncSequelizer\n    ) {}\n\n    public buildProviderModel(providerData: Glue42Search.ProviderData, controller: ProviderController): ProviderModel {\n        return new ProviderModel(providerData, controller, this.glue.logger.subLogger(`search.provider.model.${providerData.name}`));\n    }\n\n    public buildProviderQueryModel(queryConfig: Glue42Search.QueryConfig, identification: QueryIdentification, controller: ProviderController): ProviderQueryModel {\n        return new ProviderQueryModel(queryConfig, controller, this.glue.logger.subLogger(`search.provider.${identification.providerId}.query.${identification.queryId}`), identification);\n    }\n\n    public buildPublisher(clientInstanceId: string, queryId: string, isLegacy: boolean): QueryResultsPublisher {\n        return new QueryResultsPublisher(\n            this.flushSequelizer,\n            this.glueController,\n            this.glue.logger.subLogger(`search.results.publisher.${queryId}`),\n            clientInstanceId, queryId, isLegacy\n        );\n    }\n\n    public buildClientQueryModel(masterQueryId: string, controller: ClientController): ClientQuery {\n        return new ClientQuery(controller, this.glue.logger.subLogger(`search.provider.model.${masterQueryId}`), masterQueryId);\n    }\n}","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42Search } from \"../../search\";\nimport { ClientController } from \"../controllers/client\";\nimport { GlueController } from \"../controllers/glue\";\nimport { MainController } from \"../controllers/main\";\nimport { ProviderController } from \"../controllers/provider\";\nimport { SearchFacade } from \"../facade\";\nimport { FLUSH_SEQUELIZER_INTERVAL_MS, SEQUELIZER_INTERVAL_MS } from \"./constants\";\nimport { AsyncSequelizer } from \"../services/sequelizer\";\nimport { LimitsTracker } from \"../services/limits-tracker\";\nimport { ModelFactory } from \"../services/model-factory\";\n\nexport class IoC {\n    private _glueController!: GlueController;\n    private _facade!: SearchFacade;\n    private _mainController!: MainController;\n    private _providerController!: ProviderController;\n    private _clientController!: ClientController;\n    private _asyncSequelizer!: AsyncSequelizer;\n    private _flushSequelizer!: AsyncSequelizer;\n    private _limitsTracker!: LimitsTracker;\n    private _modelFactory!: ModelFactory;\n\n    constructor(\n        private readonly glue: Glue42Core.GlueCore, private readonly config?: Glue42Search.Config\n    ) {}\n\n    public async initiate(): Promise<void> {\n        await this.clientController.start();\n    }\n\n    public get glueController(): GlueController {\n        if (!this._glueController) {\n            this._glueController = new GlueController(this.glue);\n        }\n\n        return this._glueController;\n    }\n\n    public get main(): MainController {\n        if (!this._mainController) {\n            this._mainController = new MainController(\n                this.glue.logger.subLogger(\"search.main.controller\"),\n                this.glueController,\n                this.clientController,\n                this.providerController\n            );\n        }\n\n        return this._mainController;\n    }\n\n    public get clientController(): ClientController {\n        if (!this._clientController) {\n            this._clientController = new ClientController(\n                this.glue.logger.subLogger(\"search.client.controller\"),\n                this.glueController,\n                this.modelFactory\n            );\n        }\n\n        return this._clientController;\n    }\n\n    public get providerController(): ProviderController {\n        if (!this._providerController) {\n            this._providerController = new ProviderController(\n                this.glue.logger.subLogger(\"search.provider.controller\"),\n                this.glueController,\n                this.sequelizer,\n                this.limitsTracker,\n                this.modelFactory\n            );\n        }\n\n        return this._providerController;\n    }\n\n    public get facade(): SearchFacade {\n        if (!this._facade) {\n            this._facade = new SearchFacade(this.main);\n        }\n\n        return this._facade;\n    }\n\n    public get sequelizer(): AsyncSequelizer {\n        if (!this._asyncSequelizer) {\n            this._asyncSequelizer = new AsyncSequelizer(SEQUELIZER_INTERVAL_MS);\n        }\n\n        return this._asyncSequelizer;\n    }\n\n    public get flushSequelizer(): AsyncSequelizer {\n        if (!this._flushSequelizer) {\n            this._flushSequelizer = new AsyncSequelizer(FLUSH_SEQUELIZER_INTERVAL_MS);\n        }\n\n        return this._flushSequelizer;\n    }\n\n    public get limitsTracker(): LimitsTracker {\n        if (!this._limitsTracker) {\n            this._limitsTracker = new LimitsTracker();\n        }\n\n        return this._limitsTracker;\n    }\n\n    public get modelFactory(): ModelFactory {\n        if (!this._modelFactory) {\n            this._modelFactory = new ModelFactory(\n                this.glueController,\n                this.glue,\n                this.flushSequelizer\n            );\n        }\n\n        return this._modelFactory;\n    }\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { GlueSearchFactoryFunction, Glue42Search } from \"../search.d\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { IoC } from \"./shared/ioc\";\n\nconst factoryFunction: GlueSearchFactoryFunction = async (glue: Glue42Core.GlueCore, config?: Glue42Search.Config): Promise<void> => {\n\n    const ioc = new IoC(glue, config);\n\n    await ioc.initiate();\n\n    (glue as any).search = ioc.facade.exposeApi();\n};\n\n// attach to window object\nif (typeof window !== \"undefined\") {\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    (window as any).GlueSearch = factoryFunction;\n}\n\nexport default factoryFunction;\n"],"names":["CallbackRegistryFactory"],"mappings":"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"}